[
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aws-kb-retrieval-server",
    "description": "An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bed...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aws-kb-retrieval-server@sha256:1522c7ffee3f84faf7a157f7c185cb0923123823f19bfd14ce26498fcd1377db",
        "environmentVariables": [
          {
            "name": "AWS_ACCESS_KEY_ID",
            "value": "{aws-kb-retrieval-server.access_key_id}",
            "variables": {
              "aws-kb-retrieval-server.access_key_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "AWS_SECRET_ACCESS_KEY",
            "value": "{aws.secret_access_key}",
            "variables": {
              "aws.secret_access_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 3855,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aws-kb-retrieval-server.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 6,
        "tags": [
          "aws",
          "devops"
        ],
        "title": "AWS KB Retrieval (Archived)",
        "tools": [
          {
            "name": "retrieve_from_aws_kb"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aws-kb-retrieval-server.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/azure",
    "description": "The Azure MCP Server, bringing the power of Azure to your agents.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcr.microsoft.com/azure-sdk/azure-mcp@sha256:28ac4216fb19897a4af5b05bf88616da5dceb7ecc1be643a2ecd412e0476fc85",
        "packageArguments": [
          {
            "type": "positional",
            "value": "server"
          },
          {
            "type": "positional",
            "value": "start"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Azure/azure-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 1167,
        "icon": "https://avatars.githubusercontent.com/u/6844498?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "Azure",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/azure.md",
        "resources": {},
        "source": "https://github.com/Azure/azure-mcp/tree/1ea702cb489ba95c5d9bea8d41fc18e9343703f8",
        "tags": [
          "azure",
          "devops"
        ],
        "title": "Azure",
        "tools": [
          {
            "name": "azmcp-appconfig-account-list"
          },
          {
            "name": "azmcp-appconfig-kv-delete"
          },
          {
            "name": "azmcp-appconfig-kv-list"
          },
          {
            "name": "azmcp-appconfig-kv-lock"
          },
          {
            "name": "azmcp-appconfig-kv-set"
          },
          {
            "name": "azmcp-appconfig-kv-show"
          },
          {
            "name": "azmcp-appconfig-kv-unlock"
          },
          {
            "name": "azmcp-cosmos-account-list"
          },
          {
            "name": "azmcp-cosmos-database-container-item-query"
          },
          {
            "name": "azmcp-cosmos-database-container-list"
          },
          {
            "name": "azmcp-cosmos-database-list"
          },
          {
            "name": "azmcp-extension-az"
          },
          {
            "name": "azmcp-extension-azd"
          },
          {
            "name": "azmcp-group-list"
          },
          {
            "name": "azmcp-monitor-log-query"
          },
          {
            "name": "azmcp-monitor-table-list"
          },
          {
            "name": "azmcp-monitor-workspace-list"
          },
          {
            "name": "azmcp-search-index-describe"
          },
          {
            "name": "azmcp-search-index-list"
          },
          {
            "name": "azmcp-search-index-query"
          },
          {
            "name": "azmcp-search-service-list"
          },
          {
            "name": "azmcp-storage-account-list"
          },
          {
            "name": "azmcp-storage-blob-container-details"
          },
          {
            "name": "azmcp-storage-blob-container-list"
          },
          {
            "name": "azmcp-storage-blob-list"
          },
          {
            "name": "azmcp-storage-table-list"
          },
          {
            "name": "azmcp-subscription-list"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/azure.json",
        "upstream": "https://github.com/Azure/azure-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/dappier",
    "description": "Enable fast, free real-time web search and access premium data from trusted media brandsâ€”news, ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/dappier@sha256:ba9b2d17fc77406a7b8b54c29ee6915a4f8e6be88542f1c06316c589b7b5b7b6",
        "environmentVariables": [
          {
            "name": "DAPPIER_API_KEY",
            "value": "{dappier.api_key}",
            "variables": {
              "dappier.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/dappierai/dappier-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 34,
        "icon": "https://avatars.githubusercontent.com/u/152645347?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "DappierAI",
        "prompts": 0,
        "pulls": 2623,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/dappier.md",
        "resources": {},
        "source": "https://github.com/dappierai/dappier-mcp/tree/38bbde12ef9ea3a7a5fd142d018150c8c53bc63d",
        "stars": 2,
        "tags": [
          "dappier",
          "devops"
        ],
        "title": "Dappier",
        "tools": [
          {
            "name": "dappier_ai_recommendations"
          },
          {
            "name": "dappier_real_time_search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/dappier.json",
        "upstream": "https://github.com/dappierai/dappier-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hummingbot-mcp",
    "description": "Hummingbot MCP is an open-source toolset that lets you control and monitor your Hummingbot tradin...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "hummingbot/hummingbot-mcp@sha256:cfe480e1caa42ae98f23b01c829610e85f293288750adfd29e3b64613548ff0a",
        "environmentVariables": [
          {
            "name": "HUMMINGBOT_API_URL",
            "value": "{hummingbot-mcp.api_url}",
            "variables": {
              "hummingbot-mcp.api_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "HUMMINGBOT_API_USERNAME",
            "value": "{hummingbot-mcp.username}",
            "variables": {
              "hummingbot-mcp.username": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "HUMMINGBOT_API_PASSWORD",
            "value": "{hummingbot-mcp.password}",
            "variables": {
              "hummingbot-mcp.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/hummingbot/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "finance",
        "dateAdded": "2025-08-29T06:26:59Z",
        "githubStars": 28,
        "icon": "https://avatars.githubusercontent.com/u/88165212?v=4",
        "license": "Apache License 2.0",
        "owner": "hummingbot",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hummingbot-mcp.md",
        "resources": {},
        "source": "https://github.com/hummingbot/mcp/tree/ad24846aa3d62706265fdb28833e721debdb0df0",
        "tags": [
          "finance"
        ],
        "title": "Hummingbot MCP: Trading Agent",
        "tools": [
          {
            "name": "configure_api_servers"
          },
          {
            "name": "deploy_bot_with_controllers"
          },
          {
            "name": "explore_controllers"
          },
          {
            "name": "get_active_bots_status"
          },
          {
            "name": "get_bot_logs"
          },
          {
            "name": "get_candles"
          },
          {
            "name": "get_funding_rate"
          },
          {
            "name": "get_order_book"
          },
          {
            "name": "get_orders"
          },
          {
            "name": "get_portfolio_balances"
          },
          {
            "name": "get_positions"
          },
          {
            "name": "get_prices"
          },
          {
            "name": "manage_bot_execution"
          },
          {
            "name": "modify_controllers"
          },
          {
            "name": "place_order"
          },
          {
            "name": "set_account_position_mode_and_leverage"
          },
          {
            "name": "setup_connector"
          },
          {
            "name": "stop_bot_or_controllers"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hummingbot-mcp.json",
        "upstream": "https://github.com/hummingbot/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/simplechecklist",
    "description": "Advanced SimpleCheckList with MCP server and SQLite database for comprehensive task management.  ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mayurkakade/mcp-server:latest@sha256:9ff8953783bb5c50a367634669626587decbe37ea1d421a66e298a6e47961e27",
        "packageArguments": [
          {
            "type": "named",
            "name": "--mode",
            "value": "backend"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/DevMayur/SimpleCheckList",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-19T06:18:27Z",
        "githubStars": 2,
        "icon": "https://raw.githubusercontent.com/DevMayur/SimpleCheckList/main/icon.png",
        "license": "",
        "owner": "DevMayur",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/simplechecklist.md",
        "resources": {},
        "source": "https://github.com/DevMayur/SimpleCheckList/tree/176694570a11e21304bef0dee8e6345e654022e8",
        "tags": [
          "productivity",
          "task-management",
          "checklist",
          "sqlite",
          "docker-stable"
        ],
        "title": "SimpleCheckList MCP Server",
        "tools": [
          {
            "name": "list_projects"
          },
          {
            "name": "create_project"
          },
          {
            "name": "get_project"
          },
          {
            "name": "update_project"
          },
          {
            "name": "delete_project"
          },
          {
            "name": "list_groups"
          },
          {
            "name": "create_group"
          },
          {
            "name": "list_task_lists"
          },
          {
            "name": "create_task_list"
          },
          {
            "name": "list_tasks"
          },
          {
            "name": "create_task"
          },
          {
            "name": "toggle_task_completion"
          },
          {
            "name": "update_task"
          },
          {
            "name": "delete_task"
          },
          {
            "name": "list_subtasks"
          },
          {
            "name": "create_subtask"
          },
          {
            "name": "toggle_subtask_completion"
          },
          {
            "name": "delete_subtask"
          },
          {
            "name": "get_project_stats"
          },
          {
            "name": "get_all_tasks"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/simplechecklist.json",
        "upstream": "https://github.com/DevMayur/SimpleCheckList"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/tembo",
    "description": "MCP server for Tembo Cloud's platform API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/tembo@sha256:178ea1dae888ff7ef335ef246cddea531c2177c4ec41442e7e056f4b99a78e6e",
        "environmentVariables": [
          {
            "name": "TEMBO_API_KEY",
            "value": "{tembo.api_token}",
            "variables": {
              "tembo.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/tembo-io/mcp-server-tembo",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 7,
        "icon": "https://avatars.githubusercontent.com/u/113815875?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "tembo-io",
        "prompts": 0,
        "pulls": 1949,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/tembo.md",
        "resources": {},
        "source": "https://github.com/tembo-io/mcp-server-tembo/tree/5fd392db6e5af17e77fdc1a5a9f7d64177ff5166",
        "tags": [
          "tembo",
          "devops"
        ],
        "title": "Tembo",
        "tools": [
          {
            "name": "ask_tembo"
          },
          {
            "name": "create_instance"
          },
          {
            "name": "delete_instance"
          },
          {
            "name": "get_all_apps"
          },
          {
            "name": "get_all_instances"
          },
          {
            "name": "get_app"
          },
          {
            "name": "get_instance"
          },
          {
            "name": "get_instance_schema"
          },
          {
            "name": "patch_instance"
          },
          {
            "name": "restore_instance"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/tembo.json",
        "upstream": "https://github.com/tembo-io/mcp-server-tembo"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hostinger-mcp-server",
    "description": "Interact with Hostinger services over the Hostinger API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/api-mcp-server@sha256:93ef64165299860573af7645633996af781035ef56db4f462074670688204306",
        "environmentVariables": [
          {
            "name": "APITOKEN",
            "value": "{hostinger-mcp-server.api_token}",
            "variables": {
              "hostinger-mcp-server.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/hostinger/api-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-08-05T16:31:03Z",
        "githubStars": 41,
        "icon": "https://avatars.githubusercontent.com/u/2630767?v=4",
        "license": "MIT License",
        "owner": "hostinger",
        "prompts": 0,
        "pulls": 2432,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hostinger-mcp-server.md",
        "resources": {},
        "source": "https://github.com/hostinger/api-mcp-server/tree/1d13729f08e089c8878725342e83847e34f945bc",
        "stars": 1,
        "tags": [
          "devops"
        ],
        "title": "Hostinger API MCP Server",
        "tools": [
          {
            "name": "DNS_deleteDNSRecordsV1"
          },
          {
            "name": "DNS_getDNSRecordsV1"
          },
          {
            "name": "DNS_getDNSSnapshotListV1"
          },
          {
            "name": "DNS_getDNSSnapshotV1"
          },
          {
            "name": "DNS_resetDNSRecordsV1"
          },
          {
            "name": "DNS_restoreDNSSnapshotV1"
          },
          {
            "name": "DNS_updateDNSRecordsV1"
          },
          {
            "name": "DNS_validateDNSRecordsV1"
          },
          {
            "name": "VPS_activateFirewallV1"
          },
          {
            "name": "VPS_attachPublicKeyV1"
          },
          {
            "name": "VPS_createFirewallRuleV1"
          },
          {
            "name": "VPS_createNewFirewallV1"
          },
          {
            "name": "VPS_createNewProjectV1"
          },
          {
            "name": "VPS_createPTRRecordV1"
          },
          {
            "name": "VPS_createPostInstallScriptV1"
          },
          {
            "name": "VPS_createPublicKeyV1"
          },
          {
            "name": "VPS_createSnapshotV1"
          },
          {
            "name": "VPS_deactivateFirewallV1"
          },
          {
            "name": "VPS_deleteFirewallRuleV1"
          },
          {
            "name": "VPS_deleteFirewallV1"
          },
          {
            "name": "VPS_deletePTRRecordV1"
          },
          {
            "name": "VPS_deletePostInstallScriptV1"
          },
          {
            "name": "VPS_deleteProjectV1"
          },
          {
            "name": "VPS_deletePublicKeyV1"
          },
          {
            "name": "VPS_deleteSnapshotV1"
          },
          {
            "name": "VPS_getActionDetailsV1"
          },
          {
            "name": "VPS_getActionsV1"
          },
          {
            "name": "VPS_getAttachedPublicKeysV1"
          },
          {
            "name": "VPS_getBackupsV1"
          },
          {
            "name": "VPS_getDataCenterListV1"
          },
          {
            "name": "VPS_getFirewallDetailsV1"
          },
          {
            "name": "VPS_getFirewallListV1"
          },
          {
            "name": "VPS_getMetricsV1"
          },
          {
            "name": "VPS_getPostInstallScriptV1"
          },
          {
            "name": "VPS_getPostInstallScriptsV1"
          },
          {
            "name": "VPS_getProjectContainersV1"
          },
          {
            "name": "VPS_getProjectContentsV1"
          },
          {
            "name": "VPS_getProjectListV1"
          },
          {
            "name": "VPS_getProjectLogsV1"
          },
          {
            "name": "VPS_getPublicKeysV1"
          },
          {
            "name": "VPS_getScanMetricsV1"
          },
          {
            "name": "VPS_getSnapshotV1"
          },
          {
            "name": "VPS_getTemplateDetailsV1"
          },
          {
            "name": "VPS_getTemplatesV1"
          },
          {
            "name": "VPS_getVirtualMachineDetailsV1"
          },
          {
            "name": "VPS_getVirtualMachinesV1"
          },
          {
            "name": "VPS_installMonarxV1"
          },
          {
            "name": "VPS_purchaseNewVirtualMachineV1"
          },
          {
            "name": "VPS_recreateVirtualMachineV1"
          },
          {
            "name": "VPS_resetHostnameV1"
          },
          {
            "name": "VPS_restartProjectV1"
          },
          {
            "name": "VPS_restartVirtualMachineV1"
          },
          {
            "name": "VPS_restoreBackupV1"
          },
          {
            "name": "VPS_restoreSnapshotV1"
          },
          {
            "name": "VPS_setHostnameV1"
          },
          {
            "name": "VPS_setNameserversV1"
          },
          {
            "name": "VPS_setPanelPasswordV1"
          },
          {
            "name": "VPS_setRootPasswordV1"
          },
          {
            "name": "VPS_setupPurchasedVirtualMachineV1"
          },
          {
            "name": "VPS_startProjectV1"
          },
          {
            "name": "VPS_startRecoveryModeV1"
          },
          {
            "name": "VPS_startVirtualMachineV1"
          },
          {
            "name": "VPS_stopProjectV1"
          },
          {
            "name": "VPS_stopRecoveryModeV1"
          },
          {
            "name": "VPS_stopVirtualMachineV1"
          },
          {
            "name": "VPS_syncFirewallV1"
          },
          {
            "name": "VPS_uninstallMonarxV1"
          },
          {
            "name": "VPS_updateFirewallRuleV1"
          },
          {
            "name": "VPS_updatePostInstallScriptV1"
          },
          {
            "name": "VPS_updateProjectV1"
          },
          {
            "name": "billing_cancelSubscriptionV1"
          },
          {
            "name": "billing_createServiceOrderV1"
          },
          {
            "name": "billing_deletePaymentMethodV1"
          },
          {
            "name": "billing_disableAutoRenewalV1"
          },
          {
            "name": "billing_enableAutoRenewalV1"
          },
          {
            "name": "billing_getCatalogItemListV1"
          },
          {
            "name": "billing_getPaymentMethodListV1"
          },
          {
            "name": "billing_getSubscriptionListV1"
          },
          {
            "name": "billing_setDefaultPaymentMethodV1"
          },
          {
            "name": "domains_checkDomainAvailabilityV1"
          },
          {
            "name": "domains_createDomainForwardingV1"
          },
          {
            "name": "domains_createWHOISProfileV1"
          },
          {
            "name": "domains_deleteDomainForwardingV1"
          },
          {
            "name": "domains_deleteWHOISProfileV1"
          },
          {
            "name": "domains_disableDomainLockV1"
          },
          {
            "name": "domains_disablePrivacyProtectionV1"
          },
          {
            "name": "domains_enableDomainLockV1"
          },
          {
            "name": "domains_enablePrivacyProtectionV1"
          },
          {
            "name": "domains_getDomainDetailsV1"
          },
          {
            "name": "domains_getDomainForwardingV1"
          },
          {
            "name": "domains_getDomainListV1"
          },
          {
            "name": "domains_getWHOISProfileListV1"
          },
          {
            "name": "domains_getWHOISProfileUsageV1"
          },
          {
            "name": "domains_getWHOISProfileV1"
          },
          {
            "name": "domains_purchaseNewDomainV1"
          },
          {
            "name": "domains_updateDomainNameserversV1"
          },
          {
            "name": "hosting_createWebsiteV1"
          },
          {
            "name": "hosting_generateAFreeSubdomainV1"
          },
          {
            "name": "hosting_listAvailableDatacentersV1"
          },
          {
            "name": "hosting_listOrdersV1"
          },
          {
            "name": "hosting_listWebsitesV1"
          },
          {
            "name": "hosting_verifyDomainOwnershipV1"
          },
          {
            "name": "reach_createANewContactV1"
          },
          {
            "name": "reach_deleteAContactV1"
          },
          {
            "name": "reach_listContactGroupsV1"
          },
          {
            "name": "reach_listContactsV1"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hostinger-mcp-server.json",
        "upstream": "https://github.com/hostinger/api-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/openweather",
    "description": "A simple MCP service that provides current weather and 5-day forecast using the free OpenWeatherM...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/openweather@sha256:e2f49acbb718e28b6f2f1bb00d8eebcc4dfc73e6788ed2040974496856375d5f",
        "environmentVariables": [
          {
            "name": "OWM_API_KEY",
            "value": "{openweather.owm_api_key}",
            "variables": {
              "openweather.owm_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/mschneider82/mcp-openweather",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-07-01T12:14:18Z",
        "githubStars": 12,
        "icon": "https://avatars.githubusercontent.com/u/1743227?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "mschneider82",
        "prompts": 0,
        "pulls": 5313,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/openweather.md",
        "resources": {},
        "source": "https://github.com/mschneider82/mcp-openweather/tree/e032683574a0723591445462ef7104d360ad0889",
        "stars": 4,
        "tags": [
          "weather-api"
        ],
        "title": "Openweather",
        "tools": [
          {
            "name": "weather"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/openweather.json",
        "upstream": "https://github.com/mschneider82/mcp-openweather"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/thingsboard",
    "description": "Connect your AI workflows to the ThingsBoard IoT Platform through this MCP server.  Enables LLMs ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/thingsboard@sha256:b6733d2cfbb97665a34b63cd86356e25a7ccd7ba98840b70ecb555b5af48d0c8",
        "environmentVariables": [
          {
            "name": "THINGSBOARD_URL",
            "value": "{thingsboard.url}",
            "variables": {
              "thingsboard.url": {
                "format": "string",
                "description": "URL of your ThingsBoard Platform instance"
              }
            }
          },
          {
            "name": "THINGSBOARD_USERNAME",
            "value": "{thingsboard.username}",
            "variables": {
              "thingsboard.username": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "THINGSBOARD_PASSWORD",
            "value": "{thingsboard.password}",
            "variables": {
              "thingsboard.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/thingsboard/thingsboard-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-10-30T01:48:22Z",
        "githubStars": 78,
        "icon": "https://avatars.githubusercontent.com/u/24291394?v=4",
        "license": "Apache License 2.0",
        "owner": "thingsboard",
        "prompts": 0,
        "pulls": 44,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/thingsboard.md",
        "resources": {},
        "source": "https://github.com/thingsboard/thingsboard-mcp/tree/adac2d247c408487ef1f99ebb65f8889792dc632",
        "tags": [
          "thingsboard",
          "iot platform",
          "monitoring",
          "data-visualization",
          "device-management"
        ],
        "title": "ThingsBoard",
        "tools": [
          {
            "name": "findByFrom"
          },
          {
            "name": "findByFromWithRelationType"
          },
          {
            "name": "findByTo"
          },
          {
            "name": "findByToWithRelationType"
          },
          {
            "name": "findInfoByFrom"
          },
          {
            "name": "findInfoByTo"
          },
          {
            "name": "getAdminSettings"
          },
          {
            "name": "getAlarmById"
          },
          {
            "name": "getAlarmInfoById"
          },
          {
            "name": "getAlarmTypes"
          },
          {
            "name": "getAlarms"
          },
          {
            "name": "getAllAlarms"
          },
          {
            "name": "getAllCustomerUsers"
          },
          {
            "name": "getAssetById"
          },
          {
            "name": "getAssetsByEntityGroupId"
          },
          {
            "name": "getAssetsByIds"
          },
          {
            "name": "getAttributeKeys"
          },
          {
            "name": "getAttributeKeysByScope"
          },
          {
            "name": "getAttributes"
          },
          {
            "name": "getAttributesByScope"
          },
          {
            "name": "getCustomerAssets"
          },
          {
            "name": "getCustomerById"
          },
          {
            "name": "getCustomerDevices"
          },
          {
            "name": "getCustomerUsers"
          },
          {
            "name": "getCustomers"
          },
          {
            "name": "getCustomersByEntityGroupId"
          },
          {
            "name": "getDeviceById"
          },
          {
            "name": "getDeviceCredentialsByDeviceId"
          },
          {
            "name": "getDevicesByEntityGroupId"
          },
          {
            "name": "getDevicesByIds"
          },
          {
            "name": "getEntityGroupById"
          },
          {
            "name": "getEntityGroupByOwnerAndNameAndType"
          },
          {
            "name": "getEntityGroupsByIds"
          },
          {
            "name": "getEntityGroupsByOwnerAndType"
          },
          {
            "name": "getEntityGroupsByType"
          },
          {
            "name": "getEntityGroupsForEntity"
          },
          {
            "name": "getHighestAlarmSeverity"
          },
          {
            "name": "getLatestTimeseries"
          },
          {
            "name": "getRelation"
          },
          {
            "name": "getSecuritySettings"
          },
          {
            "name": "getSystemInfo"
          },
          {
            "name": "getTenantAdmins"
          },
          {
            "name": "getTenantAsset"
          },
          {
            "name": "getTenantAssets"
          },
          {
            "name": "getTenantCustomer"
          },
          {
            "name": "getTenantDevice"
          },
          {
            "name": "getTenantDevices"
          },
          {
            "name": "getTimeseries"
          },
          {
            "name": "getTimeseriesKeys"
          },
          {
            "name": "getUsageInfo"
          },
          {
            "name": "getUserAssets"
          },
          {
            "name": "getUserById"
          },
          {
            "name": "getUserCustomers"
          },
          {
            "name": "getUserDevices"
          },
          {
            "name": "getUsers"
          },
          {
            "name": "getUsersByEntityGroupId"
          },
          {
            "name": "getUsersForAssign"
          },
          {
            "name": "saveDeviceAttributes"
          },
          {
            "name": "saveEntityAttributesV1"
          },
          {
            "name": "saveEntityAttributesV2"
          },
          {
            "name": "saveEntityTelemetry"
          },
          {
            "name": "saveEntityTelemetryWithTTL"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/thingsboard.json",
        "upstream": "https://github.com/thingsboard/thingsboard-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/elasticsearch",
    "description": "Interact with your Elasticsearch indices through natural language conversations.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/elasticsearch@sha256:9c978b8277e32be0229e0c2f5c631e4106dd1c9c955ec361814588688582bcfd",
        "environmentVariables": [
          {
            "name": "ES_URL",
            "value": "{elasticsearch.url}",
            "variables": {
              "elasticsearch.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "ES_API_KEY",
            "value": "{elasticsearch.api_key}",
            "variables": {
              "elasticsearch.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "positional",
            "value": "stdio"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/elastic/mcp-server-elasticsearch",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 532,
        "icon": "https://avatars.githubusercontent.com/u/6764390?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "elastic",
        "prompts": 0,
        "pulls": 8917,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/elasticsearch.md",
        "resources": {},
        "source": "https://github.com/elastic/mcp-server-elasticsearch/tree/b2912b2ba544060962c7fabf38eb36cc940e9098",
        "stars": 12,
        "tags": [
          "elasticsearch",
          "search"
        ],
        "title": "Elasticsearch",
        "tools": [
          {
            "name": "esql"
          },
          {
            "name": "get_mappings"
          },
          {
            "name": "get_shards"
          },
          {
            "name": "list_indices"
          },
          {
            "name": "search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/elasticsearch.json",
        "upstream": "https://github.com/elastic/mcp-server-elasticsearch"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/rust-mcp-filesystem",
    "description": "The Rust MCP Filesystem is a high-performance, asynchronous, and lightweight Model Context Protoc...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/rust-mcp-filesystem@sha256:eb3ba49c7555719f4d2c76a4bc3b971fad787bd1026557b6512b0821fa931a61",
        "environmentVariables": [
          {
            "name": "ENABLE_ROOTS",
            "value": "{rust-mcp-filesystem.enable_roots}",
            "variables": {
              "rust-mcp-filesystem.enable_roots": {
                "format": "string",
                "description": "Enable dynamic directory access control via MCP client-side Roots."
              }
            }
          },
          {
            "name": "ALLOW_WRITE",
            "value": "{rust-mcp-filesystem.allow_write}",
            "variables": {
              "rust-mcp-filesystem.allow_write": {
                "format": "string",
                "description": "Enable read/write mode. If false, the app operates in read-only mode."
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "positional",
            "value": "{{rust-mcp-filesystem.allowed_directories|volume-target|into}}"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{rust-mcp-filesystem.allowed_directories|volume|into}",
            "variables": {
              "rust-mcp-filesystem.allowed_directories": {
                "format": "string",
                "description": "List of directories that rust-mcp-filesystem can access."
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/rust-mcp-stack/rust-mcp-filesystem",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-24T20:01:26Z",
        "githubStars": 91,
        "icon": "https://raw.githubusercontent.com/rust-mcp-stack/rust-mcp-filesystem/refs/heads/main/docs/_media/rust-mcp-filesystem.png",
        "license": "MIT License",
        "owner": "rust-mcp-stack",
        "prompts": 0,
        "pulls": 951,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/rust-mcp-filesystem.md",
        "resources": {},
        "source": "https://github.com/rust-mcp-stack/rust-mcp-filesystem/tree/45e85194cb4b43b0b2f584e65302001b8feb4e25",
        "tags": [
          "productivity"
        ],
        "title": "Blazing-fast, asynchronous MCP server for seamless filesystem operations.",
        "tools": [
          {
            "name": "calculate_directory_size"
          },
          {
            "name": "create_directory"
          },
          {
            "name": "directory_tree"
          },
          {
            "name": "edit_file"
          },
          {
            "name": "find_duplicate_files"
          },
          {
            "name": "find_empty_directories"
          },
          {
            "name": "get_file_info"
          },
          {
            "name": "head_file"
          },
          {
            "name": "list_allowed_directories"
          },
          {
            "name": "list_directory"
          },
          {
            "name": "list_directory_with_sizes"
          },
          {
            "name": "move_file"
          },
          {
            "name": "read_file_lines"
          },
          {
            "name": "read_media_file"
          },
          {
            "name": "read_multiple_media_files"
          },
          {
            "name": "read_multiple_text_files"
          },
          {
            "name": "read_text_file"
          },
          {
            "name": "search_files"
          },
          {
            "name": "search_files_content"
          },
          {
            "name": "tail_file"
          },
          {
            "name": "unzip_file"
          },
          {
            "name": "write_file"
          },
          {
            "name": "zip_directory"
          },
          {
            "name": "zip_files"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/rust-mcp-filesystem.json",
        "upstream": "https://github.com/rust-mcp-stack/rust-mcp-filesystem"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/atlas-docs",
    "description": "Provide LLMs hosted, clean markdown documentation of libraries and frameworks.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/atlas-docs@sha256:4d235adb74986ea8f8ff1751a4f5d28532d0e2aa03d3c55a3fcb1c57e3917079",
        "environmentVariables": [
          {
            "name": "ATLAS_API_URL",
            "value": "{atlas-docs.api_url}",
            "variables": {
              "atlas-docs.api_url": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/CartographAI/atlas-docs-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 32,
        "icon": "https://avatars.githubusercontent.com/u/184709581?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "CartographAI",
        "prompts": 0,
        "pulls": 4189,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/atlas-docs.md",
        "resources": {},
        "source": "https://github.com/CartographAI/atlas-docs-mcp/tree/ce4c4fe8ef23d0a9db4f04370b533ac4b9b172f8",
        "stars": 2,
        "tags": [
          "atlas-docs",
          "devops"
        ],
        "title": "Atlas Docs",
        "tools": [
          {
            "name": "get_docs_full"
          },
          {
            "name": "get_docs_index"
          },
          {
            "name": "get_docs_page"
          },
          {
            "name": "list_docs"
          },
          {
            "name": "search_docs"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/atlas-docs.json",
        "upstream": "https://github.com/CartographAI/atlas-docs-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/elevenlabs",
    "description": "Official ElevenLabs Model Context Protocol (MCP) server that enables interaction with powerful Te...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/elevenlabs@sha256:dc749573ffd71f1ed1c1ec1f16d798c60cba5982cf8e00f41115e088e09b1df7",
        "environmentVariables": [
          {
            "name": "ELEVENLABS_API_KEY",
            "value": "{elevenlabs.api_key}",
            "variables": {
              "elevenlabs.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{elevenlabs.data}:/root/Desktop",
            "variables": {
              "elevenlabs.data": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/elevenlabs/elevenlabs-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 1031,
        "icon": "https://avatars.githubusercontent.com/u/94471909?v=4",
        "license": "MIT License",
        "owner": "elevenlabs",
        "prompts": 0,
        "pulls": 9736,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/elevenlabs.md",
        "resources": {},
        "source": "https://github.com/elevenlabs/elevenlabs-mcp/tree/b0070bde82b742aa1d24822d8a2cab7287c913f8",
        "stars": 6,
        "tags": [
          "elevenlabs",
          "elevenlabs-api"
        ],
        "title": "Elevenlabs MCP",
        "tools": [
          {
            "name": "add_knowledge_base_to_agent"
          },
          {
            "name": "check_subscription"
          },
          {
            "name": "compose_music"
          },
          {
            "name": "create_agent"
          },
          {
            "name": "create_composition_plan"
          },
          {
            "name": "create_voice_from_preview"
          },
          {
            "name": "get_agent"
          },
          {
            "name": "get_conversation"
          },
          {
            "name": "get_voice"
          },
          {
            "name": "isolate_audio"
          },
          {
            "name": "list_agents"
          },
          {
            "name": "list_conversations"
          },
          {
            "name": "list_models"
          },
          {
            "name": "list_phone_numbers"
          },
          {
            "name": "make_outbound_call"
          },
          {
            "name": "play_audio"
          },
          {
            "name": "search_voice_library"
          },
          {
            "name": "search_voices"
          },
          {
            "name": "speech_to_speech"
          },
          {
            "name": "speech_to_text"
          },
          {
            "name": "text_to_sound_effects"
          },
          {
            "name": "text_to_speech"
          },
          {
            "name": "text_to_voice"
          },
          {
            "name": "voice_clone"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/elevenlabs.json",
        "upstream": "https://github.com/elevenlabs/elevenlabs-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/fibery",
    "description": "Interact with your Fibery workspace.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/fibery@sha256:180025908104eefa42f748382d2f25904e07109df3ae53bf960a6c61100f901f",
        "environmentVariables": [
          {
            "name": "FIBERY_HOST",
            "value": "{fibery.host}",
            "variables": {
              "fibery.host": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIBERY_API_TOKEN",
            "value": "{fibery.api_token}",
            "variables": {
              "fibery.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Fibery-inc/fibery-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 26,
        "icon": "https://avatars.githubusercontent.com/u/72027989?v=4",
        "license": "MIT License",
        "owner": "Fibery-inc",
        "prompts": 0,
        "pulls": 2019,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/fibery.md",
        "resources": {},
        "source": "https://github.com/Fibery-inc/fibery-mcp-server/tree/16b206bd7ee740d2928b72a020660ec4187aba8b",
        "tags": [
          "fibery",
          "devops"
        ],
        "title": "Fibery",
        "tools": [
          {
            "name": "create_entities_batch"
          },
          {
            "name": "create_entity"
          },
          {
            "name": "current_date"
          },
          {
            "name": "describe_database"
          },
          {
            "name": "list_databases"
          },
          {
            "name": "query_database"
          },
          {
            "name": "update_entity"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/fibery.json",
        "upstream": "https://github.com/Fibery-inc/fibery-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/neo4j-memory",
    "description": "Provide persistent memory capabilities through Neo4j graph database integration.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/neo4j-memory@sha256:7d07cd6143d1713d155e7f5afcf05d0c77b9cc6800c4a508bfeca20bb1e0a433",
        "environmentVariables": [
          {
            "name": "NEO4J_URL",
            "value": "{neo4j-memory.url}",
            "variables": {
              "neo4j-memory.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_USERNAME",
            "value": "{neo4j-memory.username}",
            "variables": {
              "neo4j-memory.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_DATABASE",
            "value": "{neo4j-memory.database}",
            "variables": {
              "neo4j-memory.database": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_TRANSPORT",
            "value": "{neo4j-memory.transport}",
            "variables": {
              "neo4j-memory.transport": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_HOST",
            "value": "{neo4j-memory.server_host}",
            "variables": {
              "neo4j-memory.server_host": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PORT",
            "value": "{neo4j-memory.server_port}",
            "variables": {
              "neo4j-memory.server_port": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PATH",
            "value": "{neo4j-memory.server_path}",
            "variables": {
              "neo4j-memory.server_path": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
            "value": "{neo4j-memory.server_allow_origins}",
            "variables": {
              "neo4j-memory.server_allow_origins": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
            "value": "{neo4j-memory.server_allowed_hosts}",
            "variables": {
              "neo4j-memory.server_allowed_hosts": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_PASSWORD",
            "value": "{neo4j-memory.password}",
            "variables": {
              "neo4j-memory.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/neo4j-contrib/mcp-neo4j",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 772,
        "icon": "https://avatars.githubusercontent.com/u/916372?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "neo4j-contrib",
        "prompts": 0,
        "pulls": 6512,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/neo4j-memory.md",
        "resources": {},
        "source": "https://github.com/neo4j-contrib/mcp-neo4j/tree/8e104e33b5e2cd8c3a9b2ec5f1603c1a960ad661/servers/mcp-neo4j-memory",
        "stars": 9,
        "tags": [
          "neo4j-memory",
          "devops"
        ],
        "title": "Neo4j Memory",
        "tools": [
          {
            "name": "add_observations"
          },
          {
            "name": "create_entities"
          },
          {
            "name": "create_relations"
          },
          {
            "name": "delete_entities"
          },
          {
            "name": "delete_observations"
          },
          {
            "name": "delete_relations"
          },
          {
            "name": "find_memories_by_name"
          },
          {
            "name": "read_graph"
          },
          {
            "name": "search_memories"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/neo4j-memory.json",
        "upstream": "https://github.com/neo4j-contrib/mcp-neo4j"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/pluggedin-mcp-proxy",
    "description": "A unified MCP proxy that aggregates multiple MCP servers into one interface, enabling seamless to...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/pluggedin-mcp-proxy@sha256:2c22cf0ef264bfb71c65f2aaa9b7d90ef9fe8b7632bbc1562b15716f4adca7a8",
        "environmentVariables": [
          {
            "name": "PLUGGEDIN_API_BASE_URL",
            "value": "{pluggedin-mcp-proxy.pluggedin_api_base_url}",
            "variables": {
              "pluggedin-mcp-proxy.pluggedin_api_base_url": {
                "format": "string",
                "description": "Base URL for the Plugged.in API (optional, defaults to https://plugged.in for cloud or http://localhost:12005 for self-hosted)"
              }
            }
          },
          {
            "name": "PLUGGEDIN_API_KEY",
            "value": "{pluggedin-mcp-proxy.pluggedin_api_key}",
            "variables": {
              "pluggedin-mcp-proxy.pluggedin_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/VeriTeknik/pluggedin-mcp-proxy",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-07-01T14:14:18Z",
        "githubStars": 99,
        "icon": "https://www.plugged.in/favicon.ico",
        "license": "Apache License 2.0",
        "owner": "VeriTeknik",
        "prompts": 0,
        "pulls": 2083,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/pluggedin-mcp-proxy.md",
        "resources": {},
        "source": "https://github.com/VeriTeknik/pluggedin-mcp-proxy/tree/b8995e6f105004985b98e9bd2bc372616ea5ecc0",
        "stars": 2,
        "tags": [
          "productivity",
          "proxy",
          "management",
          "tools",
          "ai"
        ],
        "title": "Plugged.in MCP Proxy",
        "tools": [
          {
            "name": "pluggedin_ask_knowledge_base"
          },
          {
            "name": "pluggedin_delete_notification"
          },
          {
            "name": "pluggedin_discover_tools"
          },
          {
            "name": "pluggedin_list_notifications"
          },
          {
            "name": "pluggedin_mark_notification_done"
          },
          {
            "name": "pluggedin_send_notification"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/pluggedin-mcp-proxy.json",
        "upstream": "https://github.com/VeriTeknik/pluggedin-mcp-proxy"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/puppeteer",
    "description": "Browser automation and web scraping using Puppeteer.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/puppeteer@sha256:c1e2bda6d92d400e900e497b743552a670a33631799c0a6478e91096e389bd27",
        "environmentVariables": [
          {
            "name": "DOCKER_CONTAINER",
            "value": "true"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/6906516?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 117845,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/puppeteer.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 30,
        "tags": [
          "puppeteer",
          "devops"
        ],
        "title": "Puppeteer (Archived)",
        "tools": [
          {
            "name": "puppeteer_click"
          },
          {
            "name": "puppeteer_evaluate"
          },
          {
            "name": "puppeteer_fill"
          },
          {
            "name": "puppeteer_hover"
          },
          {
            "name": "puppeteer_navigate"
          },
          {
            "name": "puppeteer_screenshot"
          },
          {
            "name": "puppeteer_select"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/puppeteer.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/triplewhale",
    "description": "Triplewhale MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/triplewhale@sha256:0d4702dce52759833481d5c6ae50848309608eb1448c8a13eeba04226461519a",
        "environmentVariables": [
          {
            "name": "TRIPLEWHALE_API_KEY",
            "value": "{triplewhale.api_key}",
            "variables": {
              "triplewhale.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Triple-Whale/mcp-server-triplewhale",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 3,
        "icon": "https://avatars.githubusercontent.com/u/79388081?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "Triple-Whale",
        "prompts": 0,
        "pulls": 2069,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/triplewhale.md",
        "resources": {},
        "source": "https://github.com/Triple-Whale/mcp-server-triplewhale/tree/6948082d5eb68f6855aafb279e196ede54e4eaed",
        "tags": [
          "triplewhale",
          "devops"
        ],
        "title": "Triplewhale",
        "tools": [
          {
            "name": "moby"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/triplewhale.json",
        "upstream": "https://github.com/Triple-Whale/mcp-server-triplewhale"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/google-maps",
    "description": "Tools for interacting with the Google Maps API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/google-maps@sha256:d8652c8c9c52ac9d82e9cadd1dc0468ade7a4f8c53e102e641eb4248894aa914",
        "environmentVariables": [
          {
            "name": "GOOGLE_MAPS_API_KEY",
            "value": "{google-maps.api_key}",
            "variables": {
              "google-maps.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 54559,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/google-maps.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/82064568802e542c3924560aef2cb421b4ce436c",
        "stars": 15,
        "tags": [
          "google-maps",
          "devops"
        ],
        "title": "Google Maps (Archived)",
        "tools": [
          {
            "name": "maps_directions"
          },
          {
            "name": "maps_distance_matrix"
          },
          {
            "name": "maps_elevation"
          },
          {
            "name": "maps_geocode"
          },
          {
            "name": "maps_place_details"
          },
          {
            "name": "maps_reverse_geocode"
          },
          {
            "name": "maps_search_places"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/google-maps.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hdx",
    "description": "HDX MCP Server provides access to humanitarian data through the Humanitarian Data Exchange (HDX) ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/hdx@sha256:4fc4363ac4076d16cc8774467d64d0e489902c6ae50f1e9332ccf1bf4c21141c",
        "environmentVariables": [
          {
            "name": "HDX_APP_IDENTIFIER",
            "value": "{hdx.HDX_APP_IDENTIFIER}",
            "variables": {
              "hdx.HDX_APP_IDENTIFIER": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/dividor/hdx-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 2,
        "icon": "https://raw.githubusercontent.com/dividor/hdx-mcp/main/assets/hdx_mcp_icon_transparent_512.png",
        "license": "MIT License",
        "owner": "dividor",
        "prompts": 0,
        "pulls": 559,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hdx.md",
        "resources": {},
        "source": "https://github.com/dividor/hdx-mcp/tree/c625bf9ae120ed93a36aa7ac9352bdc41f6d9546",
        "tags": [
          "search"
        ],
        "title": "Humanitarian Data Exchange MCP Server",
        "tools": [
          {
            "name": "affected_people_humanitarian_needs_get"
          },
          {
            "name": "affected_people_idps_get"
          },
          {
            "name": "affected_people_refugees_get"
          },
          {
            "name": "affected_people_returnees_get"
          },
          {
            "name": "baseline_population_get"
          },
          {
            "name": "climate_rainfall_get"
          },
          {
            "name": "coordination_conflict_events_get"
          },
          {
            "name": "coordination_funding_get"
          },
          {
            "name": "coordination_national_risk_get"
          },
          {
            "name": "coordination_operational_presence_get"
          },
          {
            "name": "food_prices_get"
          },
          {
            "name": "food_security_get"
          },
          {
            "name": "hdx_get_dataset_info"
          },
          {
            "name": "hdx_search_locations"
          },
          {
            "name": "hdx_server_info"
          },
          {
            "name": "metadata_admin1_get"
          },
          {
            "name": "metadata_admin2_get"
          },
          {
            "name": "metadata_currency_get"
          },
          {
            "name": "metadata_data_availability_get"
          },
          {
            "name": "metadata_dataset_get"
          },
          {
            "name": "metadata_location_get"
          },
          {
            "name": "metadata_org_get"
          },
          {
            "name": "metadata_org_type_get"
          },
          {
            "name": "metadata_resource_get"
          },
          {
            "name": "metadata_sector_get"
          },
          {
            "name": "metadata_wfp_commodity_get"
          },
          {
            "name": "metadata_wfp_market_get"
          },
          {
            "name": "poverty_rate_get"
          },
          {
            "name": "util_version_get"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hdx.json",
        "upstream": "https://github.com/dividor/hdx-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/omi",
    "description": "A Model Context Protocol server for Omi interaction and automation. This server provides tools to...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/omi@sha256:5e475b2391ac8af79950feba10dbacbb99b40e69790ed36e77e40e662a5e84c7",
        "environmentVariables": [
          {
            "name": "OMI_API_KEY",
            "value": "{omi.api_key}",
            "variables": {
              "omi.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/BasedHardware/omi",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-07-21T12:46:15Z",
        "githubStars": 7136,
        "icon": "https://avatars.githubusercontent.com/u/162546372?v=4",
        "license": "MIT License",
        "owner": "BasedHardware",
        "prompts": 0,
        "pulls": 2037,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/omi.md",
        "resources": {},
        "source": "https://github.com/BasedHardware/omi/tree/3418cc24f8ab117f7891cb6d5665d451bca1948a/mcp",
        "stars": 1,
        "tags": [
          "ai"
        ],
        "title": "omi-mcp",
        "tools": [
          {
            "name": "create_memory"
          },
          {
            "name": "delete_memory"
          },
          {
            "name": "edit_memory"
          },
          {
            "name": "get_conversation_by_id"
          },
          {
            "name": "get_conversations"
          },
          {
            "name": "get_memories"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/omi.json",
        "upstream": "https://github.com/BasedHardware/omi"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/playwright-mcp-server",
    "description": "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mcp-playwright@sha256:5ffcdfc3d929758be1a4f951b7413ff4828a10311e735b24bee3367469959004",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{playwright-mcp-server.data}:{playwright-mcp-server.data}",
            "variables": {
              "playwright-mcp-server.data": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/executeautomation/mcp-playwright",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-07-21T12:46:15Z",
        "githubStars": 4947,
        "icon": "https://avatars.githubusercontent.com/u/10337030?v=4",
        "license": "MIT License",
        "owner": "executeautomation",
        "prompts": 0,
        "pulls": 3089,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/playwright-mcp-server.md",
        "resources": {},
        "source": "https://github.com/executeautomation/mcp-playwright/tree/51b2725f06f6df703f797f4025cac4c5f3a71f05",
        "tags": [
          "ai"
        ],
        "title": "ExecuteAutomation Playwright MCP",
        "tools": [
          {
            "name": "clear_codegen_session"
          },
          {
            "name": "end_codegen_session"
          },
          {
            "name": "get_codegen_session"
          },
          {
            "name": "playwright_assert_response"
          },
          {
            "name": "playwright_click"
          },
          {
            "name": "playwright_click_and_switch_tab"
          },
          {
            "name": "playwright_close"
          },
          {
            "name": "playwright_console_logs"
          },
          {
            "name": "playwright_custom_user_agent"
          },
          {
            "name": "playwright_delete"
          },
          {
            "name": "playwright_drag"
          },
          {
            "name": "playwright_evaluate"
          },
          {
            "name": "playwright_expect_response"
          },
          {
            "name": "playwright_fill"
          },
          {
            "name": "playwright_get"
          },
          {
            "name": "playwright_get_visible_html"
          },
          {
            "name": "playwright_get_visible_text"
          },
          {
            "name": "playwright_go_back"
          },
          {
            "name": "playwright_go_forward"
          },
          {
            "name": "playwright_hover"
          },
          {
            "name": "playwright_iframe_click"
          },
          {
            "name": "playwright_iframe_fill"
          },
          {
            "name": "playwright_navigate"
          },
          {
            "name": "playwright_patch"
          },
          {
            "name": "playwright_post"
          },
          {
            "name": "playwright_press_key"
          },
          {
            "name": "playwright_put"
          },
          {
            "name": "playwright_save_as_pdf"
          },
          {
            "name": "playwright_screenshot"
          },
          {
            "name": "playwright_select"
          },
          {
            "name": "playwright_upload_file"
          },
          {
            "name": "start_codegen_session"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/playwright-mcp-server.json",
        "upstream": "https://github.com/executeautomation/mcp-playwright"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/redis-cloud",
    "description": "MCP Server for Redis Cloud's API, allowing you to manage your Redis Cloud resources using natural...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/redis-cloud@sha256:ebea14d1170f514da2f74d026bd230f727bf93b08a19e4428cdd3a0e5f799fc6",
        "environmentVariables": [
          {
            "name": "API_KEY",
            "value": "{redis-cloud.api_key}",
            "variables": {
              "redis-cloud.api_key": {
                "format": "string"
              }
            }
          },
          {
            "name": "SECRET_KEY",
            "value": "{redis-cloud.secret_key}",
            "variables": {
              "redis-cloud.secret_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/redis/mcp-redis-cloud",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 37,
        "icon": "https://avatars.githubusercontent.com/u/1529926?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "redis",
        "prompts": 0,
        "pulls": 2679,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/redis-cloud.md",
        "resources": {},
        "source": "https://github.com/redis/mcp-redis-cloud/tree/015aaa6bfeec87198a08eaae00352348d4db4b72",
        "stars": 1,
        "tags": [
          "redis-cloud",
          "database"
        ],
        "title": "Redis Cloud",
        "tools": [
          {
            "name": "create-essential-database"
          },
          {
            "name": "create-essential-subscription"
          },
          {
            "name": "create-pro-database"
          },
          {
            "name": "create-pro-subscription"
          },
          {
            "name": "delete-essential-subscription"
          },
          {
            "name": "get-current-account"
          },
          {
            "name": "get-current-payment-methods"
          },
          {
            "name": "get-database-modules"
          },
          {
            "name": "get-essential-databases"
          },
          {
            "name": "get-essential-subscription-by-id"
          },
          {
            "name": "get-essential-subscriptions"
          },
          {
            "name": "get-essentials-plans"
          },
          {
            "name": "get-pro-databases"
          },
          {
            "name": "get-pro-plans-regions"
          },
          {
            "name": "get-pro-subscription"
          },
          {
            "name": "get-pro-subscriptions"
          },
          {
            "name": "get-task-by-id"
          },
          {
            "name": "get-tasks"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/redis-cloud.json",
        "upstream": "https://github.com/redis/mcp-redis-cloud"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/jetbrains",
    "description": "A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Al...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/jetbrains@sha256:a662cac15c5d318e3519af2700c8b3455dfd7225b47c4d331c0c306255f6fd5b",
        "environmentVariables": [
          {
            "name": "IDE_PORT",
            "value": "{jetbrains.port}",
            "variables": {
              "jetbrains.port": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/GannaChernyshova/mcp-jetbrains",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 4,
        "icon": "https://avatars.githubusercontent.com/u/878437?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "GannaChernyshova",
        "prompts": 0,
        "pulls": 8117,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/jetbrains.md",
        "resources": {},
        "source": "https://github.com/GannaChernyshova/mcp-jetbrains/tree/cd2dcb76144c92b8e7b8d32ae354a5bcb672a07f",
        "stars": 2,
        "tags": [
          "jetbrains",
          "devops"
        ],
        "title": "JetBrains",
        "tools": [
          {
            "name": "create_new_file_with_text"
          },
          {
            "name": "execute_action_by_id"
          },
          {
            "name": "execute_terminal_command"
          },
          {
            "name": "find_commit_by_message"
          },
          {
            "name": "find_files_by_name_substring"
          },
          {
            "name": "get_all_open_file_paths"
          },
          {
            "name": "get_all_open_file_texts"
          },
          {
            "name": "get_debugger_breakpoints"
          },
          {
            "name": "get_file_text_by_path"
          },
          {
            "name": "get_open_in_editor_file_path"
          },
          {
            "name": "get_open_in_editor_file_text"
          },
          {
            "name": "get_progress_indicators"
          },
          {
            "name": "get_project_dependencies"
          },
          {
            "name": "get_project_modules"
          },
          {
            "name": "get_project_vcs_status"
          },
          {
            "name": "get_run_configurations"
          },
          {
            "name": "get_selected_in_editor_text"
          },
          {
            "name": "get_terminal_text"
          },
          {
            "name": "list_available_actions"
          },
          {
            "name": "list_directory_tree_in_folder"
          },
          {
            "name": "list_files_in_folder"
          },
          {
            "name": "open_file_in_editor"
          },
          {
            "name": "replace_current_file_text"
          },
          {
            "name": "replace_file_text_by_path"
          },
          {
            "name": "replace_selected_text"
          },
          {
            "name": "replace_specific_text"
          },
          {
            "name": "run_configuration"
          },
          {
            "name": "search_in_files_content"
          },
          {
            "name": "toggle_debugger_breakpoint"
          },
          {
            "name": "wait"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/jetbrains.json",
        "upstream": "https://github.com/GannaChernyshova/mcp-jetbrains"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/kubectl-mcp-server",
    "description": "MCP Server that enables AI assistants to interact with Kubernetes clusters via kubectl operations.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/kubectl-mcp-server@sha256:29bf6aef7a69f8ce7927106f1bd7eb3977c11422bacb20c5d1389d3d50f1c8d6",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{kubectl-mcp-server.kubeconfig}:/root/.kube",
            "variables": {
              "kubectl-mcp-server.kubeconfig": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/rohitg00/kubectl-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-16T14:38:22Z",
        "githubStars": 731,
        "icon": "https://avatars.githubusercontent.com/u/13629408?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "rohitg00",
        "prompts": 0,
        "pulls": 1442,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/kubectl-mcp-server.md",
        "resources": {},
        "source": "https://github.com/rohitg00/kubectl-mcp-server/tree/f0986f3f3817283cf945b00ffb1329a3beef5f0e",
        "tags": [
          "kubectl-mcp-server",
          "kubernetes",
          "kubectl",
          "devops"
        ],
        "title": "Kubectl MCP Server",
        "tools": [
          {
            "name": "check_pod_health"
          },
          {
            "name": "create_deployment"
          },
          {
            "name": "delete_resource"
          },
          {
            "name": "get_api_resources"
          },
          {
            "name": "get_cluster_roles"
          },
          {
            "name": "get_configmaps"
          },
          {
            "name": "get_current_context"
          },
          {
            "name": "get_deployments"
          },
          {
            "name": "get_events"
          },
          {
            "name": "get_logs"
          },
          {
            "name": "get_namespaces"
          },
          {
            "name": "get_nodes"
          },
          {
            "name": "get_pod_events"
          },
          {
            "name": "get_pods"
          },
          {
            "name": "get_rbac_roles"
          },
          {
            "name": "get_resource_usage"
          },
          {
            "name": "get_secrets"
          },
          {
            "name": "get_services"
          },
          {
            "name": "health_check"
          },
          {
            "name": "install_helm_chart"
          },
          {
            "name": "kubectl_explain"
          },
          {
            "name": "port_forward"
          },
          {
            "name": "scale_deployment"
          },
          {
            "name": "switch_context"
          },
          {
            "name": "uninstall_helm_chart"
          },
          {
            "name": "upgrade_helm_chart"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/kubectl-mcp-server.json",
        "upstream": "https://github.com/rohitg00/kubectl-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/redis",
    "description": "Access to Redis database operations.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/redis@sha256:2894e2bf28ffca752e078f8f3e444d7db59398de643ce3983d573a9ab87897c8",
        "environmentVariables": [
          {
            "name": "REDIS_HOST",
            "value": "{redis.host}",
            "variables": {
              "redis.host": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_PORT",
            "value": "{redis.port}",
            "variables": {
              "redis.port": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_USERNAME",
            "value": "{redis.username}",
            "variables": {
              "redis.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_SSL",
            "value": "{redis.ssl}",
            "variables": {
              "redis.ssl": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_CA_PATH",
            "value": "{redis.ca_path}",
            "variables": {
              "redis.ca_path": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_SSL_KEYFILE",
            "value": "{redis.ssl_keyfile}",
            "variables": {
              "redis.ssl_keyfile": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_SSL_CERTFILE",
            "value": "{redis.ssl_certfile}",
            "variables": {
              "redis.ssl_certfile": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_CERT_REQS",
            "value": "{redis.cert_reqs}",
            "variables": {
              "redis.cert_reqs": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_CA_CERTS",
            "value": "{redis.ca_certs}",
            "variables": {
              "redis.ca_certs": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_CLUSTER_MODE",
            "value": "{redis.cluster_mode}",
            "variables": {
              "redis.cluster_mode": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDIS_PWD",
            "value": "{redis.password}",
            "variables": {
              "redis.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/redis/mcp-redis",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 306,
        "icon": "https://avatars.githubusercontent.com/u/1529926?v=4",
        "license": "MIT License",
        "owner": "redis",
        "prompts": 0,
        "pulls": 17464,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/redis.md",
        "resources": {},
        "source": "https://github.com/redis/mcp-redis/tree/0a69289ca038cb384da520f599d383747db6fcdc",
        "stars": 12,
        "tags": [
          "redis",
          "database"
        ],
        "title": "Redis",
        "tools": [
          {
            "name": "client_list"
          },
          {
            "name": "create_vector_index_hash"
          },
          {
            "name": "dbsize"
          },
          {
            "name": "delete"
          },
          {
            "name": "expire"
          },
          {
            "name": "get"
          },
          {
            "name": "get_index_info"
          },
          {
            "name": "get_indexed_keys_number"
          },
          {
            "name": "get_indexes"
          },
          {
            "name": "get_vector_from_hash"
          },
          {
            "name": "hdel"
          },
          {
            "name": "hexists"
          },
          {
            "name": "hget"
          },
          {
            "name": "hgetall"
          },
          {
            "name": "hset"
          },
          {
            "name": "info"
          },
          {
            "name": "json_del"
          },
          {
            "name": "json_get"
          },
          {
            "name": "json_set"
          },
          {
            "name": "llen"
          },
          {
            "name": "lpop"
          },
          {
            "name": "lpush"
          },
          {
            "name": "lrange"
          },
          {
            "name": "publish"
          },
          {
            "name": "rename"
          },
          {
            "name": "rpop"
          },
          {
            "name": "rpush"
          },
          {
            "name": "sadd"
          },
          {
            "name": "scan_all_keys"
          },
          {
            "name": "scan_keys"
          },
          {
            "name": "set"
          },
          {
            "name": "set_vector_in_hash"
          },
          {
            "name": "smembers"
          },
          {
            "name": "srem"
          },
          {
            "name": "subscribe"
          },
          {
            "name": "type"
          },
          {
            "name": "unsubscribe"
          },
          {
            "name": "vector_search_hash"
          },
          {
            "name": "xadd"
          },
          {
            "name": "xdel"
          },
          {
            "name": "xrange"
          },
          {
            "name": "zadd"
          },
          {
            "name": "zrange"
          },
          {
            "name": "zrem"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/redis.json",
        "upstream": "https://github.com/redis/mcp-redis"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/smartbear",
    "description": "MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/smartbear@sha256:60bb3ffc4825c4842540064fb5ff54d6139918c9d52fa4ac21b23f390beae688",
        "environmentVariables": [
          {
            "name": "BUGSNAG_PROJECT_API_KEY",
            "value": "{smartbear.bugsnag_api_key}",
            "variables": {
              "smartbear.bugsnag_api_key": {
                "format": "string"
              }
            }
          },
          {
            "name": "BUGSNAG_ENDPOINT",
            "value": "{smartbear.bugsnag_endpoint}",
            "variables": {
              "smartbear.bugsnag_endpoint": {
                "format": "string"
              }
            }
          },
          {
            "name": "PACT_BROKER_BASE_URL",
            "value": "{smartbear.pact_broker_base_url}",
            "variables": {
              "smartbear.pact_broker_base_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "PACT_BROKER_USERNAME",
            "value": "{smartbear.pact_broker_username}",
            "variables": {
              "smartbear.pact_broker_username": {
                "format": "string"
              }
            }
          },
          {
            "name": "BUGSNAG_AUTH_TOKEN",
            "value": "{smartbear.bugsnag_auth_token}",
            "variables": {
              "smartbear.bugsnag_auth_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "REFLECT_API_TOKEN",
            "value": "{smartbear.reflect_api_token}",
            "variables": {
              "smartbear.reflect_api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "API_HUB_API_KEY",
            "value": "{smartbear.api_hub_api_key}",
            "variables": {
              "smartbear.api_hub_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "PACT_BROKER_TOKEN",
            "value": "{smartbear.pact_broker_token}",
            "variables": {
              "smartbear.pact_broker_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "PACT_BROKER_PASSWORD",
            "value": "{smartbear.pact_broker_password}",
            "variables": {
              "smartbear.pact_broker_password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/SmartBear/smartbear-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-08-05T16:31:03Z",
        "githubStars": 17,
        "icon": "https://avatars.githubusercontent.com/u/1644671?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "SmartBear",
        "prompts": 0,
        "pulls": 1067,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/smartbear.md",
        "resources": {},
        "source": "https://github.com/SmartBear/smartbear-mcp/tree/bea22ab726fdc54bbd4d032eaa9f85a92d1ece92",
        "tags": [
          "smartbear",
          "devops",
          "api-testing",
          "monitoring"
        ],
        "title": "SmartBear MCP Server",
        "tools": [
          {
            "name": "api_hub_create_api_from_template"
          },
          {
            "name": "api_hub_create_or_update_api"
          },
          {
            "name": "api_hub_create_portal"
          },
          {
            "name": "api_hub_create_portal_product"
          },
          {
            "name": "api_hub_delete_portal"
          },
          {
            "name": "api_hub_delete_portal_product"
          },
          {
            "name": "api_hub_get_api_definition"
          },
          {
            "name": "api_hub_get_portal"
          },
          {
            "name": "api_hub_get_portal_product"
          },
          {
            "name": "api_hub_list_portal_products"
          },
          {
            "name": "api_hub_list_portals"
          },
          {
            "name": "api_hub_search_apis_and_domains"
          },
          {
            "name": "api_hub_update_portal"
          },
          {
            "name": "api_hub_update_portal_product"
          },
          {
            "name": "bugsnag_get_build"
          },
          {
            "name": "bugsnag_get_error"
          },
          {
            "name": "bugsnag_get_event_details"
          },
          {
            "name": "bugsnag_get_release"
          },
          {
            "name": "bugsnag_list_project_errors"
          },
          {
            "name": "bugsnag_list_project_event_filters"
          },
          {
            "name": "bugsnag_list_projects"
          },
          {
            "name": "bugsnag_list_releases"
          },
          {
            "name": "bugsnag_update_error"
          },
          {
            "name": "contract-testing_can_i_deploy"
          },
          {
            "name": "contract-testing_check_pactflow_ai_entitlements"
          },
          {
            "name": "contract-testing_generate_pact_tests"
          },
          {
            "name": "contract-testing_get_provider_states"
          },
          {
            "name": "contract-testing_matrix"
          },
          {
            "name": "contract-testing_review_pact_tests"
          },
          {
            "name": "reflect_cancel_suite_execution"
          },
          {
            "name": "reflect_execute_suite"
          },
          {
            "name": "reflect_get_suite_execution_status"
          },
          {
            "name": "reflect_get_test_status"
          },
          {
            "name": "reflect_list_suite_executions"
          },
          {
            "name": "reflect_list_suites"
          },
          {
            "name": "reflect_list_tests"
          },
          {
            "name": "reflect_run_test"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/smartbear.json",
        "upstream": "https://github.com/SmartBear/smartbear-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/brave",
    "description": "Search the Web for pages, images, news, videos, and more using the Brave Search API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/brave-search@sha256:9f996f16805dbdffd13afb4cc5623d600eff4b8480d5e13f5d2cc10b7ad29841",
        "environmentVariables": [
          {
            "name": "BRAVE_MCP_TRANSPORT",
            "value": "stdio"
          },
          {
            "name": "BRAVE_API_KEY",
            "value": "{brave.api_key}",
            "variables": {
              "brave.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/brave/brave-search-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 311,
        "icon": "https://avatars.githubusercontent.com/u/12301619?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "brave",
        "prompts": 0,
        "pulls": 55107,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/brave.md",
        "resources": {},
        "source": "https://github.com/brave/brave-search-mcp-server/tree/a25160bcad9cded587b8ed94eacf9688a1b552de",
        "stars": 20,
        "tags": [
          "brave",
          "search"
        ],
        "title": "Brave Search",
        "tools": [
          {
            "name": "brave_image_search"
          },
          {
            "name": "brave_local_search"
          },
          {
            "name": "brave_news_search"
          },
          {
            "name": "brave_summarizer"
          },
          {
            "name": "brave_video_search"
          },
          {
            "name": "brave_web_search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/brave.json",
        "upstream": "https://github.com/brave/brave-search-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/git",
    "description": "Git repository interaction and automation.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/git@sha256:ad6af958e79466a14b895891e772fdda28fdc12c06fff4a70637b66773303a2c",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{git.paths|volume|into}",
            "variables": {
              "git.paths": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/18133?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 47592,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/git.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306/src/git",
        "stars": 27,
        "tags": [
          "gitl",
          "devops"
        ],
        "title": "Git (Reference)",
        "tools": [
          {
            "name": "git_add"
          },
          {
            "name": "git_checkout"
          },
          {
            "name": "git_commit"
          },
          {
            "name": "git_create_branch"
          },
          {
            "name": "git_diff"
          },
          {
            "name": "git_diff_staged"
          },
          {
            "name": "git_diff_unstaged"
          },
          {
            "name": "git_init"
          },
          {
            "name": "git_log"
          },
          {
            "name": "git_reset"
          },
          {
            "name": "git_show"
          },
          {
            "name": "git_status"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/git.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mcp-code-interpreter",
    "description": "A Python-based execution tool that mimics a Jupyter notebook environment. It accepts code snippet...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mcp-code-interpreter@sha256:d6ce03d191c78b8e1b76eb861759c005469fc05606c7d8cc4fe64355a24550a9",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "notebooks:/app/notebooks"
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/akuadane/mcp-code-interpreter",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 7,
        "icon": "https://raw.githubusercontent.com/akuadane/mcp-code-interpreter/refs/heads/main/asset/logo.png",
        "license": "MIT License",
        "owner": "akuadane",
        "prompts": 0,
        "pulls": 2865,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mcp-code-interpreter.md",
        "resources": {},
        "source": "https://github.com/akuadane/mcp-code-interpreter/tree/209ddfca8c7a20cd44834a6217dfca358b532f90",
        "stars": 2,
        "tags": [
          "productivity"
        ],
        "title": "Python Interpreter",
        "tools": [
          {
            "name": "execute_code"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mcp-code-interpreter.json",
        "upstream": "https://github.com/akuadane/mcp-code-interpreter"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/cockroachdb",
    "description": "Enable AI agents to manage, monitor, and query CockroachDB using natural language. Perform comple...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/cockroachdb@sha256:4863594a246c6f86a5c4c87383a679353e9a6b4d85c3327c48464669cd236b1e",
        "environmentVariables": [
          {
            "name": "CRDB_HOST",
            "value": "{cockroachdb.host}",
            "variables": {
              "cockroachdb.host": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_PORT",
            "value": "{cockroachdb.port}",
            "variables": {
              "cockroachdb.port": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_DATABASE",
            "value": "{cockroachdb.database}",
            "variables": {
              "cockroachdb.database": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_USERNAME",
            "value": "{cockroachdb.username}",
            "variables": {
              "cockroachdb.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_SSL_MODE",
            "value": "{cockroachdb.ssl_mode}",
            "variables": {
              "cockroachdb.ssl_mode": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_SSL_CA_PATH",
            "value": "{cockroachdb.ca_path}",
            "variables": {
              "cockroachdb.ca_path": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_SSL_KEYFILE",
            "value": "{cockroachdb.ssl_keyfile}",
            "variables": {
              "cockroachdb.ssl_keyfile": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_SSL_CERTFILE",
            "value": "{cockroachdb.ssl_certfile}",
            "variables": {
              "cockroachdb.ssl_certfile": {
                "format": "string"
              }
            }
          },
          {
            "name": "CRDB_PWD",
            "value": "{cockroachdb.password}",
            "variables": {
              "cockroachdb.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/amineelkouhen/mcp-cockroachdb",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-07-16T06:22:24Z",
        "githubStars": 5,
        "icon": "https://avatars.githubusercontent.com/u/6748139?v=4",
        "license": "MIT License",
        "owner": "amineelkouhen",
        "prompts": 0,
        "pulls": 1110,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/cockroachdb.md",
        "resources": {},
        "source": "https://github.com/amineelkouhen/mcp-cockroachdb/tree/5c323e49ef52dbf1f3d4714dcd2dffa577d368fe",
        "tags": [
          "cockroachdb",
          "database"
        ],
        "title": "CockroachDB",
        "tools": [
          {
            "name": "analyze_performance"
          },
          {
            "name": "analyze_schema"
          },
          {
            "name": "bulk_import"
          },
          {
            "name": "connect"
          },
          {
            "name": "connect_database"
          },
          {
            "name": "create_database"
          },
          {
            "name": "create_index"
          },
          {
            "name": "create_table"
          },
          {
            "name": "create_view"
          },
          {
            "name": "describe_table"
          },
          {
            "name": "drop_database"
          },
          {
            "name": "drop_index"
          },
          {
            "name": "drop_table"
          },
          {
            "name": "drop_view"
          },
          {
            "name": "execute_query"
          },
          {
            "name": "execute_transaction"
          },
          {
            "name": "explain_query"
          },
          {
            "name": "get_active_connections"
          },
          {
            "name": "get_cluster_status"
          },
          {
            "name": "get_connection_status"
          },
          {
            "name": "get_database_settings"
          },
          {
            "name": "get_query_history"
          },
          {
            "name": "get_replication_status"
          },
          {
            "name": "get_table_relationships"
          },
          {
            "name": "list_databases"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "list_views"
          },
          {
            "name": "show_running_queries"
          },
          {
            "name": "switch_database"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/cockroachdb.json",
        "upstream": "https://github.com/amineelkouhen/mcp-cockroachdb"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/cyreslab-ai-shodan",
    "description": "A Model Context Protocol server that provides access to Shodan API functionality.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/cyreslab-ai-shodan@sha256:f99f2d2d69555aafcc67229ea7b757db57073d501ed1d60beb47049d3f60e08c",
        "environmentVariables": [
          {
            "name": "SHODAN_API_KEY",
            "value": "{cyreslab-ai-shodan.api_key}",
            "variables": {
              "cyreslab-ai-shodan.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Cyreslab-AI/shodan-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 32,
        "icon": "https://avatars.githubusercontent.com/u/178556137?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "Cyreslab-AI",
        "prompts": 0,
        "pulls": 4133,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/cyreslab-ai-shodan.md",
        "resources": {},
        "source": "https://github.com/Cyreslab-AI/shodan-mcp-server/tree/935f7044f60570cf2d094d94596eeea7872fb6be",
        "stars": 7,
        "tags": [
          "cyreslab-ai-shodan",
          "devops"
        ],
        "title": "Shodan",
        "tools": [
          {
            "name": "get_host_info"
          },
          {
            "name": "get_ssl_info"
          },
          {
            "name": "scan_network_range"
          },
          {
            "name": "search_iot_devices"
          },
          {
            "name": "search_shodan"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/cyreslab-ai-shodan.json",
        "upstream": "https://github.com/Cyreslab-AI/shodan-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/node-code-sandbox",
    "description": "A Node.jsâ€“based Model Context Protocol server that spins up disposable Docker containers to exe...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/node-code-sandbox@sha256:6b7180ab719dab2028dfc689002295ed6d55f7cc6217122d5025d849d5269666"
      }
    ],
    "repository": {
      "url": "https://github.com/alfonsograziano/node-code-sandbox-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 115,
        "icon": "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/nodedotjs.svg",
        "license": "",
        "owner": "alfonsograziano",
        "prompts": 0,
        "pulls": 57460,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/node-code-sandbox.md",
        "resources": {},
        "source": "https://github.com/alfonsograziano/node-code-sandbox-mcp/tree/f6727b3be251fbd24826ca961a16cd98bbfe6125",
        "stars": 6,
        "tags": [
          "node-code-sandbox",
          "devops"
        ],
        "title": "Node.js Sandbox",
        "tools": [
          {
            "name": "get_dependency_types"
          },
          {
            "name": "run_js"
          },
          {
            "name": "run_js_ephemeral"
          },
          {
            "name": "sandbox_exec"
          },
          {
            "name": "sandbox_initialize"
          },
          {
            "name": "sandbox_stop"
          },
          {
            "name": "search_npm_packages"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/node-code-sandbox.json",
        "upstream": "https://github.com/alfonsograziano/node-code-sandbox-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/razorpay",
    "description": "Razorpay's Official MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/razorpay@sha256:90bf885af7a6c9335818c6d22b6f667b978729c13698a48f77c9f4e1a4213e5d",
        "environmentVariables": [
          {
            "name": "RAZORPAY_KEY_ID",
            "value": "{razorpay.key_id}",
            "variables": {
              "razorpay.key_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "RAZORPAY_KEY_SECRET",
            "value": "{razorpay.key_secret}",
            "variables": {
              "razorpay.key_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/razorpay/razorpay-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 206,
        "icon": "https://avatars.githubusercontent.com/u/7713209?v=4",
        "license": "MIT License",
        "owner": "razorpay",
        "prompts": 0,
        "pulls": 2444,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/razorpay.md",
        "resources": {},
        "source": "https://github.com/razorpay/razorpay-mcp-server/tree/93bf471d1939bcf1bc2351ae1b20e71c34aafe33",
        "stars": 1,
        "tags": [
          "razorpay",
          "devops"
        ],
        "title": "Razorpay",
        "tools": [
          {
            "name": "capture_payment"
          },
          {
            "name": "close_qr_code"
          },
          {
            "name": "create_instant_settlement"
          },
          {
            "name": "create_order"
          },
          {
            "name": "create_payment_link"
          },
          {
            "name": "create_qr_code"
          },
          {
            "name": "create_refund"
          },
          {
            "name": "fetch_all_instant_settlements"
          },
          {
            "name": "fetch_all_orders"
          },
          {
            "name": "fetch_all_payment_links"
          },
          {
            "name": "fetch_all_payments"
          },
          {
            "name": "fetch_all_payouts"
          },
          {
            "name": "fetch_all_qr_codes"
          },
          {
            "name": "fetch_all_refunds"
          },
          {
            "name": "fetch_all_settlements"
          },
          {
            "name": "fetch_instant_settlement_with_id"
          },
          {
            "name": "fetch_multiple_refunds_for_payment"
          },
          {
            "name": "fetch_order"
          },
          {
            "name": "fetch_order_payments"
          },
          {
            "name": "fetch_payment"
          },
          {
            "name": "fetch_payment_card_details"
          },
          {
            "name": "fetch_payment_link"
          },
          {
            "name": "fetch_payments_for_qr_code"
          },
          {
            "name": "fetch_payout_with_id"
          },
          {
            "name": "fetch_qr_code"
          },
          {
            "name": "fetch_qr_codes_by_customer_id"
          },
          {
            "name": "fetch_qr_codes_by_payment_id"
          },
          {
            "name": "fetch_refund"
          },
          {
            "name": "fetch_settlement_recon_details"
          },
          {
            "name": "fetch_settlement_with_id"
          },
          {
            "name": "fetch_specific_refund_for_payment"
          },
          {
            "name": "fetch_tokens"
          },
          {
            "name": "initiate_payment"
          },
          {
            "name": "payment_link_notify"
          },
          {
            "name": "payment_link_upi_create"
          },
          {
            "name": "resend_otp"
          },
          {
            "name": "revoke_token"
          },
          {
            "name": "submit_otp"
          },
          {
            "name": "update_order"
          },
          {
            "name": "update_payment"
          },
          {
            "name": "update_payment_link"
          },
          {
            "name": "update_refund"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/razorpay.json",
        "upstream": "https://github.com/razorpay/razorpay-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/vizro",
    "description": "provides tools and templates to create a functioning Vizro chart or dashboard step by step.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/vizro@sha256:371774d00e41084d2b9b35db8445b6f746a071b9700f93eff26b549ff09ee797"
      }
    ],
    "repository": {
      "url": "https://github.com/mckinsey/vizro",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "data-visualization",
        "dateAdded": "2025-05-29T20:04:34Z",
        "githubStars": 3455,
        "icon": "https://avatars.githubusercontent.com/u/4265350?v=4",
        "license": "Apache License 2.0",
        "owner": "mckinsey",
        "prompts": 0,
        "pulls": 3300,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/vizro.md",
        "resources": {},
        "source": "https://github.com/mckinsey/vizro/tree/19867f28630286059658c802487c541cc9771767/vizro-mcp",
        "stars": 1,
        "tags": [
          "dashboard",
          "data-visualization",
          "plotly",
          "plotly-dash",
          "pydantic",
          "python",
          "visualization"
        ],
        "title": "Vizro",
        "tools": [
          {
            "name": "get_model_json_schema"
          },
          {
            "name": "get_sample_data_info"
          },
          {
            "name": "get_vizro_chart_or_dashboard_plan"
          },
          {
            "name": "load_and_analyze_data"
          },
          {
            "name": "validate_chart_code"
          },
          {
            "name": "validate_dashboard_config"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/vizro.json",
        "upstream": "https://github.com/mckinsey/vizro"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/line",
    "description": "MCP server that integrates the LINE Messaging API to connect an AI Agent to the LINE Official Acc...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/line@sha256:c50a812b47f8645f0004c4594f0c94bf0d28c414a3413ff702886468a4bdc66c",
        "environmentVariables": [
          {
            "name": "DESTINATION_USER_ID",
            "value": "{line.user_id}",
            "variables": {
              "line.user_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "CHANNEL_ACCESS_TOKEN",
            "value": "{line.access_token}",
            "variables": {
              "line.access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/line/line-bot-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 488,
        "icon": "https://avatars.githubusercontent.com/u/13128444?v=4",
        "license": "Apache License 2.0",
        "owner": "line",
        "prompts": 0,
        "pulls": 5933,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/line.md",
        "resources": {},
        "source": "https://github.com/line/line-bot-mcp-server/tree/f65cc1923f01da71427330d854e9dd77175585d6",
        "tags": [
          "line",
          "devops"
        ],
        "title": "LINE",
        "tools": [
          {
            "name": "broadcast_flex_message"
          },
          {
            "name": "broadcast_text_message"
          },
          {
            "name": "cancel_rich_menu_default"
          },
          {
            "name": "delete_rich_menu"
          },
          {
            "name": "get_message_quota"
          },
          {
            "name": "get_profile"
          },
          {
            "name": "get_rich_menu_list"
          },
          {
            "name": "push_flex_message"
          },
          {
            "name": "push_text_message"
          },
          {
            "name": "set_rich_menu_default"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/line.json",
        "upstream": "https://github.com/line/line-bot-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/opine-mcp-server",
    "description": "A Model Context Protocol (MCP) server for querying deals and evaluations from the Opine CRM API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "codygreen719/opine-mcp-server@sha256:82c7a0c4941cbf6a903e445b1b4f12474978191d016ae23433984931e4a39c9e",
        "environmentVariables": [
          {
            "name": "OPINE_API_KEY",
            "value": "{opine-mcp-server.OPINE_API_KEY}",
            "variables": {
              "opine-mcp-server.OPINE_API_KEY": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/cody-docker/opine-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-06T06:18:47Z",
        "githubStars": 1,
        "icon": "https://app.tryopine.com/_next/image?url=%2Flogomark.png\u0026w=32\u0026q=75",
        "license": "Other",
        "owner": "cody-docker",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/opine-mcp-server.md",
        "resources": {},
        "source": "https://github.com/cody-docker/opine-mcp-server/tree/63e0c626850dad818491a04c84f28e575e530322",
        "tags": [
          "productivity"
        ],
        "title": "Opine MCP Server",
        "tools": [
          {
            "name": "get_deal"
          },
          {
            "name": "list_deals"
          },
          {
            "name": "list_evaluations"
          },
          {
            "name": "list_tickets"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/opine-mcp-server.json",
        "upstream": "https://github.com/cody-docker/opine-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/paper-search",
    "description": "A MCP for searching and downloading academic papers from multiple sources like arXiv, PubMed, bio...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/paper-search@sha256:fee339283c68af0470d24dd6e7fb2937bc144a24c2b6574d0da8ea0366285044"
      }
    ],
    "repository": {
      "url": "https://github.com/openags/paper-search-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-06-05T05:10:44Z",
        "githubStars": 418,
        "icon": "https://avatars.githubusercontent.com/u/197887910?v=4",
        "license": "MIT License",
        "owner": "openags",
        "prompts": 0,
        "pulls": 6691,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/paper-search.md",
        "resources": {},
        "source": "https://github.com/openags/paper-search-mcp/tree/cf2697fd04a7b7c1ced0e382ab84f0c214614f83",
        "stars": 3,
        "tags": [
          "academic",
          "search"
        ],
        "title": "Paper Search",
        "tools": [
          {
            "name": "download_arxiv"
          },
          {
            "name": "download_biorxiv"
          },
          {
            "name": "download_crossref"
          },
          {
            "name": "download_iacr"
          },
          {
            "name": "download_medrxiv"
          },
          {
            "name": "download_pubmed"
          },
          {
            "name": "download_semantic"
          },
          {
            "name": "get_crossref_paper_by_doi"
          },
          {
            "name": "read_arxiv_paper"
          },
          {
            "name": "read_biorxiv_paper"
          },
          {
            "name": "read_crossref_paper"
          },
          {
            "name": "read_iacr_paper"
          },
          {
            "name": "read_medrxiv_paper"
          },
          {
            "name": "read_pubmed_paper"
          },
          {
            "name": "read_semantic_paper"
          },
          {
            "name": "search_arxiv"
          },
          {
            "name": "search_biorxiv"
          },
          {
            "name": "search_crossref"
          },
          {
            "name": "search_google_scholar"
          },
          {
            "name": "search_iacr"
          },
          {
            "name": "search_medrxiv"
          },
          {
            "name": "search_pubmed"
          },
          {
            "name": "search_semantic"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/paper-search.json",
        "upstream": "https://github.com/openags/paper-search-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/postgres",
    "description": "Connect with read-only access to PostgreSQL databases. This server enables LLMs to inspect databa...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/postgres@sha256:b72c08f19e864b3e8beea8e90d048b9271924e704113345a29683f6d1e95a8f0",
        "environmentVariables": [
          {
            "name": "POSTGRES_URL",
            "value": "{postgres.url}",
            "variables": {
              "postgres.url": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "positional",
            "value": "$POSTGRES_URL"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/177543?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 148719,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/postgres.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 31,
        "tags": [
          "postgres",
          "database"
        ],
        "title": "PostgreSQL readonly (Archived)",
        "tools": [
          {
            "name": "query"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/postgres.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/glif",
    "description": "Easily run glif.app AI workflows inside your LLM: image generators, memes, selfies, and more. Gli...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/glif@sha256:e463175026e5a606609fd05fa29cad80d6495d7795960fdde4ad1c87aee5c504",
        "environmentVariables": [
          {
            "name": "GLIF_IDS",
            "value": "{glif.ids}",
            "variables": {
              "glif.ids": {
                "format": "string"
              }
            }
          },
          {
            "name": "IGNORE_SAVED_GLIFS",
            "value": "{glif.ignored_saved}",
            "variables": {
              "glif.ignored_saved": {
                "format": "string"
              }
            }
          },
          {
            "name": "GLIF_API_TOKEN",
            "value": "{glif.api_token}",
            "variables": {
              "glif.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/glifxyz/glif-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 26,
        "icon": "https://avatars.githubusercontent.com/u/119348676?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "glifxyz",
        "prompts": 0,
        "pulls": 3517,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/glif.md",
        "resources": {},
        "source": "https://github.com/glifxyz/glif-mcp-server/tree/91fc5343911ea1cf3f3de675d0516cb300e06f9a",
        "stars": 2,
        "tags": [
          "glif",
          "devops"
        ],
        "title": "glif.app",
        "tools": [
          {
            "name": "glif_info"
          },
          {
            "name": "list_featured_glifs"
          },
          {
            "name": "list_saved_glif_tools"
          },
          {
            "name": "my_glif_user_info"
          },
          {
            "name": "my_glifs"
          },
          {
            "name": "remove_all_glif_tools"
          },
          {
            "name": "remove_glif_tool"
          },
          {
            "name": "run_glif"
          },
          {
            "name": "save_glif_as_tool"
          },
          {
            "name": "search_glifs"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/glif.json",
        "upstream": "https://github.com/glifxyz/glif-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/root",
    "description": "MCP server that provides container image vulnerability scanning and remediation capabilities thro...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/root@sha256:f2627402e2ebc19228ac1136b17cffb476ec9d75a372eb8419cbfb5738a32ac8",
        "environmentVariables": [
          {
            "name": "API_ACCESS_TOKEN",
            "value": "{root.api_access_token}",
            "variables": {
              "root.api_access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/rootio-avr/mcp-proxy",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "security",
        "dateAdded": "2025-07-10T19:06:20Z",
        "githubStars": 2,
        "icon": "https://raw.githubusercontent.com/rootio-avr/mcp-proxy/refs/heads/main/assets/root-logo.svg",
        "license": "MIT License",
        "owner": "rootio-avr",
        "prompts": 0,
        "pulls": 947,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/root.md",
        "resources": {},
        "source": "https://github.com/rootio-avr/mcp-proxy/tree/1d1eb02366e4b47ae9d86ac510929bde4be1f0da",
        "stars": 5,
        "tags": [
          "security",
          "vulnerability",
          "scanning",
          "remediation"
        ],
        "title": "Root.io Vulnerability Remediation MCP",
        "tools": [
          {
            "name": "create_registry_integration"
          },
          {
            "name": "get_image_remediation"
          },
          {
            "name": "get_remediation_continuity_summary"
          },
          {
            "name": "get_remediation_details_by_scan_id"
          },
          {
            "name": "get_remediation_status"
          },
          {
            "name": "get_user_info"
          },
          {
            "name": "list_remediation_continuity_summaries"
          },
          {
            "name": "list_unique_fqins"
          },
          {
            "name": "ping"
          },
          {
            "name": "registries_credentials_list"
          },
          {
            "name": "trigger_remediation"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/root.json",
        "upstream": "https://github.com/rootio-avr/mcp-proxy"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/wolfram-alpha",
    "description": "Connect your chat repl to wolfram alpha computational intelligence.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/wolfram-alpha@sha256:4cd89d002d55d3f6f1115745b7d05a9d3e6fbb28e1e57536406b79805208571a",
        "environmentVariables": [
          {
            "name": "WOLFRAM_API_KEY",
            "value": "{wolfram-alpha.api_key}",
            "variables": {
              "wolfram-alpha.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/SecretiveShell/MCP-wolfram-alpha",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 63,
        "icon": "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/wolfram.svg",
        "license": "MIT License",
        "owner": "SecretiveShell",
        "prompts": 0,
        "pulls": 26302,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/wolfram-alpha.md",
        "resources": {},
        "source": "https://github.com/SecretiveShell/MCP-wolfram-alpha/tree/0aa2530c8da8f3976a8c5383f9f9e1376bd337df",
        "stars": 6,
        "tags": [
          "wolfram-alpha",
          "devops"
        ],
        "title": "WolframAlpha",
        "tools": [
          {
            "name": "query-wolfram-alpha"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/wolfram-alpha.json",
        "upstream": "https://github.com/SecretiveShell/MCP-wolfram-alpha"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/exa",
    "description": "Exa MCP for web search and web crawling!.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/exa@sha256:61f88e24df5bc379133f97feb7d5865c2531c56759c8a34f8cd88e02bf33867d",
        "environmentVariables": [
          {
            "name": "EXA_API_KEY",
            "value": "{exa.api_key}",
            "variables": {
              "exa.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/exa-labs/exa-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 3150,
        "icon": "https://avatars.githubusercontent.com/u/77906174?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "exa-labs",
        "prompts": 0,
        "pulls": 5504,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/exa.md",
        "resources": {},
        "source": "https://github.com/exa-labs/exa-mcp-server/tree/6ebf32f550168af016837efe31960c6548c831aa",
        "stars": 5,
        "tags": [
          "exa",
          "devops",
          "search"
        ],
        "title": "Exa",
        "tools": [
          {
            "name": "web_search_exa"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/exa.json",
        "upstream": "https://github.com/exa-labs/exa-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/ast-grep",
    "description": "ast-grep is a fast and polyglot tool for code structural search, lint, rewriting at large scale.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/ast-grep@sha256:5fc3f2e9dcf2c019e92662f608b8d89e12134ed6d91e6f5461de6efd506a1e72",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{ast-grep.path|volume-target}:/src",
            "variables": {
              "ast-grep.path": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/dgageot/mcp-ast-grep",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "code",
        "dateAdded": "2025-09-04T06:24:28Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/114017360?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "dgageot",
        "prompts": 0,
        "pulls": 4799,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/ast-grep.md",
        "resources": {},
        "source": "https://github.com/dgageot/mcp-ast-grep/tree/c0a1edaf9cd6b168f2b59bc5a0161ad49a793099",
        "stars": 2,
        "tags": [
          "code",
          "refactoring",
          "grep"
        ],
        "title": "ast-grep",
        "tools": [
          {
            "name": "ast-grep"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/ast-grep.json",
        "upstream": "https://github.com/dgageot/mcp-ast-grep"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/dreamfactory-mcp",
    "description": "DreamFactory is a REST API generation platform with support for hundreds of data sources, includi...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/df-mcp@sha256:c71c0564003a8dc4409aedd54a0e5bb4a0cd26ff91de849b46526aadb90f3aa8",
        "environmentVariables": [
          {
            "name": "DREAMFACTORY_URL",
            "value": "{dreamfactory-mcp.dreamfactoryurl}",
            "variables": {
              "dreamfactory-mcp.dreamfactoryurl": {
                "format": "string"
              }
            }
          },
          {
            "name": "DREAMFACTORY_API_KEY",
            "value": "{dreamfactory-mcp.dreamfactoryapikey}",
            "variables": {
              "dreamfactory-mcp.dreamfactoryapikey": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/dreamfactorysoftware/df-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-09-17T06:19:29Z",
        "githubStars": 4,
        "icon": "https://avatars.githubusercontent.com/u/2593688?v=4",
        "license": "Apache License 2.0",
        "owner": "dreamfactorysoftware",
        "prompts": 0,
        "pulls": 423,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/dreamfactory-mcp.md",
        "resources": {},
        "source": "https://github.com/dreamfactorysoftware/df-mcp/tree/ef98884d55917885316ca4ac48002ba16a54a1b8",
        "tags": [
          "database"
        ],
        "title": "DreamFactory MCP Server",
        "tools": [
          {
            "name": "call-stored-function"
          },
          {
            "name": "call-stored-procedure"
          },
          {
            "name": "get-stored-functions"
          },
          {
            "name": "get-stored-procedures"
          },
          {
            "name": "get-table-data"
          },
          {
            "name": "get-table-schema"
          },
          {
            "name": "get-tables"
          },
          {
            "name": "list-tools"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/dreamfactory-mcp.json",
        "upstream": "https://github.com/dreamfactorysoftware/df-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/explorium",
    "description": "Discover companies, contacts, and business insightsâ€”powered by dozens of trusted external data ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/explorium@sha256:6454e9a8eabc7d889cebbf81a6b3747bf1fd3653d0eaf8e10c4444ebdcbf47ba",
        "environmentVariables": [
          {
            "name": "API_ACCESS_TOKEN",
            "value": "{explorium.api_key}",
            "variables": {
              "explorium.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/explorium-ai/mcp-explorium",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-09-19T18:59:08Z",
        "githubStars": 17,
        "icon": "https://marketing-public-links.s3.us-east-1.amazonaws.com/Brand/Logo-dark.png",
        "license": "MIT License",
        "owner": "explorium-ai",
        "prompts": 0,
        "pulls": 311,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/explorium.md",
        "resources": {},
        "source": "https://github.com/explorium-ai/mcp-explorium/tree/68b1d497f6b4b42af581727a4cf08ded3b70a66c",
        "tags": [
          "search",
          "explorium",
          "b2b-data",
          "business",
          "prospecting",
          "emails",
          "phone-numbers",
          "sales"
        ],
        "title": "Explorium B2B Data",
        "tools": [
          {
            "name": "match-business"
          },
          {
            "name": "fetch-businesses"
          },
          {
            "name": "fetch-businesses-statistics"
          },
          {
            "name": "fetch-businesses-events"
          },
          {
            "name": "enrich-business"
          },
          {
            "name": "match-prospects"
          },
          {
            "name": "fetch-prospects"
          },
          {
            "name": "fetch-prospects-events"
          },
          {
            "name": "fetch-prospects-statistics"
          },
          {
            "name": "enrich-prospects"
          },
          {
            "name": "autocomplete"
          },
          {
            "name": "web-search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/explorium.json",
        "upstream": "https://github.com/explorium-ai/mcp-explorium"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/handwriting-ocr",
    "description": "Model Context Protocol (MCP) Server for Handwriting OCR.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/handwriting-ocr@sha256:141e2e00e706ab0fcf27973175e3bb68efdc99dd93d170e23eabf9cb96fa52e9",
        "environmentVariables": [
          {
            "name": "API_TOKEN",
            "value": "{handwriting-ocr.api_token}",
            "variables": {
              "handwriting-ocr.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 13,
        "icon": "https://avatars.githubusercontent.com/u/202432073?s=200\u0026v=4",
        "license": "",
        "owner": "Handwriting-OCR",
        "prompts": 0,
        "pulls": 2702,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/handwriting-ocr.md",
        "resources": {},
        "source": "https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server/tree/1b81cd90103265eac82d4a441fe669e6c7ccf03a",
        "stars": 2,
        "tags": [
          "handwriting-ocr",
          "devops"
        ],
        "title": "Handwriting OCR",
        "tools": [
          {
            "name": "check_status"
          },
          {
            "name": "get_text"
          },
          {
            "name": "upload_document"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/handwriting-ocr.json",
        "upstream": "https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/maestro-mcp-server",
    "description": "A Model Context Protocol (MCP) server exposing Bitcoin blockchain data through the Maestro API pl...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/maestro-mcp-server@sha256:f59151e2a665580f0fd7064112d5bac378f46179462bfe02307e016f98e2cd96",
        "environmentVariables": [
          {
            "name": "API_KEY_API_KEY",
            "value": "{maestro-mcp-server.API_KEY_API_KEY}",
            "variables": {
              "maestro-mcp-server.API_KEY_API_KEY": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/maestro-org/maestro-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-09-19T18:59:08Z",
        "githubStars": 18,
        "icon": "https://avatars.githubusercontent.com/u/84299480?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "maestro-org",
        "prompts": 0,
        "pulls": 337,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/maestro-mcp-server.md",
        "resources": {},
        "source": "https://github.com/maestro-org/maestro-mcp-server/tree/df54020d17b0b6c3b2a03c7a328c644b9f49d970",
        "tags": [
          "monitoring",
          "blockchain",
          "bitcoin",
          "rpc"
        ],
        "title": "Maestro MCP Server",
        "tools": [
          {
            "name": "get_address_activity"
          },
          {
            "name": "get_address_balance"
          },
          {
            "name": "get_address_balance_historical"
          },
          {
            "name": "get_address_brc20"
          },
          {
            "name": "get_address_brc20_transfer_inscriptions"
          },
          {
            "name": "get_address_inscriptions"
          },
          {
            "name": "get_address_inscription_activity"
          },
          {
            "name": "get_address_runes"
          },
          {
            "name": "get_address_rune_activity"
          },
          {
            "name": "get_address_rune_utxos"
          },
          {
            "name": "get_address_statistics"
          },
          {
            "name": "get_address_txs"
          },
          {
            "name": "get_address_utxos"
          },
          {
            "name": "get_mempool_address_balance"
          },
          {
            "name": "get_mempool_address_runes"
          },
          {
            "name": "list_brc20_assets"
          },
          {
            "name": "get_brc20_info"
          },
          {
            "name": "list_supported_dexs"
          },
          {
            "name": "get_dex_ohlc"
          },
          {
            "name": "get_btc_price_by_timestamp"
          },
          {
            "name": "get_rune_price_by_timestamp"
          },
          {
            "name": "rpc_chain_info"
          },
          {
            "name": "rpc_mempool_info"
          },
          {
            "name": "rpc_mempool_transactions"
          },
          {
            "name": "rpc_block_miner_info"
          },
          {
            "name": "rpc_block_volume"
          },
          {
            "name": "event_healthcheck"
          },
          {
            "name": "event_list_logs"
          },
          {
            "name": "event_get_log"
          },
          {
            "name": "event_list_triggers"
          },
          {
            "name": "event_create_trigger"
          },
          {
            "name": "event_get_trigger"
          },
          {
            "name": "event_update_trigger"
          },
          {
            "name": "event_delete_trigger"
          },
          {
            "name": "event_list_trigger_condition_options"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/maestro-mcp-server.json",
        "upstream": "https://github.com/maestro-org/maestro-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mapbox-devkit",
    "description": "Direct access to Mapbox developer APIs for AI assistants. Enables style management, token managem...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mapbox-devkit@sha256:8403426ef30a232b7ed457d8aad90497ee766e1256c0b2a6349131261892fa33",
        "environmentVariables": [
          {
            "name": "MAPBOX_ACCESS_TOKEN",
            "value": "{mapbox-devkit.access_token}",
            "variables": {
              "mapbox-devkit.access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/mapbox/mcp-devkit-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 22,
        "icon": "https://avatars.githubusercontent.com/u/600935?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "mapbox",
        "prompts": 0,
        "pulls": 1102,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mapbox-devkit.md",
        "resources": {},
        "source": "https://github.com/mapbox/mcp-devkit-server/tree/3d84bbe5bca6757aa1df62325cb1032114b335f7",
        "tags": [
          "mapbox",
          "development",
          "devtools",
          "api",
          "styles"
        ],
        "title": "Mapbox Developer MCP Server",
        "tools": [
          {
            "name": "bounding_box_tool"
          },
          {
            "name": "coordinate_conversion_tool"
          },
          {
            "name": "country_bounding_box_tool"
          },
          {
            "name": "create_style_tool"
          },
          {
            "name": "create_token_tool"
          },
          {
            "name": "delete_style_tool"
          },
          {
            "name": "geojson_preview_tool"
          },
          {
            "name": "get_latest_mapbox_docs_tool"
          },
          {
            "name": "list_styles_tool"
          },
          {
            "name": "list_tokens_tool"
          },
          {
            "name": "preview_style_tool"
          },
          {
            "name": "retrieve_style_tool"
          },
          {
            "name": "style_builder_tool"
          },
          {
            "name": "style_comparison_tool"
          },
          {
            "name": "tilequery_tool"
          },
          {
            "name": "update_style_tool"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mapbox-devkit.json",
        "upstream": "https://github.com/mapbox/mcp-devkit-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mcp-discord",
    "description": "Interact with the Discord platform.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mcp-discord@sha256:a9f146c6e7cc88bca04aee004c24d98d050fc01c54a9cc03731484754a401282",
        "environmentVariables": [
          {
            "name": "DISCORD_TOKEN",
            "value": "{discord.token}",
            "variables": {
              "discord.token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/slimslenderslacks/mcp-discord",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 12,
        "icon": "https://avatars.githubusercontent.com/u/1965106?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "slimslenderslacks",
        "prompts": 0,
        "pulls": 7202,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mcp-discord.md",
        "resources": {},
        "source": "https://github.com/slimslenderslacks/mcp-discord/tree/ab1e64668681448e1e7f3f63ad28d9ed54288508",
        "stars": 15,
        "tags": [
          "discord",
          "devops"
        ],
        "title": "Discord",
        "tools": [
          {
            "name": "discord_add_multiple_reactions"
          },
          {
            "name": "discord_add_reaction"
          },
          {
            "name": "discord_create_forum_post"
          },
          {
            "name": "discord_create_text_channel"
          },
          {
            "name": "discord_create_webhook"
          },
          {
            "name": "discord_delete_channel"
          },
          {
            "name": "discord_delete_forum_post"
          },
          {
            "name": "discord_delete_message"
          },
          {
            "name": "discord_delete_webhook"
          },
          {
            "name": "discord_edit_webhook"
          },
          {
            "name": "discord_get_forum_channels"
          },
          {
            "name": "discord_get_forum_post"
          },
          {
            "name": "discord_get_server_info"
          },
          {
            "name": "discord_login"
          },
          {
            "name": "discord_read_messages"
          },
          {
            "name": "discord_remove_reaction"
          },
          {
            "name": "discord_reply_to_forum"
          },
          {
            "name": "discord_send"
          },
          {
            "name": "discord_send_webhook_message"
          },
          {
            "name": "test"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mcp-discord.json",
        "upstream": "https://github.com/slimslenderslacks/mcp-discord"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/buildkite",
    "description": "Buildkite MCP lets agents interact with Buildkite Builds, Jobs, Logs, Packages and Test Suites.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/buildkite@sha256:29781e1fd3b806f20cecb84bef59aefa36024672ccf59124d3c2ee991690fa7a",
        "environmentVariables": [
          {
            "name": "BUILDKITE_API_TOKEN",
            "value": "{buildkite.api_key}",
            "variables": {
              "buildkite.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/buildkite/buildkite-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-07-21T12:46:15Z",
        "githubStars": 39,
        "icon": "https://avatars.githubusercontent.com/u/5055988?v=4",
        "license": "MIT License",
        "owner": "buildkite",
        "prompts": 0,
        "pulls": 1313,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/buildkite.md",
        "resources": {},
        "source": "https://github.com/buildkite/buildkite-mcp-server/tree/d4a9582d64d53c282de07d356bb79dbdcad77cc0",
        "tags": [
          "devops"
        ],
        "title": "Buildkite",
        "tools": [
          {
            "name": "access_token"
          },
          {
            "name": "create_build"
          },
          {
            "name": "create_pipeline"
          },
          {
            "name": "current_user"
          },
          {
            "name": "get_artifact"
          },
          {
            "name": "get_build"
          },
          {
            "name": "get_build_test_engine_runs"
          },
          {
            "name": "get_cluster"
          },
          {
            "name": "get_cluster_queue"
          },
          {
            "name": "get_failed_executions"
          },
          {
            "name": "get_job_logs"
          },
          {
            "name": "get_jobs"
          },
          {
            "name": "get_pipeline"
          },
          {
            "name": "get_test"
          },
          {
            "name": "get_test_run"
          },
          {
            "name": "list_annotations"
          },
          {
            "name": "list_artifacts"
          },
          {
            "name": "list_builds"
          },
          {
            "name": "list_cluster_queues"
          },
          {
            "name": "list_clusters"
          },
          {
            "name": "list_pipelines"
          },
          {
            "name": "list_test_runs"
          },
          {
            "name": "update_pipeline"
          },
          {
            "name": "user_token_organization"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/buildkite.json",
        "upstream": "https://github.com/buildkite/buildkite-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/github-chat",
    "description": "A Model Context Protocol (MCP) for analyzing and querying GitHub repositories using the GitHub Ch...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/github-chat@sha256:c9b12a1664919c8dbae726ef3f36761ee42b1a729ae17b820f73e6c59063047b",
        "environmentVariables": [
          {
            "name": "GITHUB_API_KEY",
            "value": "{github-chat.api_key}",
            "variables": {
              "github-chat.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/AsyncFuncAI/github-chat-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 68,
        "icon": "https://avatars.githubusercontent.com/u/194295535?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "AsyncFuncAI",
        "prompts": 0,
        "pulls": 4182,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/github-chat.md",
        "resources": {},
        "source": "https://github.com/AsyncFuncAI/github-chat-mcp/tree/8c1a390f10ab295ea7ce61c32461bbee06d2c654",
        "stars": 4,
        "tags": [
          "github-chat",
          "devops"
        ],
        "title": "GitHub Chat",
        "tools": [
          {
            "name": "index_repository"
          },
          {
            "name": "query_repository"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/github-chat.json",
        "upstream": "https://github.com/AsyncFuncAI/github-chat-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/slack",
    "description": "Interact with Slack Workspaces over the Slack API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/slack@sha256:4cc10c3f4bd988bd2dce40e3068fe38fa3b3bad1da99f9653eb5fa5cce35baa1",
        "environmentVariables": [
          {
            "name": "SLACK_TEAM_ID",
            "value": "{slack.team_id}",
            "variables": {
              "slack.team_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "SLACK_CHANNEL_IDS",
            "value": "{slack.channel_ids}",
            "variables": {
              "slack.channel_ids": {
                "format": "string"
              }
            }
          },
          {
            "name": "SLACK_BOT_TOKEN",
            "value": "{slack.bot_token}",
            "variables": {
              "slack.bot_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "communication",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/6911160?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 274995,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/slack.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 22,
        "tags": [
          "slack",
          "communication"
        ],
        "title": "Slack (Archived)",
        "tools": [
          {
            "name": "slack_add_reaction"
          },
          {
            "name": "slack_get_channel_history"
          },
          {
            "name": "slack_get_thread_replies"
          },
          {
            "name": "slack_get_user_profile"
          },
          {
            "name": "slack_get_users"
          },
          {
            "name": "slack_list_channels"
          },
          {
            "name": "slack_post_message"
          },
          {
            "name": "slack_reply_to_thread"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/slack.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/tavily",
    "description": "The Tavily MCP server provides seamless interaction with the tavily-search and tavily-extract too...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/tavily@sha256:971d2b952306d11558c0099b91f8910382c8dacbb7265834fda33187146d5f5a",
        "environmentVariables": [
          {
            "name": "TAVILY_API_KEY",
            "value": "{tavily.api_token}",
            "variables": {
              "tavily.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/tavily-ai/tavily-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 879,
        "icon": "https://avatars.githubusercontent.com/u/170207473?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "tavily-ai",
        "prompts": 0,
        "pulls": 15061,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/tavily.md",
        "resources": {},
        "source": "https://github.com/tavily-ai/tavily-mcp/tree/2be989a881f402a608a780827d3df92c5e946eb5",
        "stars": 8,
        "tags": [
          "tavily",
          "search"
        ],
        "title": "Tavily",
        "tools": [
          {
            "name": "tavily-crawl"
          },
          {
            "name": "tavily-extract"
          },
          {
            "name": "tavily-map"
          },
          {
            "name": "tavily-search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/tavily.json",
        "upstream": "https://github.com/tavily-ai/tavily-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/time",
    "description": "Time and timezone conversion capabilities.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/time@sha256:9c46a918633fb474bf8035e3ee90ebac6bcf2b18ccb00679ac4c179cba0ebfcf"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 252926,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/time.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306/src/time",
        "stars": 8,
        "tags": [
          "time",
          "devops"
        ],
        "title": "Time (Reference)",
        "tools": [
          {
            "name": "convert_time"
          },
          {
            "name": "get_current_time"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/time.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/cdata-connectcloud",
    "description": "This fully functional MCP Server allows you to connect to any data source in Connect Cloud from C...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/cdata-connectcloud@sha256:0cf0d5812998d38966ba64e6c4dbaabd153fe20177bcd34ee28647cd7de5929e",
        "environmentVariables": [
          {
            "name": "CDATA_USERNAME",
            "value": "{cdata-connectcloud.username}",
            "variables": {
              "cdata-connectcloud.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "CDATA_PAT",
            "value": "{cdata-connectcloud.pat}",
            "variables": {
              "cdata-connectcloud.pat": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/CDataSoftware/connectcloud-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-15T20:08:35Z",
        "githubStars": 2,
        "icon": "https://avatars.githubusercontent.com/u/24947354?v=4",
        "license": "",
        "owner": "CDataSoftware",
        "prompts": 0,
        "pulls": 1722,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/cdata-connectcloud.md",
        "resources": {},
        "source": "https://github.com/CDataSoftware/connectcloud-mcp-server/tree/87a53f68d7aa375fb8fd883be0daee8c12ec98fe",
        "stars": 3,
        "tags": [
          "cdata-connectcloud",
          "devops"
        ],
        "title": "CData Connect Cloud",
        "tools": [
          {
            "name": "execData"
          },
          {
            "name": "getCatalogs"
          },
          {
            "name": "getColumns"
          },
          {
            "name": "getExportedKeys"
          },
          {
            "name": "getImportedKeys"
          },
          {
            "name": "getIndexes"
          },
          {
            "name": "getPrimaryKeys"
          },
          {
            "name": "getProcedureParameters"
          },
          {
            "name": "getProcedures"
          },
          {
            "name": "getSchemas"
          },
          {
            "name": "getTables"
          },
          {
            "name": "queryData"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/cdata-connectcloud.json",
        "upstream": "https://github.com/CDataSoftware/connectcloud-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/github-official",
    "description": "Official GitHub MCP Server, by GitHub. Provides seamless integration with GitHub APIs, enabling a...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "ghcr.io/github/github-mcp-server@sha256:d909564772c4afc7ed08831c1fce367c051d82f8602abc4c1f033cdfc4a89e68",
        "environmentVariables": [
          {
            "name": "GITHUB_PERSONAL_ACCESS_TOKEN",
            "value": "{github.personal_access_token}",
            "variables": {
              "github.personal_access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/github/github-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 24080,
        "icon": "https://avatars.githubusercontent.com/u/9919?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "github",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/github-official.md",
        "resources": {},
        "source": "https://github.com/github/github-mcp-server/tree/23fa0dd1a821d1346c1de2abafe7327d26981606",
        "tags": [
          "github",
          "devops"
        ],
        "title": "GitHub Official",
        "tools": [
          {
            "name": "add_comment_to_pending_review"
          },
          {
            "name": "add_issue_comment"
          },
          {
            "name": "assign_copilot_to_issue"
          },
          {
            "name": "create_branch"
          },
          {
            "name": "create_or_update_file"
          },
          {
            "name": "create_pull_request"
          },
          {
            "name": "create_repository"
          },
          {
            "name": "delete_file"
          },
          {
            "name": "fork_repository"
          },
          {
            "name": "get_commit"
          },
          {
            "name": "get_file_contents"
          },
          {
            "name": "get_label"
          },
          {
            "name": "get_latest_release"
          },
          {
            "name": "get_me"
          },
          {
            "name": "get_release_by_tag"
          },
          {
            "name": "get_tag"
          },
          {
            "name": "get_team_members"
          },
          {
            "name": "get_teams"
          },
          {
            "name": "issue_read"
          },
          {
            "name": "issue_write"
          },
          {
            "name": "list_branches"
          },
          {
            "name": "list_commits"
          },
          {
            "name": "list_issue_types"
          },
          {
            "name": "list_issues"
          },
          {
            "name": "list_pull_requests"
          },
          {
            "name": "list_releases"
          },
          {
            "name": "list_tags"
          },
          {
            "name": "merge_pull_request"
          },
          {
            "name": "pull_request_read"
          },
          {
            "name": "pull_request_review_write"
          },
          {
            "name": "push_files"
          },
          {
            "name": "request_copilot_review"
          },
          {
            "name": "search_code"
          },
          {
            "name": "search_issues"
          },
          {
            "name": "search_pull_requests"
          },
          {
            "name": "search_repositories"
          },
          {
            "name": "search_users"
          },
          {
            "name": "sub_issue_write"
          },
          {
            "name": "update_pull_request"
          },
          {
            "name": "update_pull_request_branch"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/github-official.json",
        "upstream": "https://github.com/github/github-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/databutton",
    "description": "Databutton MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/databutton@sha256:17928fc93e10ce510703a5aa0d123e1135ddd35ac7fbb20f59bfecacb9b06362"
      }
    ],
    "repository": {
      "url": "https://github.com/databutton/databutton-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 27,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "databutton",
        "prompts": 0,
        "pulls": 4386,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/databutton.md",
        "resources": {},
        "source": "https://github.com/databutton/databutton-mcp/tree/3dde0e0dfcb91de131939a622403eeda3c1402b7",
        "stars": 1,
        "tags": [
          "databutton",
          "devops"
        ],
        "title": "Databutton",
        "tools": [
          {
            "name": "submit_app_requirements"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/databutton.json",
        "upstream": "https://github.com/databutton/databutton-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/airtable-mcp-server",
    "description": "Provides AI assistants with direct access to Airtable bases, allowing them to read schemas, query...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/airtable-mcp-server@sha256:cd9219e08158069ad0153aedb091b285b5eb7553a7a9251977f2dabb6fe8e283",
        "environmentVariables": [
          {
            "name": "NODE_ENV",
            "value": "{airtable-mcp-server.nodeenv}",
            "variables": {
              "airtable-mcp-server.nodeenv": {
                "format": "string"
              }
            }
          },
          {
            "name": "AIRTABLE_API_KEY",
            "value": "{airtable-mcp-server.api_key}",
            "variables": {
              "airtable-mcp-server.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/domdomegg/airtable-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-17T06:19:29Z",
        "githubStars": 332,
        "icon": "https://www.google.com/s2/favicons?domain=airtable.com\u0026sz=64",
        "license": "MIT License",
        "owner": "domdomegg",
        "prompts": 0,
        "pulls": 1646,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/airtable-mcp-server.md",
        "resources": {},
        "source": "https://github.com/domdomegg/airtable-mcp-server/tree/3b8770cae3a1ba18bf6aeac2f40095c12749bd92",
        "tags": [
          "productivity"
        ],
        "title": "Airtable MCP Server",
        "tools": [
          {
            "name": "create_comment"
          },
          {
            "name": "create_field"
          },
          {
            "name": "create_record"
          },
          {
            "name": "create_table"
          },
          {
            "name": "delete_records"
          },
          {
            "name": "describe_table"
          },
          {
            "name": "get_record"
          },
          {
            "name": "list_bases"
          },
          {
            "name": "list_comments"
          },
          {
            "name": "list_records"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "search_records"
          },
          {
            "name": "update_field"
          },
          {
            "name": "update_records"
          },
          {
            "name": "update_table"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/airtable-mcp-server.json",
        "upstream": "https://github.com/domdomegg/airtable-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/astra-db",
    "description": "An MCP server for Astra DB workloads.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/astra-db@sha256:5f80909d7182448a1f7c2a84901de61ce2832b28defb729164e591e1312a92e0",
        "environmentVariables": [
          {
            "name": "ASTRA_DB_API_ENDPOINT",
            "value": "{astra-db.endpoint}",
            "variables": {
              "astra-db.endpoint": {
                "format": "string"
              }
            }
          },
          {
            "name": "ASTRA_DB_APPLICATION_TOKEN",
            "value": "{astra-db.application_token}",
            "variables": {
              "astra-db.application_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/datastax/astra-db-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 36,
        "icon": "https://avatars.githubusercontent.com/u/573369?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "datastax",
        "prompts": 0,
        "pulls": 2527,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/astra-db.md",
        "resources": {},
        "source": "https://github.com/datastax/astra-db-mcp/tree/3f39fac29c232809da9db57920d68757b5cba8f3",
        "tags": [
          "astra-db",
          "database"
        ],
        "title": "Astra DB",
        "tools": [
          {
            "name": "BulkCreateRecords"
          },
          {
            "name": "BulkDeleteRecords"
          },
          {
            "name": "BulkUpdateRecords"
          },
          {
            "name": "CreateCollection"
          },
          {
            "name": "CreateRecord"
          },
          {
            "name": "DeleteCollection"
          },
          {
            "name": "DeleteRecord"
          },
          {
            "name": "EstimateDocumentCount"
          },
          {
            "name": "FindRecord"
          },
          {
            "name": "GetCollections"
          },
          {
            "name": "GetRecord"
          },
          {
            "name": "HelpAddToClient"
          },
          {
            "name": "ListRecords"
          },
          {
            "name": "OpenBrowser"
          },
          {
            "name": "UpdateCollection"
          },
          {
            "name": "UpdateRecord"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/astra-db.json",
        "upstream": "https://github.com/datastax/astra-db-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/circleci",
    "description": "A specialized server implementation for the Model Context Protocol (MCP) designed to integrate wi...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/circleci@sha256:1d0029137061c3769c1ca2ef112c4c5043bf42f1565ccb004ffa4bf2cb99a431",
        "environmentVariables": [
          {
            "name": "CIRCLECI_BASE_URL",
            "value": "{circleci.url}",
            "variables": {
              "circleci.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "CIRCLECI_TOKEN",
            "value": "{circleci.token}",
            "variables": {
              "circleci.token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "positional",
            "value": "stdio"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/CircleCI-Public/mcp-server-circleci",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 67,
        "icon": "https://avatars.githubusercontent.com/u/26607840?s=200\u0026v=4",
        "license": "Other",
        "owner": "CircleCI-Public",
        "prompts": 0,
        "pulls": 3472,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/circleci.md",
        "resources": {},
        "source": "https://github.com/cmrigney/mcp-server-circleci/tree/34ac141d8ceb27c829932cf5689da2c1c2c21b93",
        "tags": [
          "circleci",
          "devops"
        ],
        "title": "CircleCI",
        "tools": [
          {
            "name": "analyze_diff"
          },
          {
            "name": "config_helper"
          },
          {
            "name": "create_prompt_template"
          },
          {
            "name": "find_flaky_tests"
          },
          {
            "name": "get_build_failure_logs"
          },
          {
            "name": "get_job_test_results"
          },
          {
            "name": "get_latest_pipeline_status"
          },
          {
            "name": "list_followed_projects"
          },
          {
            "name": "recommend_prompt_template_tests"
          },
          {
            "name": "rerun_workflow"
          },
          {
            "name": "run_evaluation_tests"
          },
          {
            "name": "run_pipeline"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/circleci.json",
        "upstream": "https://github.com/CircleCI-Public/mcp-server-circleci"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/youtube_transcript",
    "description": "Retrieves transcripts for given YouTube video URLs.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/youtube-transcript@sha256:ffa8e1d41854aeec678f1f85cebc5f0e2bcbef769d0472908117a4be870f4f34"
      }
    ],
    "repository": {
      "url": "https://github.com/jkawamoto/mcp-youtube-transcript",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 103,
        "icon": "https://avatars.githubusercontent.com/u/4052902?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "jkawamoto",
        "prompts": 0,
        "pulls": 98763,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/youtube_transcript.md",
        "resources": {},
        "source": "https://github.com/jkawamoto/mcp-youtube-transcript/tree/157b9cbbe91b97044dc93809ecb27dffca1fae00",
        "stars": 16,
        "tags": [
          "youtube",
          "search"
        ],
        "title": "YouTube transcripts",
        "tools": [
          {
            "name": "get_timed_transcript"
          },
          {
            "name": "get_transcript"
          },
          {
            "name": "get_video_info"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/youtube_transcript.json",
        "upstream": "https://github.com/jkawamoto/mcp-youtube-transcript"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/kubernetes",
    "description": "Connect to a Kubernetes cluster and manage it.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/kubernetes@sha256:a05a51035eb3ad3311df3290f048aaffec09a5cc84d71342f8369752b4d0de3c",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{kubernetes.config_path}:/home/appuser/.kube/config",
            "variables": {
              "kubernetes.config_path": {
                "format": "string",
                "description": "the path to the host .kube/config"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/Flux159/mcp-server-kubernetes",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 1167,
        "icon": "https://avatars.githubusercontent.com/u/13629408?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "Flux159",
        "prompts": 0,
        "pulls": 29158,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/kubernetes.md",
        "resources": {},
        "source": "https://github.com/Flux159/mcp-server-kubernetes/tree/b1bbbc4385aef0ccd0af0204ad93c0565fe4d235",
        "stars": 14,
        "tags": [
          "kubernetes",
          "devops"
        ],
        "title": "Kubernetes",
        "tools": [
          {
            "name": "cleanup"
          },
          {
            "name": "exec_in_pod"
          },
          {
            "name": "explain_resource"
          },
          {
            "name": "install_helm_chart"
          },
          {
            "name": "kubectl_apply"
          },
          {
            "name": "kubectl_context"
          },
          {
            "name": "kubectl_create"
          },
          {
            "name": "kubectl_delete"
          },
          {
            "name": "kubectl_describe"
          },
          {
            "name": "kubectl_generic"
          },
          {
            "name": "kubectl_get"
          },
          {
            "name": "kubectl_logs"
          },
          {
            "name": "kubectl_patch"
          },
          {
            "name": "kubectl_rollout"
          },
          {
            "name": "kubectl_scale"
          },
          {
            "name": "list_api_resources"
          },
          {
            "name": "node_management"
          },
          {
            "name": "ping"
          },
          {
            "name": "port_forward"
          },
          {
            "name": "stop_port_forward"
          },
          {
            "name": "uninstall_helm_chart"
          },
          {
            "name": "upgrade_helm_chart"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/kubernetes.json",
        "upstream": "https://github.com/Flux159/mcp-server-kubernetes"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hoverfly-mcp-server",
    "description": "A Model Context Protocol (MCP) server that exposes Hoverfly as a programmable tool for AI assista...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "kapish88/hoverfly-mcp-server@sha256:80c9fb90eb15703f98729ecb969263aa20c5b5a76fc99f68b616051504149aa1",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{hoverfly-mcp-server.data}:/opt/hoverfly-mcp/simulation-data",
            "variables": {
              "hoverfly-mcp-server.data": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/kapishmalik/hoverfly-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-08-01T06:21:29Z",
        "githubStars": 6,
        "icon": "https://raw.githubusercontent.com/kapishmalik/hoverfly-mcp-server/main/HoverflyMCPServerDocker.png",
        "license": "Other",
        "owner": "kapishmalik",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hoverfly-mcp-server.md",
        "resources": {},
        "source": "https://github.com/kapishmalik/hoverfly-mcp-server/tree/34e9607ed71f1b78d1fd6788e32332912bac709a",
        "tags": [
          "ai",
          "service-virtualization",
          "http-mocking",
          "devtools"
        ],
        "title": "Hoverfly MCP Server",
        "tools": [
          {
            "name": "add_hoverfly_mock"
          },
          {
            "name": "clear_hoverfly_mocks"
          },
          {
            "name": "download_hoverfly_simulation"
          },
          {
            "name": "fetch_hoverfly_version"
          },
          {
            "name": "get_hoverfly_debug_logs"
          },
          {
            "name": "get_hoverfly_documentation"
          },
          {
            "name": "get_hoverfly_status"
          },
          {
            "name": "list_hoverfly_mocks"
          },
          {
            "name": "show_hoverfly_endpoints_info"
          },
          {
            "name": "start_hoverfly_web_server"
          },
          {
            "name": "stop_hoverfly_server"
          },
          {
            "name": "suggest_hoverfly_matchers"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hoverfly-mcp-server.json",
        "upstream": "https://github.com/kapishmalik/hoverfly-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/kagisearch",
    "description": "The Official Model Context Protocol (MCP) server for Kagi search \u0026 other tools.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/kagisearch@sha256:a04696f75f842225462060a8b5f4207e6ca086e59dc38c3fb52ae02d36d41403",
        "environmentVariables": [
          {
            "name": "KAGI_SUMMARIZER_ENGINE",
            "value": "{kagisearch.engine}",
            "variables": {
              "kagisearch.engine": {
                "format": "string"
              }
            }
          },
          {
            "name": "KAGI_API_KEY",
            "value": "{kagisearch.api_key}",
            "variables": {
              "kagisearch.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/kagisearch/kagimcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 212,
        "icon": "https://avatars.githubusercontent.com/u/92134518?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "kagisearch",
        "prompts": 0,
        "pulls": 2574,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/kagisearch.md",
        "resources": {},
        "source": "https://github.com/kagisearch/kagimcp/tree/f2c2157cd520f37c2a926c6434bc03a29a9f5ceb",
        "stars": 1,
        "tags": [
          "kagisearch",
          "devops"
        ],
        "title": "Kagi search",
        "tools": [
          {
            "name": "kagi_search_fetch"
          },
          {
            "name": "kagi_summarizer"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/kagisearch.json",
        "upstream": "https://github.com/kagisearch/kagimcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/sequa",
    "description": "Stop stitching context for Copilot and Cursor. With Sequa MCP, your AI tools know your entire cod...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/sequa@sha256:184164f3d118f2b069370a8c3b1841daf83b57ac012cb6080dd62bdb3ad26109",
        "environmentVariables": [
          {
            "name": "MCP_SERVER_URL",
            "value": "{sequa.mcp_server_url}",
            "variables": {
              "sequa.mcp_server_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "API_KEY",
            "value": "{sequa.api_key}",
            "variables": {
              "sequa.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/sequa-ai/sequa-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-08-11T20:20:11Z",
        "githubStars": 14,
        "icon": "https://avatars.githubusercontent.com/u/187640573?v=4",
        "license": "MIT License",
        "owner": "sequa-ai",
        "prompts": 0,
        "pulls": 882,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/sequa.md",
        "resources": {},
        "source": "https://github.com/sequa-ai/sequa-mcp/tree/712d19b691db6f3ef3ad9074e42eeddde2c8b2e9",
        "stars": 1,
        "tags": [
          "search",
          "ai",
          "devops"
        ],
        "title": "Sequa.AI",
        "tools": [
          {
            "name": "system_context_shzn-z0D"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/sequa.json",
        "upstream": "https://github.com/sequa-ai/sequa-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aws-core-mcp-server",
    "description": "Starting point for using the awslabs MCP servers.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aws-core-mcp-server@sha256:8acdccef88507a6a91fe9047a645af72cdc78164328408940716195224dae49c"
      }
    ],
    "repository": {
      "url": "https://github.com/awslabs/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 6893,
        "icon": "https://avatars.githubusercontent.com/u/3299148?v=4",
        "license": "Apache License 2.0",
        "owner": "awslabs",
        "prompts": 0,
        "pulls": 38809,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aws-core-mcp-server.md",
        "resources": {},
        "source": "https://github.com/awslabs/mcp/tree/96f3e569e2a054d31ccbc452bda89580265e8dae/src/core-mcp-server",
        "tags": [
          "aws-core-mcp-server",
          "devops"
        ],
        "title": "AWS Core MCP Server",
        "tools": [
          {
            "name": "prompt_understanding"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aws-core-mcp-server.json",
        "upstream": "https://github.com/awslabs/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/cloud-run-mcp",
    "description": "MCP server to deploy apps to Cloud Run.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/cloud-run-mcp@sha256:ca2cb24908967bbfb56407a5e7e97ec3ee2e222708098947224ef3df108e0d59",
        "environmentVariables": [
          {
            "name": "GOOGLE_APPLICATION_CREDENTIALS",
            "value": "/app/.config/gcloud/application_default_credentials.json"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{cloud-run-mcp.credentials_path}:/app/.config/gcloud/application_default_credentials.json",
            "variables": {
              "cloud-run-mcp.credentials_path": {
                "format": "string",
                "description": "path to application-default credentials (eg $HOME/.config/gcloud/application_default_credentials.json )"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/GoogleCloudPlatform/cloud-run-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-08-08T16:55:52Z",
        "githubStars": 444,
        "icon": "https://avatars.githubusercontent.com/u/2810941?v=4",
        "license": "Apache License 2.0",
        "owner": "GoogleCloudPlatform",
        "prompts": 0,
        "pulls": 4738,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/cloud-run-mcp.md",
        "resources": {},
        "source": "https://github.com/GoogleCloudPlatform/cloud-run-mcp/tree/1d733af66e359a27d437468d3a8ade8b6c582045",
        "tags": [
          "devops"
        ],
        "title": "Cloud Run MCP",
        "tools": [
          {
            "name": "create_project"
          },
          {
            "name": "deploy_container_image"
          },
          {
            "name": "deploy_file_contents"
          },
          {
            "name": "deploy_local_folder"
          },
          {
            "name": "get_service"
          },
          {
            "name": "get_service_log"
          },
          {
            "name": "list_projects"
          },
          {
            "name": "list_services"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/cloud-run-mcp.json",
        "upstream": "https://github.com/GoogleCloudPlatform/cloud-run-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/tigris",
    "description": "Tigris is a globally distributed S3-compatible object storage service that provides low latency a...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/tigris@sha256:f183ed3aebced05aaeca109d20135c9972eefb77e2c1e822ee3a9e5a2cffcb7a",
        "environmentVariables": [
          {
            "name": "AWS_ACCESS_KEY_ID",
            "value": "{tigris.aws_access_key_id}",
            "variables": {
              "tigris.aws_access_key_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "AWS_ENDPOINT_URL_S3",
            "value": "{tigris.aws_endpoint_url_s3}",
            "variables": {
              "tigris.aws_endpoint_url_s3": {
                "format": "string"
              }
            }
          },
          {
            "name": "AWS_SECRET_ACCESS_KEY",
            "value": "{tigris.aws_secret_access_key}",
            "variables": {
              "tigris.aws_secret_access_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/tigrisdata/tigris-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-20T20:08:35Z",
        "githubStars": 3,
        "icon": "https://avatars.githubusercontent.com/u/95787860?v=4",
        "license": "MIT License",
        "owner": "tigrisdata",
        "prompts": 0,
        "pulls": 1009,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/tigris.md",
        "resources": {},
        "source": "https://github.com/tigrisdata/tigris-mcp-server/tree/7d61d54f7a890aaafd8c9795b2e771d8cdcd87f7",
        "tags": [
          "s3-storage",
          "storage",
          "tigris",
          "tigris-data"
        ],
        "title": "Tigris Data",
        "tools": [
          {
            "name": "tigris_create_bucket"
          },
          {
            "name": "tigris_delete_bucket"
          },
          {
            "name": "tigris_delete_object"
          },
          {
            "name": "tigris_get_object"
          },
          {
            "name": "tigris_get_signed_url_object"
          },
          {
            "name": "tigris_list_buckets"
          },
          {
            "name": "tigris_list_objects"
          },
          {
            "name": "tigris_put_object"
          },
          {
            "name": "tigris_put_object_from_path"
          },
          {
            "name": "tigris_upload_file_and_get_url"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/tigris.json",
        "upstream": "https://github.com/tigrisdata/tigris-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mapbox",
    "description": "Transform any AI agent into a geospatially-aware system with Mapbox APIs. Provides geocoding, POI...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mapbox@sha256:2f641ddd7da71b4c8c4947a6ae226c665c095d7293386e16ff62d56ec67fd1ed",
        "environmentVariables": [
          {
            "name": "MAPBOX_ACCESS_TOKEN",
            "value": "{mapbox.access_token}",
            "variables": {
              "mapbox.access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/mapbox/mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "maps",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 276,
        "icon": "https://avatars.githubusercontent.com/u/600935?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "mapbox",
        "prompts": 0,
        "pulls": 1359,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mapbox.md",
        "resources": {},
        "source": "https://github.com/mapbox/mcp-server/tree/4a101fdec2d4cbcea4badc6c407d83d6fcafd4cd",
        "tags": [
          "mapbox",
          "maps",
          "geospatial",
          "navigation",
          "geocoding"
        ],
        "title": "Mapbox MCP Server",
        "tools": [
          {
            "name": "category_list_tool"
          },
          {
            "name": "category_search_tool"
          },
          {
            "name": "directions_tool"
          },
          {
            "name": "isochrone_tool"
          },
          {
            "name": "matrix_tool"
          },
          {
            "name": "reverse_geocode_tool"
          },
          {
            "name": "search_and_geocode_tool"
          },
          {
            "name": "static_map_image_tool"
          },
          {
            "name": "version_tool"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mapbox.json",
        "upstream": "https://github.com/mapbox/mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/kafka-schema-reg-mcp",
    "description": "Comprehensive MCP server for Kafka Schema Registry operations. Features multi-registry support, s...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "aywengo/kafka-schema-reg-mcp:stable@sha256:3e3111956446aed76abe01e13250f2dd7f947c10acd00ad8a45397fe6a37fc3d",
        "environmentVariables": [
          {
            "name": "SCHEMA_REGISTRY_URL",
            "value": "{kafka-schema-reg-mcp.registry_url}",
            "variables": {
              "kafka-schema-reg-mcp.registry_url": {
                "format": "string",
                "description": "Schema Registry URL"
              }
            }
          },
          {
            "name": "SLIM_MODE",
            "value": "{kafka-schema-reg-mcp.slim_mode}",
            "variables": {
              "kafka-schema-reg-mcp.slim_mode": {
                "format": "string",
                "description": "Enable SLIM_MODE for better performance"
              }
            }
          },
          {
            "name": "VIEWONLY",
            "value": "{kafka-schema-reg-mcp.viewonly}",
            "variables": {
              "kafka-schema-reg-mcp.viewonly": {
                "format": "string",
                "description": "Enable read-only mode"
              }
            }
          },
          {
            "name": "SCHEMA_REGISTRY_USER",
            "value": "{kafka-schema-reg-mcp.registry_user}",
            "variables": {
              "kafka-schema-reg-mcp.registry_user": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "SCHEMA_REGISTRY_PASSWORD",
            "value": "{kafka-schema-reg-mcp.registry_password}",
            "variables": {
              "kafka-schema-reg-mcp.registry_password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/aywengo/kafka-schema-reg-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-09-08T15:06:40Z",
        "githubStars": 24,
        "icon": "https://avatars.githubusercontent.com/u/47359?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "aywengo",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/kafka-schema-reg-mcp.md",
        "resources": {},
        "source": "https://github.com/aywengo/kafka-schema-reg-mcp/tree/e145fb8dd68d2246f50395572f6ca5c9f100e53c",
        "tags": [
          "kafka",
          "schema-registry",
          "database",
          "devops",
          "streaming"
        ],
        "title": "Kafka Schema Registry MCP",
        "tools": [
          {
            "name": "check_compatibility"
          },
          {
            "name": "count_contexts"
          },
          {
            "name": "count_schema_versions"
          },
          {
            "name": "count_schemas"
          },
          {
            "name": "create_context"
          },
          {
            "name": "export_schema"
          },
          {
            "name": "export_subject"
          },
          {
            "name": "generate_resource_templates"
          },
          {
            "name": "get_default_registry"
          },
          {
            "name": "get_global_config"
          },
          {
            "name": "get_mcp_compliance_status_tool"
          },
          {
            "name": "get_mode"
          },
          {
            "name": "get_registry_info"
          },
          {
            "name": "get_schema"
          },
          {
            "name": "get_schema_by_id"
          },
          {
            "name": "get_schema_versions"
          },
          {
            "name": "get_subject_config"
          },
          {
            "name": "get_subject_mode"
          },
          {
            "name": "get_subjects_by_schema_id"
          },
          {
            "name": "list_available_resources"
          },
          {
            "name": "list_contexts"
          },
          {
            "name": "list_registries"
          },
          {
            "name": "list_subjects"
          },
          {
            "name": "ping"
          },
          {
            "name": "register_schema"
          },
          {
            "name": "set_default_registry"
          },
          {
            "name": "suggest_resource_for_tool"
          },
          {
            "name": "test_all_registries"
          },
          {
            "name": "test_registry_connection"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/kafka-schema-reg-mcp.json",
        "upstream": "https://github.com/aywengo/kafka-schema-reg-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/stackgen",
    "description": "AI-powered DevOps assistant for managing cloud infrastructure and applications.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "ghcr.io/stackgenhq/stackgen@sha256:3f1680d892bddd4e2768f8219232dcf611fc2a8f7d1d3fe1bff1387c045fbeab",
        "environmentVariables": [
          {
            "name": "STACKGEN_URL",
            "value": "{stackgen.url}",
            "variables": {
              "stackgen.url": {
                "format": "string",
                "description": "URL of your StackGen instance"
              }
            }
          },
          {
            "name": "STACKGEN_TOKEN",
            "value": "{stackgen.api_key}",
            "variables": {
              "stackgen.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "positional",
            "value": "mcp"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/stackgenhq/homebrew-stackgen",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-13T06:25:03Z",
        "githubStars": 1,
        "icon": "https://docs.stackgen.com/img/logo.svg",
        "license": "",
        "owner": "stackgenhq",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/stackgen.md",
        "resources": {},
        "source": "https://github.com/stackgenhq/homebrew-stackgen/tree/a325c8f53471cfa44546de04487c6ec009de16b7",
        "tags": [
          "stackgen",
          "opentofu"
        ],
        "title": "StackGen",
        "tools": [
          {
            "name": "destroy_deployment"
          },
          {
            "name": "detect-drift"
          },
          {
            "name": "download-iac"
          },
          {
            "name": "provision_appstack"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/stackgen.json",
        "upstream": "https://github.com/stackgenhq/homebrew-stackgen"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/veyrax",
    "description": "VeyraX MCP is the only connection you need to access all your tools in any MCP-compatible environ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/veyrax@sha256:257d915330722bc84dbeec0a709a2e7edf9ba83b268799d075dad5cbb53d62b7",
        "environmentVariables": [
          {
            "name": "VEYRAX_API_KEY",
            "value": "{veyrax.api_key}",
            "variables": {
              "veyrax.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/VeyraX/veyrax-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 47,
        "icon": "https://avatars.githubusercontent.com/u/201344226?s=200\u0026v=4",
        "license": "",
        "owner": "VeyraX",
        "prompts": 0,
        "pulls": 2321,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/veyrax.md",
        "resources": {},
        "source": "https://github.com/VeyraX/veyrax-mcp/tree/4171ea88cc3a0e28599b68166eb54281470d622f",
        "stars": 4,
        "tags": [
          "veyrax",
          "devops"
        ],
        "title": "VeyraX",
        "tools": [
          {
            "name": "get_flow"
          },
          {
            "name": "get_tools"
          },
          {
            "name": "tool_call"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/veyrax.json",
        "upstream": "https://github.com/VeyraX/veyrax-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/next-devtools-mcp",
    "description": "next-devtools-mcp is a Model Context Protocol (MCP) server that provides Next.js development tool...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/next-devtools-mcp@sha256:3064e349c266ddae35bf49a0d1d9eb8dd2ec699fb8dddbdab61650e522c9b322"
      }
    ],
    "repository": {
      "url": "https://github.com/kgprs/next-devtools-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devtools",
        "dateAdded": "2025-10-22T16:14:05Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/14985020?s=200\u0026v=4",
        "license": "",
        "owner": "kgprs",
        "prompts": 0,
        "pulls": 284,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/next-devtools-mcp.md",
        "resources": {},
        "source": "https://github.com/kgprs/next-devtools-mcp/tree/9ed2aab35ef34d7e19707cf19fb49d6bfc1936f5",
        "tags": [
          "devtools",
          "nextjs"
        ],
        "title": "Next.js DevTools MCP",
        "tools": [
          {
            "name": "browser_eval"
          },
          {
            "name": "enable_cache_components"
          },
          {
            "name": "nextjs_docs"
          },
          {
            "name": "nextjs_runtime"
          },
          {
            "name": "upgrade_nextjs_16"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/next-devtools-mcp.json",
        "upstream": "https://github.com/kgprs/next-devtools-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hackle",
    "description": "Model Context Protocol server for Hackle.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/hackle@sha256:03e3a8a3e3b7b9cdc172a34f5aed26e19ab7f7c865d4b991c8dc7f4e309deadb",
        "environmentVariables": [
          {
            "name": "API_KEY",
            "value": "{hackle.api_key}",
            "variables": {
              "hackle.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/hackle-io/hackle-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 2,
        "icon": "https://avatars.githubusercontent.com/u/65485327?v=4",
        "license": "MIT License",
        "owner": "hackle-io",
        "prompts": 0,
        "pulls": 1931,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hackle.md",
        "resources": {},
        "source": "https://github.com/hackle-io/hackle-mcp/tree/b355ad09a50067cfa2f6a2d36fab59ae4eeefd08",
        "tags": [
          "hackle",
          "devops"
        ],
        "title": "Hackle",
        "tools": [
          {
            "name": "active-user-series"
          },
          {
            "name": "analytics-chart-detail"
          },
          {
            "name": "analytics-chart-list"
          },
          {
            "name": "data-report-detail"
          },
          {
            "name": "data-report-list"
          },
          {
            "name": "experiment-detail"
          },
          {
            "name": "experiment-list"
          },
          {
            "name": "in-app-message-detail"
          },
          {
            "name": "in-app-message-list"
          },
          {
            "name": "push-message-detail"
          },
          {
            "name": "push-message-list"
          },
          {
            "name": "remote-config-create"
          },
          {
            "name": "remote-config-detail"
          },
          {
            "name": "remote-config-list"
          },
          {
            "name": "remote-config-update"
          },
          {
            "name": "remote-config-update-description"
          },
          {
            "name": "remote-config-update-user-identifier-criteria"
          },
          {
            "name": "retention-series"
          },
          {
            "name": "stickiness-series"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hackle.json",
        "upstream": "https://github.com/hackle-io/hackle-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/chroma",
    "description": "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/chroma@sha256:c050ca8e1d4e258dd66649fc91acbc77615ce4b89bbc18281a985932bd9c9874",
        "environmentVariables": [
          {
            "name": "CHROMA_API_KEY",
            "value": "{chroma.api_key}",
            "variables": {
              "chroma.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/chroma-core/chroma-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 407,
        "icon": "https://avatars.githubusercontent.com/u/105881770?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "chroma-core",
        "prompts": 0,
        "pulls": 5545,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/chroma.md",
        "resources": {},
        "source": "https://github.com/chroma-core/chroma-mcp/tree/98ff67589bdcc31b730a5415ff9529433f949077",
        "stars": 5,
        "tags": [
          "chroma",
          "devops"
        ],
        "title": "Chroma",
        "tools": [
          {
            "name": "chroma_add_documents"
          },
          {
            "name": "chroma_create_collection"
          },
          {
            "name": "chroma_delete_collection"
          },
          {
            "name": "chroma_delete_documents"
          },
          {
            "name": "chroma_fork_collection"
          },
          {
            "name": "chroma_get_collection_count"
          },
          {
            "name": "chroma_get_collection_info"
          },
          {
            "name": "chroma_get_documents"
          },
          {
            "name": "chroma_list_collections"
          },
          {
            "name": "chroma_modify_collection"
          },
          {
            "name": "chroma_peek_collection"
          },
          {
            "name": "chroma_query_documents"
          },
          {
            "name": "chroma_update_documents"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/chroma.json",
        "upstream": "https://github.com/chroma-core/chroma-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/beagle-security",
    "description": "Connects with the Beagle Security backend using a user token to manage applications, run automate...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/beagle-security-mcp-server@sha256:4be5e4ae43698ba5317d303052723b8201002e1237b0e515d0a5461c49c797f2",
        "environmentVariables": [
          {
            "name": "BEAGLE_SECURITY_API_TOKEN",
            "value": "{beagle-security.Beagle-Security-Personal-access-token}",
            "variables": {
              "beagle-security.Beagle-Security-Personal-access-token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/beaglesecurity/beagle-security-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-07-08T13:38:25Z",
        "githubStars": 0,
        "icon": "https://cdn.beaglesecurity.com/assets/brand/png/beagle-blue-icon.png",
        "license": "MIT License",
        "owner": "beaglesecurity",
        "prompts": 0,
        "pulls": 1080,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/beagle-security.md",
        "resources": {},
        "source": "https://github.com/beaglesecurity/beagle-security-mcp-server/tree/4b0e0ee2f309d7fa0e19c9e63feee2a4ea2e9f3a",
        "stars": 1,
        "tags": [
          "devops"
        ],
        "title": "Beagle security MCP server",
        "tools": [
          {
            "name": "beagle_create_application"
          },
          {
            "name": "beagle_create_project"
          },
          {
            "name": "beagle_delete_application"
          },
          {
            "name": "beagle_delete_project"
          },
          {
            "name": "beagle_get_application"
          },
          {
            "name": "beagle_get_domain_signature"
          },
          {
            "name": "beagle_get_test_result"
          },
          {
            "name": "beagle_get_test_status"
          },
          {
            "name": "beagle_list_applications"
          },
          {
            "name": "beagle_list_projects"
          },
          {
            "name": "beagle_list_running_tests"
          },
          {
            "name": "beagle_list_test_sessions"
          },
          {
            "name": "beagle_modify_application"
          },
          {
            "name": "beagle_modify_project"
          },
          {
            "name": "beagle_start_test"
          },
          {
            "name": "beagle_stop_test"
          },
          {
            "name": "beagle_verify_domain"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/beagle-security.json",
        "upstream": "https://github.com/beaglesecurity/beagle-security-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/multiversx-mx",
    "description": "MCP Server for MultiversX.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/multiversx-mx@sha256:0c62c76ac87aec3d840e1f9ebdeb436dc7c8588064702ec9b84435fb3962285e",
        "environmentVariables": [
          {
            "name": "MVX_NETWORK",
            "value": "{multiversx-mx.network}",
            "variables": {
              "multiversx-mx.network": {
                "format": "string"
              }
            }
          },
          {
            "name": "MVX_WALLET",
            "value": "{multiversx-mx.wallet}",
            "variables": {
              "multiversx-mx.wallet": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/multiversx/mx-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/114073177?s=200\u0026v=4",
        "license": "Other",
        "owner": "multiversx",
        "prompts": 0,
        "pulls": 2258,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/multiversx-mx.md",
        "resources": {},
        "source": "https://github.com/multiversx/mx-mcp/tree/7ed06c2bbc7b71764e55759f057c2da6aab55e98",
        "tags": [
          "multiversx-mx",
          "devops"
        ],
        "title": "MultiversX",
        "tools": [
          {
            "name": "create-sft-nft-mesdt-tokens"
          },
          {
            "name": "create-wallet"
          },
          {
            "name": "get-balance-of-address"
          },
          {
            "name": "get-network"
          },
          {
            "name": "get-tokens-of-address"
          },
          {
            "name": "get-wallet-address"
          },
          {
            "name": "issue-fungible-token"
          },
          {
            "name": "issue-meta-esdt-collection"
          },
          {
            "name": "issue-nft-collection"
          },
          {
            "name": "issue-semi-fungible-collection"
          },
          {
            "name": "send-egld"
          },
          {
            "name": "send-egld-to-multiple-receivers"
          },
          {
            "name": "send-fungible-tokens"
          },
          {
            "name": "send-sft-nft-meta-tokens"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/multiversx-mx.json",
        "upstream": "https://github.com/multiversx/mx-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/devhub-cms",
    "description": "DevHub CMS LLM integration through the Model Context Protocol.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/devhub-cms@sha256:d09cf1f01b09b4ae67ceecf9f2bf61bbfc59304dee0b5aaa666922c2346cb610",
        "environmentVariables": [
          {
            "name": "DEVHUB_BASE_URL",
            "value": "{devhub-cms.url}",
            "variables": {
              "devhub-cms.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "DEVHUB_API_KEY",
            "value": "{devhub-cms.api_key}",
            "variables": {
              "devhub-cms.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "DEVHUB_API_SECRET",
            "value": "{devhub-cms.api_secret}",
            "variables": {
              "devhub-cms.api_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/devhub/devhub-cms-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 6,
        "icon": "https://avatars.githubusercontent.com/u/602719?s=200\u0026v=4",
        "license": "",
        "owner": "devhub",
        "prompts": 0,
        "pulls": 2412,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/devhub-cms.md",
        "resources": {},
        "source": "https://github.com/devhub/devhub-cms-mcp/tree/c9f904c686a1ceec5d85709d117174d33925558a",
        "tags": [
          "devhub-cms",
          "devops"
        ],
        "title": "DevHub CMS",
        "tools": [
          {
            "name": "create_blog_post"
          },
          {
            "name": "get_blog_post"
          },
          {
            "name": "get_businesses"
          },
          {
            "name": "get_hours_of_operation"
          },
          {
            "name": "get_locations"
          },
          {
            "name": "get_nearest_location"
          },
          {
            "name": "site_from_url"
          },
          {
            "name": "update_blog_post"
          },
          {
            "name": "update_hours"
          },
          {
            "name": "upload_image"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/devhub-cms.json",
        "upstream": "https://github.com/devhub/devhub-cms-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hyperspell",
    "description": "Hyperspell MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/hyperspell@sha256:659fcccbb147478329b45737757c1a889d06c051a93f008534bb1c185a6638ce",
        "environmentVariables": [
          {
            "name": "USE_RESOURCES",
            "value": "{hyperspell.use_resources}",
            "variables": {
              "hyperspell.use_resources": {
                "format": "string"
              }
            }
          },
          {
            "name": "HYPERSPELL_COLLECTION",
            "value": "{hyperspell.collection}",
            "variables": {
              "hyperspell.collection": {
                "format": "string"
              }
            }
          },
          {
            "name": "HYPERSPELL_TOKEN",
            "value": "{hyperspell.token}",
            "variables": {
              "hyperspell.token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/hyperspell/hyperspell-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 1,
        "icon": "https://avatars.githubusercontent.com/u/170754924?s=200\u0026v=4",
        "license": "",
        "owner": "hyperspell",
        "prompts": 0,
        "pulls": 2269,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hyperspell.md",
        "resources": {},
        "source": "https://github.com/hyperspell/hyperspell-mcp/tree/6fbf999ec35b02ce4685de9b6309600bcd61c2db",
        "tags": [
          "hyperspell",
          "devops"
        ],
        "title": "Hyperspell",
        "tools": [
          {
            "name": "Add File"
          },
          {
            "name": "Add Memory"
          },
          {
            "name": "Search Hyperspell"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hyperspell.json",
        "upstream": "https://github.com/hyperspell/hyperspell-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/sqlite-mcp-server",
    "description": "The SQLite MCP Server transforms SQLite into a powerful, AI-ready database engine. It combines st...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/sqlite-mcp-server@sha256:825a633d6ea387b66a7c2cb90333bf722812a7f84bc8508cc4b9793183fd36af"
      }
    ],
    "repository": {
      "url": "https://github.com/neverinfamous/sqlite-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-10-29T21:48:22Z",
        "githubStars": 1,
        "icon": "https://adamic.tech/assets/images/logo.web",
        "license": "MIT License",
        "owner": "neverinfamous",
        "prompts": 0,
        "pulls": 52,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/sqlite-mcp-server.md",
        "resources": {},
        "source": "https://github.com/neverinfamous/sqlite-mcp-server/tree/bd3d25248d36685fc049e090d28458cabf6ad617",
        "tags": [
          "database"
        ],
        "title": "SQLite MCP Server",
        "tools": [
          {
            "name": "read_query"
          },
          {
            "name": "write_query"
          },
          {
            "name": "create_table"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "describe_table"
          },
          {
            "name": "append_insight"
          },
          {
            "name": "create_fts_table"
          },
          {
            "name": "fts_search"
          },
          {
            "name": "create_embeddings_table"
          },
          {
            "name": "semantic_search"
          },
          {
            "name": "hybrid_search"
          },
          {
            "name": "descriptive_statistics"
          },
          {
            "name": "correlation_analysis"
          },
          {
            "name": "regression_analysis"
          },
          {
            "name": "outlier_detection"
          },
          {
            "name": "create_csv_table"
          },
          {
            "name": "create_json_collection_table"
          },
          {
            "name": "analyze_csv_schema"
          },
          {
            "name": "fuzzy_match"
          },
          {
            "name": "text_similarity"
          },
          {
            "name": "backup_database"
          },
          {
            "name": "restore_database"
          },
          {
            "name": "vacuum_database"
          },
          {
            "name": "integrity_check"
          },
          {
            "name": "database_stats"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/sqlite-mcp-server.json",
        "upstream": "https://github.com/neverinfamous/sqlite-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/arxiv-mcp-server",
    "description": "The ArXiv MCP Server provides a comprehensive bridge between AI assistants and arXiv's research r...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/arxiv-mcp-server@sha256:6dc6bba6dfed97f4ad6eb8d23a5c98ef5b7fa6184937d54b2d675801cd9dd29e",
        "environmentVariables": [
          {
            "name": "ARXIV_STORAGE_PATH",
            "value": "/app/papers"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{arxiv-mcp-server.storage_path}:/app/papers",
            "variables": {
              "arxiv-mcp-server.storage_path": {
                "format": "string",
                "description": "Directory path where downloaded papers will be stored"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/jasonleinart/arxiv-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-07-16T06:22:24Z",
        "githubStars": 20,
        "icon": "https://avatars.githubusercontent.com/u/15390319?v=4",
        "license": "Apache License 2.0",
        "owner": "jasonleinart",
        "prompts": 0,
        "pulls": 8325,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/arxiv-mcp-server.md",
        "resources": {},
        "source": "https://github.com/jasonleinart/arxiv-mcp-server/tree/fe977e538dc24bb2da937c6c9e48febb54083226",
        "stars": 2,
        "tags": [
          "arxiv",
          "research",
          "academic",
          "papers",
          "search",
          "ai",
          "local-models",
          "docker-gateway",
          "enhanced-descriptions"
        ],
        "title": "ArXiv MCP Server",
        "tools": [
          {
            "name": "download_paper"
          },
          {
            "name": "list_papers"
          },
          {
            "name": "read_paper"
          },
          {
            "name": "search_papers"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/arxiv-mcp-server.json",
        "upstream": "https://github.com/jasonleinart/arxiv-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/linkedin-mcp-server",
    "description": "This MCP server allows Claude and other AI assistants to access your LinkedIn. Scrape LinkedIn pr...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "stickerdaniel/linkedin-mcp-server:1.4.0@sha256:c437eb638f80089cd05d7fa111fae17c1dedf1b74ac4ebf0b01e0c6afe143bd9",
        "environmentVariables": [
          {
            "name": "USER_AGENT",
            "value": "{linkedin-mcp-server.user_agent}",
            "variables": {
              "linkedin-mcp-server.user_agent": {
                "format": "string",
                "description": "Custom user agent string (optional, helps avoid detection and cookie login issues)"
              }
            }
          },
          {
            "name": "LINKEDIN_COOKIE",
            "value": "{linkedin-mcp-server.cookie}",
            "variables": {
              "linkedin-mcp-server.cookie": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/stickerdaniel/linkedin-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "business",
        "dateAdded": "2025-07-11T18:29:38Z",
        "githubStars": 523,
        "icon": "https://raw.githubusercontent.com/stickerdaniel/linkedin-mcp-server/main/assets/icons/linkedin.svg",
        "license": "Apache License 2.0",
        "owner": "stickerdaniel",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/linkedin-mcp-server.md",
        "resources": {},
        "source": "https://github.com/stickerdaniel/linkedin-mcp-server/tree/c54e3fa518d2b5cd827262159771b9d85a6eae13",
        "tags": [
          "linkedin",
          "business",
          "scraping",
          "profiles",
          "jobs",
          "networking"
        ],
        "title": "LinkedIn MCP Server",
        "tools": [
          {
            "name": "close_session"
          },
          {
            "name": "get_company_profile"
          },
          {
            "name": "get_job_details"
          },
          {
            "name": "get_person_profile"
          },
          {
            "name": "get_recommended_jobs"
          },
          {
            "name": "search_jobs"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/linkedin-mcp-server.json",
        "upstream": "https://github.com/stickerdaniel/linkedin-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/npm-sentinel",
    "description": "MCP server that enables intelligent NPM package analysis powered by AI.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/npm-sentinel@sha256:d8e4bbc7dd5c163fb8abab3f36062a36a02bfd200cae199a9e2392bf4c9198ab"
      }
    ],
    "repository": {
      "url": "https://github.com/Nekzus/npm-sentinel-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-07-01T14:14:18Z",
        "githubStars": 9,
        "icon": "https://avatars.githubusercontent.com/u/85507589?v=4",
        "license": "MIT License",
        "owner": "Nekzus",
        "prompts": 0,
        "pulls": 2387,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/npm-sentinel.md",
        "resources": {},
        "source": "https://github.com/Nekzus/npm-sentinel-mcp/tree/a1bd358e4348d7dd4a8fe9a4ab091fc34e0397a8",
        "stars": 1,
        "tags": [
          "npm",
          "npm-package"
        ],
        "title": "NPM Sentinel",
        "tools": [
          {
            "name": "npmAlternatives"
          },
          {
            "name": "npmChangelogAnalysis"
          },
          {
            "name": "npmCompare"
          },
          {
            "name": "npmDeprecated"
          },
          {
            "name": "npmDeps"
          },
          {
            "name": "npmLatest"
          },
          {
            "name": "npmLicenseCompatibility"
          },
          {
            "name": "npmMaintainers"
          },
          {
            "name": "npmMaintenance"
          },
          {
            "name": "npmPackageReadme"
          },
          {
            "name": "npmQuality"
          },
          {
            "name": "npmRepoStats"
          },
          {
            "name": "npmScore"
          },
          {
            "name": "npmSearch"
          },
          {
            "name": "npmSize"
          },
          {
            "name": "npmTrends"
          },
          {
            "name": "npmTypes"
          },
          {
            "name": "npmVersions"
          },
          {
            "name": "npmVulnerabilities"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/npm-sentinel.json",
        "upstream": "https://github.com/Nekzus/npm-sentinel-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aks",
    "description": "Azure Kubernetes Service (AKS) official MCP server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aks@sha256:486fa1e9ba0afc7d678e2c680a4e476341d69ca834e38ad8abda8f292386bd1b",
        "packageArguments": [
          {
            "type": "named",
            "name": "--transport",
            "value": "stdio"
          },
          {
            "type": "named",
            "name": "--access-level",
            "value": "{aks.access_level}",
            "variables": {
              "aks.access_level": {
                "format": "string",
                "description": "Access level for the MCP server, One of [ readonly, readwrite, admin ]"
              }
            }
          },
          {
            "type": "named",
            "name": "--allow-namespaces",
            "value": "{aks.allow_namespaces}",
            "variables": {
              "aks.allow_namespaces": {
                "format": "string",
                "description": "Comma-separated list of namespaces to allow access to. If not specified, all namespaces are allowed."
              }
            }
          },
          {
            "type": "named",
            "name": "--additional-tools",
            "value": "{aks.additional_tools}",
            "variables": {
              "aks.additional_tools": {
                "format": "string",
                "description": "Comma-separated list of additional tools, One of [ helm, cilium ]"
              }
            }
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{aks.azure_dir}:/home/mcp/.azure",
            "variables": {
              "aks.azure_dir": {
                "format": "string",
                "description": "Path to the Azure configuration directory (e.g. /home/azureuser/.azure). Used for Azure CLI authentication, you should be logged in (e.g. run `az login`) on the host before starting the MCP server."
              }
            }
          },
          {
            "type": "named",
            "name": "-v",
            "value": "{aks.kubeconfig}:/home/mcp/.kube/config",
            "variables": {
              "aks.kubeconfig": {
                "format": "string",
                "description": "Path to the kubeconfig file for the AKS cluster (e.g. /home/azureuser/.kube/config). Used to connect to the AKS cluster."
              }
            }
          },
          {
            "type": "named",
            "name": "-u",
            "value": "{aks.container_user}",
            "variables": {
              "aks.container_user": {
                "format": "string",
                "description": "Username or UID of the container user (format \u003cname|uid\u003e[:\u003cgroup|gid\u003e] e.g. 10000), ensuring correct permissions to access the Azure and kubeconfig files. Leave empty to use default user in the container."
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/Azure/aks-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-08-20T06:26:55Z",
        "githubStars": 98,
        "icon": "https://raw.githubusercontent.com/Azure/AKS/1c3979cf6729c78cfff2c0c78cb0aa657e1bbf7a/blog/assets/images/400x400.png",
        "license": "MIT License",
        "owner": "Azure",
        "prompts": 0,
        "pulls": 2217,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aks.md",
        "resources": {},
        "source": "https://github.com/Azure/aks-mcp/tree/6c6d6600de5bfbbbe477407c311324cb7e0d78e7",
        "stars": 1,
        "tags": [
          "devops",
          "azure",
          "kubernetes",
          "aks"
        ],
        "title": "Azure Kubernetes Service (AKS)",
        "tools": [
          {
            "name": "az_advisor_recommendation"
          },
          {
            "name": "az_aks_operations"
          },
          {
            "name": "az_compute_operations"
          },
          {
            "name": "az_fleet"
          },
          {
            "name": "az_monitoring"
          },
          {
            "name": "az_network_resources"
          },
          {
            "name": "get_aks_vmss_info"
          },
          {
            "name": "inspektor_gadget_observability"
          },
          {
            "name": "kubectl_cluster"
          },
          {
            "name": "kubectl_config"
          },
          {
            "name": "kubectl_diagnostics"
          },
          {
            "name": "kubectl_resources"
          },
          {
            "name": "list_detectors"
          },
          {
            "name": "run_detector"
          },
          {
            "name": "run_detectors_by_category"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aks.json",
        "upstream": "https://github.com/Azure/aks-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/heroku",
    "description": "Heroku Platform MCP Server using the Heroku CLI.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/heroku@sha256:bc972fc22f0091b9719b672613f6544f0b3752c86c27f63872a44f933f5fa8e0",
        "environmentVariables": [
          {
            "name": "HEROKU_API_KEY",
            "value": "{heroku.api_key}",
            "variables": {
              "heroku.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/heroku/heroku-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71,
        "icon": "https://avatars.githubusercontent.com/u/23211?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "heroku",
        "prompts": 0,
        "pulls": 3310,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/heroku.md",
        "resources": {},
        "source": "https://github.com/heroku/heroku-mcp-server/tree/f4949381035a04cb862b323ed024762bd2bb12aa",
        "stars": 2,
        "tags": [
          "heroku",
          "devops"
        ],
        "title": "Heroku",
        "tools": [
          {
            "name": "create_addon"
          },
          {
            "name": "create_app"
          },
          {
            "name": "deploy_one_off_dyno"
          },
          {
            "name": "deploy_to_heroku"
          },
          {
            "name": "get_addon_info"
          },
          {
            "name": "get_app_info"
          },
          {
            "name": "get_app_logs"
          },
          {
            "name": "list_addon_plans"
          },
          {
            "name": "list_addon_services"
          },
          {
            "name": "list_addons"
          },
          {
            "name": "list_apps"
          },
          {
            "name": "list_private_spaces"
          },
          {
            "name": "list_teams"
          },
          {
            "name": "maintenance_off"
          },
          {
            "name": "maintenance_on"
          },
          {
            "name": "pg_backups"
          },
          {
            "name": "pg_credentials"
          },
          {
            "name": "pg_info"
          },
          {
            "name": "pg_kill"
          },
          {
            "name": "pg_locks"
          },
          {
            "name": "pg_maintenance"
          },
          {
            "name": "pg_outliers"
          },
          {
            "name": "pg_ps"
          },
          {
            "name": "pg_psql"
          },
          {
            "name": "pg_upgrade"
          },
          {
            "name": "pipelines_create"
          },
          {
            "name": "pipelines_info"
          },
          {
            "name": "pipelines_list"
          },
          {
            "name": "pipelines_promote"
          },
          {
            "name": "ps_list"
          },
          {
            "name": "ps_restart"
          },
          {
            "name": "ps_scale"
          },
          {
            "name": "rename_app"
          },
          {
            "name": "transfer_app"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/heroku.json",
        "upstream": "https://github.com/heroku/heroku-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/pia",
    "description": "An MCP server to help make U.S. Government open datasets AI-friendly.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/pia@sha256:cbc0ff189b4ee8bc048067dbfab3261e59ecf7904a01b995439b163e98f97c12",
        "environmentVariables": [
          {
            "name": "PIA_API_KEY",
            "value": "{pia.api-key}",
            "variables": {
              "pia.api-key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Program-Integrity-Alliance/pia-mcp-local",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-08-20T06:26:55Z",
        "githubStars": 3,
        "icon": "http://programintegrity.org/wp-content/uploads/2025/08/docker-mcp-pia-icon-512.png",
        "license": "MIT License",
        "owner": "Program-Integrity-Alliance",
        "prompts": 0,
        "pulls": 871,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/pia.md",
        "resources": {},
        "source": "https://github.com/Program-Integrity-Alliance/pia-mcp-local/tree/9e11c24a74f5dd3d85c7a279faa95ef50d86fab5",
        "stars": 1,
        "tags": [
          "ai"
        ],
        "title": "Program Integrity Alliance",
        "tools": [
          {
            "name": "fetch"
          },
          {
            "name": "pia_search_content"
          },
          {
            "name": "pia_search_content_congress"
          },
          {
            "name": "pia_search_content_crs"
          },
          {
            "name": "pia_search_content_doj"
          },
          {
            "name": "pia_search_content_facets"
          },
          {
            "name": "pia_search_content_gao"
          },
          {
            "name": "pia_search_content_oig"
          },
          {
            "name": "pia_search_titles"
          },
          {
            "name": "pia_search_titles_facets"
          },
          {
            "name": "search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/pia.json",
        "upstream": "https://github.com/Program-Integrity-Alliance/pia-mcp-local"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/dockerhub",
    "description": "Docker Hub official MCP server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/dockerhub@sha256:6b4059389ccbe29e4420ba14f1ed6433ade5d0a3ad8b05c8d34e077140c9f7ea",
        "environmentVariables": [
          {
            "name": "HUB_PAT_TOKEN",
            "value": "{dockerhub.pat_token}",
            "variables": {
              "dockerhub.pat_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "named",
            "name": "--transport",
            "value": "stdio"
          },
          {
            "type": "named",
            "name": "--username",
            "value": "{dockerhub.username}",
            "variables": {
              "dockerhub.username": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/docker/hub-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-06-16T15:56:21Z",
        "githubStars": 79,
        "icon": "https://avatars.githubusercontent.com/u/5429470?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "docker",
        "prompts": 0,
        "pulls": 31186,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/dockerhub.md",
        "resources": {},
        "source": "https://github.com/docker/hub-mcp/tree/04cfa435b2f0cde66b8c5d4b0d378661400a1ba4",
        "stars": 6,
        "tags": [
          "docker",
          "dockerhub"
        ],
        "title": "Docker Hub",
        "tools": [
          {
            "name": "checkRepository"
          },
          {
            "name": "checkRepositoryTag"
          },
          {
            "name": "createRepository"
          },
          {
            "name": "dockerHardenedImages"
          },
          {
            "name": "getPersonalNamespace"
          },
          {
            "name": "getRepositoryInfo"
          },
          {
            "name": "getRepositoryTag"
          },
          {
            "name": "listAllNamespacesMemberOf"
          },
          {
            "name": "listNamespaces"
          },
          {
            "name": "listRepositoriesByNamespace"
          },
          {
            "name": "listRepositoryTags"
          },
          {
            "name": "search"
          },
          {
            "name": "updateRepositoryInfo"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/dockerhub.json",
        "upstream": "https://github.com/docker/hub-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/grafana",
    "description": "MCP server for Grafana.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/grafana@sha256:8f004941a1090d19d2eebd161db477b5008a6c546a20b3f69c20e12264862084",
        "environmentVariables": [
          {
            "name": "GRAFANA_URL",
            "value": "{grafana.url}",
            "variables": {
              "grafana.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "GRAFANA_API_KEY",
            "value": "{grafana.api_key}",
            "variables": {
              "grafana.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "named",
            "name": "--transport",
            "value": "stdio"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/grafana/mcp-grafana",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 1775,
        "icon": "https://avatars.githubusercontent.com/u/7195757?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "grafana",
        "prompts": 0,
        "pulls": 121446,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/grafana.md",
        "resources": {},
        "source": "https://github.com/grafana/mcp-grafana/tree/d8ca62185565f69a4585d5e918f617db033eaa72",
        "stars": 18,
        "tags": [
          "grafana",
          "monitoring"
        ],
        "title": "Grafana",
        "tools": [
          {
            "name": "add_activity_to_incident"
          },
          {
            "name": "create_alert_rule"
          },
          {
            "name": "create_folder"
          },
          {
            "name": "create_incident"
          },
          {
            "name": "delete_alert_rule"
          },
          {
            "name": "fetch_pyroscope_profile"
          },
          {
            "name": "find_error_pattern_logs"
          },
          {
            "name": "find_slow_requests"
          },
          {
            "name": "generate_deeplink"
          },
          {
            "name": "get_alert_group"
          },
          {
            "name": "get_alert_rule_by_uid"
          },
          {
            "name": "get_assertions"
          },
          {
            "name": "get_current_oncall_users"
          },
          {
            "name": "get_dashboard_by_uid"
          },
          {
            "name": "get_dashboard_panel_queries"
          },
          {
            "name": "get_dashboard_property"
          },
          {
            "name": "get_dashboard_summary"
          },
          {
            "name": "get_datasource_by_name"
          },
          {
            "name": "get_datasource_by_uid"
          },
          {
            "name": "get_incident"
          },
          {
            "name": "get_oncall_shift"
          },
          {
            "name": "get_sift_analysis"
          },
          {
            "name": "get_sift_investigation"
          },
          {
            "name": "list_alert_groups"
          },
          {
            "name": "list_alert_rules"
          },
          {
            "name": "list_contact_points"
          },
          {
            "name": "list_datasources"
          },
          {
            "name": "list_incidents"
          },
          {
            "name": "list_loki_label_names"
          },
          {
            "name": "list_loki_label_values"
          },
          {
            "name": "list_oncall_schedules"
          },
          {
            "name": "list_oncall_teams"
          },
          {
            "name": "list_oncall_users"
          },
          {
            "name": "list_prometheus_label_names"
          },
          {
            "name": "list_prometheus_label_values"
          },
          {
            "name": "list_prometheus_metric_metadata"
          },
          {
            "name": "list_prometheus_metric_names"
          },
          {
            "name": "list_pyroscope_label_names"
          },
          {
            "name": "list_pyroscope_label_values"
          },
          {
            "name": "list_pyroscope_profile_types"
          },
          {
            "name": "list_sift_investigations"
          },
          {
            "name": "list_teams"
          },
          {
            "name": "list_users_by_org"
          },
          {
            "name": "query_loki_logs"
          },
          {
            "name": "query_loki_stats"
          },
          {
            "name": "query_prometheus"
          },
          {
            "name": "search_dashboards"
          },
          {
            "name": "search_folders"
          },
          {
            "name": "update_alert_rule"
          },
          {
            "name": "update_dashboard"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/grafana.json",
        "upstream": "https://github.com/grafana/mcp-grafana"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/camunda",
    "description": "Tools to interact with the Camunda 7 Community Edition Engine using the Model Context Protocol (M...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/camunda@sha256:fbea3848bcb6ab4ee7ef287f31d7b14c28f081ae61c456dd3b495e15bf02b834",
        "environmentVariables": [
          {
            "name": "CAMUNDA_HOST",
            "value": "{camunda.camundahost}",
            "variables": {
              "camunda.camundahost": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/lepoco/mcp-camunda",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 6,
        "icon": "https://raw.githubusercontent.com/lepoco/mcp-camunda/refs/heads/main/build/icon.png",
        "license": "MIT License",
        "owner": "lepoco",
        "prompts": 0,
        "pulls": 610,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/camunda.md",
        "resources": {},
        "source": "https://github.com/lepoco/mcp-camunda/tree/4b50f37af26a66cced81895ba9b6d71b382ff022",
        "stars": 1,
        "tags": [
          "productivity"
        ],
        "title": "Camunda BPM process engine MCP Server",
        "tools": [
          {
            "name": "complete_user_task"
          },
          {
            "name": "count_incidents"
          },
          {
            "name": "count_instances"
          },
          {
            "name": "count_user_tasks"
          },
          {
            "name": "count_variables"
          },
          {
            "name": "list_definitions"
          },
          {
            "name": "list_incidents"
          },
          {
            "name": "list_instances"
          },
          {
            "name": "list_user_tasks"
          },
          {
            "name": "list_variables"
          },
          {
            "name": "resolve_incident"
          },
          {
            "name": "send_message"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/camunda.json",
        "upstream": "https://github.com/lepoco/mcp-camunda"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mcp-reddit",
    "description": "A comprehensive Model Context Protocol (MCP) server for Reddit integration. This server enables A...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/reddit-mcp@sha256:2e4c7f263791023bb0de2fb5ecbf11d69f0a011f25fedc5f59151e661d5dee4b",
        "environmentVariables": [
          {
            "name": "USERNAME",
            "value": "{mcp-reddit.username}",
            "variables": {
              "mcp-reddit.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "REDDIT_CLIENT_ID",
            "value": "{mcp-reddit.reddit_client_id}",
            "variables": {
              "mcp-reddit.reddit_client_id": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "REDDIT_CLIENT_SECRET",
            "value": "{mcp-reddit.reddit_client_secret}",
            "variables": {
              "mcp-reddit.reddit_client_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "REDDIT_PASSWORD",
            "value": "{mcp-reddit.reddit_password}",
            "variables": {
              "mcp-reddit.reddit_password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/KrishnaRandad2023/mcp-reddit",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "communication",
        "dateAdded": "2025-09-19T18:59:08Z",
        "githubStars": 7,
        "icon": "https://avatars.githubusercontent.com/u/135265106?v=4",
        "license": "MIT License",
        "owner": "KrishnaRandad2023",
        "prompts": 0,
        "pulls": 2291,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mcp-reddit.md",
        "resources": {},
        "source": "https://github.com/KrishnaRandad2023/mcp-reddit/tree/2c9b356a32d14f2c1708415966ce289133477f74",
        "tags": [
          "communication"
        ],
        "title": "Mcp reddit",
        "tools": [
          {
            "name": "fetchPosts"
          },
          {
            "name": "getComments"
          },
          {
            "name": "getSubredditInfo"
          },
          {
            "name": "postComment"
          },
          {
            "name": "postToSubreddit"
          },
          {
            "name": "searchPosts"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mcp-reddit.json",
        "upstream": "https://github.com/KrishnaRandad2023/mcp-reddit"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/obsidian",
    "description": "MCP server that interacts with Obsidian via the Obsidian rest API community plugin.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/obsidian@sha256:0eba4c05742ad35faeb91eca40b792454d440d86449c9f1b3cb6c387a510651b",
        "environmentVariables": [
          {
            "name": "OBSIDIAN_HOST",
            "value": "host.docker.internal"
          },
          {
            "name": "OBSIDIAN_API_KEY",
            "value": "{obsidian.api_key}",
            "variables": {
              "obsidian.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/MarkusPfundstein/mcp-obsidian",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 2330,
        "icon": "https://avatars.githubusercontent.com/u/65011256?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "MarkusPfundstein",
        "prompts": 0,
        "pulls": 28323,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/obsidian.md",
        "resources": {},
        "source": "https://github.com/docker/mcp-obsidian/tree/b20ad46eea43988a4c1a6f8ec7947ef4c6cbf9a9",
        "stars": 16,
        "tags": [
          "obsidian",
          "productivity"
        ],
        "title": "Obsidian",
        "tools": [
          {
            "name": "obsidian_append_content"
          },
          {
            "name": "obsidian_batch_get_file_contents"
          },
          {
            "name": "obsidian_complex_search"
          },
          {
            "name": "obsidian_delete_file"
          },
          {
            "name": "obsidian_get_file_contents"
          },
          {
            "name": "obsidian_get_periodic_note"
          },
          {
            "name": "obsidian_get_recent_changes"
          },
          {
            "name": "obsidian_get_recent_periodic_notes"
          },
          {
            "name": "obsidian_list_files_in_dir"
          },
          {
            "name": "obsidian_list_files_in_vault"
          },
          {
            "name": "obsidian_patch_content"
          },
          {
            "name": "obsidian_simple_search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/obsidian.json",
        "upstream": "https://github.com/MarkusPfundstein/mcp-obsidian"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/desktop-commander",
    "description": "Search, update, manage files and run terminal commands with AI.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/desktop-commander@sha256:82e3e7dad6dba83433d925c0570e6107220f930e3fd0a59be06b45e6d40a770c",
        "packageArguments": [
          {
            "type": "positional",
            "value": "npm"
          },
          {
            "type": "positional",
            "value": "run"
          },
          {
            "type": "positional",
            "value": "start"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{desktop-commander.paths|volume|into}",
            "variables": {
              "desktop-commander.paths": {
                "format": "string",
                "description": "List of directories that Desktop Commander can access"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 4810,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "wonderwhy-er",
        "prompts": 0,
        "pulls": 86919,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/desktop-commander.md",
        "resources": {},
        "source": "https://github.com/wonderwhy-er/DesktopCommanderMCP/tree/e3afba4d58f342375d2d983dc353b03fa0e859dc",
        "stars": 20,
        "tags": [
          "desktop-commander",
          "devops",
          "filesystem",
          "terminal",
          "automation",
          "file-management",
          "productivity",
          "local-system",
          "tools",
          "ai"
        ],
        "title": "Desktop Commander",
        "tools": [
          {
            "name": "create_directory"
          },
          {
            "name": "edit_block"
          },
          {
            "name": "force_terminate"
          },
          {
            "name": "get_config"
          },
          {
            "name": "get_file_info"
          },
          {
            "name": "get_more_search_results"
          },
          {
            "name": "get_prompts"
          },
          {
            "name": "get_recent_tool_calls"
          },
          {
            "name": "get_usage_stats"
          },
          {
            "name": "give_feedback_to_desktop_commander"
          },
          {
            "name": "interact_with_process"
          },
          {
            "name": "kill_process"
          },
          {
            "name": "list_directory"
          },
          {
            "name": "list_processes"
          },
          {
            "name": "list_searches"
          },
          {
            "name": "list_sessions"
          },
          {
            "name": "move_file"
          },
          {
            "name": "read_file"
          },
          {
            "name": "read_multiple_files"
          },
          {
            "name": "read_process_output"
          },
          {
            "name": "set_config_value"
          },
          {
            "name": "start_process"
          },
          {
            "name": "start_search"
          },
          {
            "name": "stop_search"
          },
          {
            "name": "write_file"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/desktop-commander.json",
        "upstream": "https://github.com/wonderwhy-er/DesktopCommanderMCP"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/edubase",
    "description": "The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-l...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/edubase@sha256:79a80fedd4237bb985dab791eb43399a41bb5245f0c559402c915fce0610b165",
        "environmentVariables": [
          {
            "name": "EDUBASE_API_APP",
            "value": "{edubase.app}",
            "variables": {
              "edubase.app": {
                "format": "string"
              }
            }
          },
          {
            "name": "EDUBASE_API_URL",
            "value": "{edubase.url}",
            "variables": {
              "edubase.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "EDUBASE_API_KEY",
            "value": "{edubase.api_key}",
            "variables": {
              "edubase.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/EduBase/MCP",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 22,
        "icon": "https://avatars.githubusercontent.com/u/33938028?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "EduBase",
        "prompts": 0,
        "pulls": 2704,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/edubase.md",
        "resources": {},
        "source": "https://github.com/EduBase/MCP/tree/8e6f6e9eaab135194c436710dd33572ce0bc0cab",
        "stars": 1,
        "tags": [
          "edubase",
          "devops"
        ],
        "title": "EduBase",
        "tools": [
          {
            "name": "edubase_delete_class_members"
          },
          {
            "name": "edubase_delete_class_permission"
          },
          {
            "name": "edubase_delete_class_tag"
          },
          {
            "name": "edubase_delete_course_permission"
          },
          {
            "name": "edubase_delete_course_tag"
          },
          {
            "name": "edubase_delete_course_transfer"
          },
          {
            "name": "edubase_delete_event_permission"
          },
          {
            "name": "edubase_delete_event_tag"
          },
          {
            "name": "edubase_delete_exam"
          },
          {
            "name": "edubase_delete_exam_permission"
          },
          {
            "name": "edubase_delete_exam_tag"
          },
          {
            "name": "edubase_delete_exam_users"
          },
          {
            "name": "edubase_delete_integration"
          },
          {
            "name": "edubase_delete_integration_permission"
          },
          {
            "name": "edubase_delete_integration_tag"
          },
          {
            "name": "edubase_delete_organization"
          },
          {
            "name": "edubase_delete_organization_members"
          },
          {
            "name": "edubase_delete_organization_permission"
          },
          {
            "name": "edubase_delete_organization_tag"
          },
          {
            "name": "edubase_delete_organization_webhook"
          },
          {
            "name": "edubase_delete_question"
          },
          {
            "name": "edubase_delete_quiz"
          },
          {
            "name": "edubase_delete_quiz_permission"
          },
          {
            "name": "edubase_delete_quiz_questions"
          },
          {
            "name": "edubase_delete_quiz_tag"
          },
          {
            "name": "edubase_delete_scorm_permission"
          },
          {
            "name": "edubase_delete_scorm_tag"
          },
          {
            "name": "edubase_delete_tag_permission"
          },
          {
            "name": "edubase_delete_user"
          },
          {
            "name": "edubase_delete_user_assume"
          },
          {
            "name": "edubase_delete_user_classes"
          },
          {
            "name": "edubase_delete_user_login"
          },
          {
            "name": "edubase_delete_user_organizations"
          },
          {
            "name": "edubase_delete_video_permission"
          },
          {
            "name": "edubase_delete_video_tag"
          },
          {
            "name": "edubase_get_class"
          },
          {
            "name": "edubase_get_class_assignments"
          },
          {
            "name": "edubase_get_class_members"
          },
          {
            "name": "edubase_get_class_permission"
          },
          {
            "name": "edubase_get_class_tag"
          },
          {
            "name": "edubase_get_class_tags"
          },
          {
            "name": "edubase_get_classes"
          },
          {
            "name": "edubase_get_course_permission"
          },
          {
            "name": "edubase_get_course_tag"
          },
          {
            "name": "edubase_get_course_tags"
          },
          {
            "name": "edubase_get_event_permission"
          },
          {
            "name": "edubase_get_event_tag"
          },
          {
            "name": "edubase_get_event_tags"
          },
          {
            "name": "edubase_get_exam"
          },
          {
            "name": "edubase_get_exam_certificates_user"
          },
          {
            "name": "edubase_get_exam_permission"
          },
          {
            "name": "edubase_get_exam_results_raw"
          },
          {
            "name": "edubase_get_exam_results_user"
          },
          {
            "name": "edubase_get_exam_tag"
          },
          {
            "name": "edubase_get_exam_tags"
          },
          {
            "name": "edubase_get_exam_users"
          },
          {
            "name": "edubase_get_exams"
          },
          {
            "name": "edubase_get_integration"
          },
          {
            "name": "edubase_get_integration_keys"
          },
          {
            "name": "edubase_get_integration_permission"
          },
          {
            "name": "edubase_get_integration_tag"
          },
          {
            "name": "edubase_get_integration_tags"
          },
          {
            "name": "edubase_get_integrations"
          },
          {
            "name": "edubase_get_organization"
          },
          {
            "name": "edubase_get_organization_members"
          },
          {
            "name": "edubase_get_organization_permission"
          },
          {
            "name": "edubase_get_organization_tag"
          },
          {
            "name": "edubase_get_organization_tags"
          },
          {
            "name": "edubase_get_organization_webhook"
          },
          {
            "name": "edubase_get_organizations"
          },
          {
            "name": "edubase_get_question"
          },
          {
            "name": "edubase_get_question_id"
          },
          {
            "name": "edubase_get_questions"
          },
          {
            "name": "edubase_get_quiz"
          },
          {
            "name": "edubase_get_quiz_permission"
          },
          {
            "name": "edubase_get_quiz_play_results"
          },
          {
            "name": "edubase_get_quiz_questions"
          },
          {
            "name": "edubase_get_quiz_results_user"
          },
          {
            "name": "edubase_get_quiz_tag"
          },
          {
            "name": "edubase_get_quiz_tags"
          },
          {
            "name": "edubase_get_quizes"
          },
          {
            "name": "edubase_get_scorm_permission"
          },
          {
            "name": "edubase_get_scorm_tag"
          },
          {
            "name": "edubase_get_scorm_tags"
          },
          {
            "name": "edubase_get_tag"
          },
          {
            "name": "edubase_get_tag_permission"
          },
          {
            "name": "edubase_get_tags"
          },
          {
            "name": "edubase_get_user"
          },
          {
            "name": "edubase_get_user_classes"
          },
          {
            "name": "edubase_get_user_group"
          },
          {
            "name": "edubase_get_user_login"
          },
          {
            "name": "edubase_get_user_name"
          },
          {
            "name": "edubase_get_user_organizations"
          },
          {
            "name": "edubase_get_user_search"
          },
          {
            "name": "edubase_get_users"
          },
          {
            "name": "edubase_get_video_permission"
          },
          {
            "name": "edubase_get_video_tag"
          },
          {
            "name": "edubase_get_video_tags"
          },
          {
            "name": "edubase_patch_integration"
          },
          {
            "name": "edubase_patch_organization"
          },
          {
            "name": "edubase_patch_organization_webhook"
          },
          {
            "name": "edubase_patch_user"
          },
          {
            "name": "edubase_post_class_members"
          },
          {
            "name": "edubase_post_class_permission"
          },
          {
            "name": "edubase_post_class_tag"
          },
          {
            "name": "edubase_post_class_transfer"
          },
          {
            "name": "edubase_post_classes_members"
          },
          {
            "name": "edubase_post_course_permission"
          },
          {
            "name": "edubase_post_course_tag"
          },
          {
            "name": "edubase_post_custom_metric"
          },
          {
            "name": "edubase_post_event_permission"
          },
          {
            "name": "edubase_post_event_tag"
          },
          {
            "name": "edubase_post_event_transfer"
          },
          {
            "name": "edubase_post_exam"
          },
          {
            "name": "edubase_post_exam_certificates_user_download"
          },
          {
            "name": "edubase_post_exam_permission"
          },
          {
            "name": "edubase_post_exam_summary"
          },
          {
            "name": "edubase_post_exam_tag"
          },
          {
            "name": "edubase_post_exam_transfer"
          },
          {
            "name": "edubase_post_exam_users"
          },
          {
            "name": "edubase_post_integration"
          },
          {
            "name": "edubase_post_integration_keys"
          },
          {
            "name": "edubase_post_integration_permission"
          },
          {
            "name": "edubase_post_integration_tag"
          },
          {
            "name": "edubase_post_integration_transfer"
          },
          {
            "name": "edubase_post_organization"
          },
          {
            "name": "edubase_post_organization_members"
          },
          {
            "name": "edubase_post_organization_permission"
          },
          {
            "name": "edubase_post_organization_tag"
          },
          {
            "name": "edubase_post_organization_transfer"
          },
          {
            "name": "edubase_post_organization_webhook"
          },
          {
            "name": "edubase_post_organization_webhook_trigger"
          },
          {
            "name": "edubase_post_organizations_members"
          },
          {
            "name": "edubase_post_question"
          },
          {
            "name": "edubase_post_question_export"
          },
          {
            "name": "edubase_post_question_id"
          },
          {
            "name": "edubase_post_quiz"
          },
          {
            "name": "edubase_post_quiz_permission"
          },
          {
            "name": "edubase_post_quiz_questions"
          },
          {
            "name": "edubase_post_quiz_tag"
          },
          {
            "name": "edubase_post_quiz_transfer"
          },
          {
            "name": "edubase_post_scorm_permission"
          },
          {
            "name": "edubase_post_scorm_tag"
          },
          {
            "name": "edubase_post_scorm_transfer"
          },
          {
            "name": "edubase_post_tag_permission"
          },
          {
            "name": "edubase_post_tag_transfer"
          },
          {
            "name": "edubase_post_user"
          },
          {
            "name": "edubase_post_user_assume"
          },
          {
            "name": "edubase_post_user_classes"
          },
          {
            "name": "edubase_post_user_group"
          },
          {
            "name": "edubase_post_user_login"
          },
          {
            "name": "edubase_post_user_name"
          },
          {
            "name": "edubase_post_user_organizations"
          },
          {
            "name": "edubase_post_video_permission"
          },
          {
            "name": "edubase_post_video_tag"
          },
          {
            "name": "edubase_post_video_transfer"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/edubase.json",
        "upstream": "https://github.com/EduBase/MCP"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/effect-mcp",
    "description": "Tools and resources for writing Effect code in Typescript.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/effect-mcp@sha256:a0e077abc89044c8ac55bfd498d5dcb69ed9c3de93e3d2750050b36495df5b10"
      }
    ],
    "repository": {
      "url": "https://github.com/tim-smart/effect-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 201,
        "icon": "https://avatars.githubusercontent.com/u/77678942?v=4",
        "license": "MIT License",
        "owner": "tim-smart",
        "prompts": 0,
        "pulls": 1225,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/effect-mcp.md",
        "resources": {},
        "source": "https://github.com/tim-smart/effect-mcp/tree/05c19d789d4c4cbd9b881240f815ee8b7fa96ca6",
        "tags": [
          "productivity"
        ],
        "title": "Effect MCP",
        "tools": [
          {
            "name": "effect_docs_search"
          },
          {
            "name": "get_effect_doc"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/effect-mcp.json",
        "upstream": "https://github.com/tim-smart/effect-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/ffmpeg",
    "description": "Use ffmpeg to process video files.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": ""
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "video",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 0,
        "icon": "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/ffmpeg.svg",
        "license": "Apache License 2.0",
        "owner": "docker",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/ffmpeg.md",
        "resources": {},
        "source": "",
        "tags": [
          "ffmpeg",
          "video"
        ],
        "title": "FFmpeg",
        "tools": [
          {
            "name": "imagemagick"
          },
          {
            "name": "file-exists"
          },
          {
            "name": "ffmpeg"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/ffmpeg.json",
        "upstream": ""
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/firecrawl",
    "description": "ðŸ”¥ Official Firecrawl MCP Server - Adds powerful web scraping and search to Cursor, Claude and ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/firecrawl@sha256:dd8efb627715e212c2452154d3e2ec074543923bbcf1cf48780abdfd0551c7fb",
        "environmentVariables": [
          {
            "name": "FIRECRAWL_API_URL",
            "value": "{firecrawl.url}",
            "variables": {
              "firecrawl.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_RETRY_MAX_ATTEMPTS",
            "value": "{firecrawl.retry_max}",
            "variables": {
              "firecrawl.retry_max": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_RETRY_INITIAL_DELAY",
            "value": "{firecrawl.retry_delay}",
            "variables": {
              "firecrawl.retry_delay": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_RETRY_MAX_DELAY",
            "value": "{firecrawl.retry_max_delay}",
            "variables": {
              "firecrawl.retry_max_delay": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_RETRY_BACKOFF_FACTOR",
            "value": "{firecrawl.retry_backoff_factor}",
            "variables": {
              "firecrawl.retry_backoff_factor": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_CREDIT_WARNING_THRESHOLD",
            "value": "{firecrawl.credit_warning_threshold}",
            "variables": {
              "firecrawl.credit_warning_threshold": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_CREDIT_CRITICAL_THRESHOLD",
            "value": "{firecrawl.credit_critical_threshold}",
            "variables": {
              "firecrawl.credit_critical_threshold": {
                "format": "string"
              }
            }
          },
          {
            "name": "FIRECRAWL_API_KEY",
            "value": "{firecrawl.api_key}",
            "variables": {
              "firecrawl.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/mendableai/firecrawl-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 4821,
        "icon": "https://avatars.githubusercontent.com/u/135057108?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "firecrawl",
        "prompts": 0,
        "pulls": 43639,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/firecrawl.md",
        "resources": {},
        "source": "https://github.com/mendableai/firecrawl-mcp-server/tree/e35ab3267e1fddd4c3bc6633cc33ce6f7e14ee22",
        "stars": 14,
        "tags": [
          "firecrawl",
          "search",
          "scraping"
        ],
        "title": "Firecrawl",
        "tools": [
          {
            "name": "firecrawl_check_crawl_status"
          },
          {
            "name": "firecrawl_crawl"
          },
          {
            "name": "firecrawl_extract"
          },
          {
            "name": "firecrawl_map"
          },
          {
            "name": "firecrawl_scrape"
          },
          {
            "name": "firecrawl_search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/firecrawl.json",
        "upstream": "https://github.com/mendableai/firecrawl-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/flexprice",
    "description": "Official flexprice MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/flexprice@sha256:70c2126ddacdc4f8f3c003d59327288c050802cab6ce6b779821bc2af384a65c",
        "environmentVariables": [
          {
            "name": "BASE_URL",
            "value": "{flexprice.base_url}",
            "variables": {
              "flexprice.base_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "API_KEY",
            "value": "{flexprice.api_key}",
            "variables": {
              "flexprice.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/flexprice/mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 4,
        "icon": "https://avatars.githubusercontent.com/u/168305045?v=4",
        "license": "Apache License 2.0",
        "owner": "flexprice",
        "prompts": 0,
        "pulls": 1899,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/flexprice.md",
        "resources": {},
        "source": "https://github.com/flexprice/mcp-server/tree/87482b1f6c185589d41257ef846dcea0c3f0669b",
        "stars": 1,
        "tags": [
          "flexprice",
          "devops"
        ],
        "title": "FlexPrice",
        "tools": [
          {
            "name": "getCustomerById"
          },
          {
            "name": "getCustomerByLookupKey"
          },
          {
            "name": "getCustomerEntitlements"
          },
          {
            "name": "getCustomerSubscriptions"
          },
          {
            "name": "getCustomerUsageSummary"
          },
          {
            "name": "getCustomers"
          },
          {
            "name": "getEventsByCustomer"
          },
          {
            "name": "getInvoiceById"
          },
          {
            "name": "getInvoiceByNumber"
          },
          {
            "name": "getInvoices"
          },
          {
            "name": "getInvoicesByCustomerId"
          },
          {
            "name": "getPaymentById"
          },
          {
            "name": "getPayments"
          },
          {
            "name": "getPlanById"
          },
          {
            "name": "getPlans"
          },
          {
            "name": "getPriceById"
          },
          {
            "name": "getPrices"
          },
          {
            "name": "getSubscriptionById"
          },
          {
            "name": "getSubscriptionPauses"
          },
          {
            "name": "getSubscriptionUsage"
          },
          {
            "name": "getSubscriptions"
          },
          {
            "name": "getWalletBalance"
          },
          {
            "name": "getWalletById"
          },
          {
            "name": "getWalletTransactions"
          },
          {
            "name": "getWalletsByCustomerId"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/flexprice.json",
        "upstream": "https://github.com/flexprice/mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/keboola-mcp",
    "description": "Keboola MCP Server is an open-source bridge between your Keboola project and modern AI tools.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/keboola-mcp@sha256:70183b96969c50ef40dd63f70efb01cbf10fb9387563e97654254c22f11da53f",
        "environmentVariables": [
          {
            "name": "KBC_WORKSPACE_SCHEMA",
            "value": "{keboola-mcp.kbc_workspace_schema}",
            "variables": {
              "keboola-mcp.kbc_workspace_schema": {
                "format": "string"
              }
            }
          },
          {
            "name": "KBC_STORAGE_TOKEN",
            "value": "{keboola-mcp.kbc_storage_token}",
            "variables": {
              "keboola-mcp.kbc_storage_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/keboola/mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-06-16T10:10:08Z",
        "githubStars": 79,
        "icon": "https://avatars.githubusercontent.com/u/1424387?v=4",
        "license": "MIT License",
        "owner": "keboola",
        "prompts": 0,
        "pulls": 1889,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/keboola-mcp.md",
        "resources": {},
        "source": "https://github.com/keboola/mcp-server/tree/edac338db26ba0f2f72747c4430d9cf8b10932e9",
        "tags": [
          "data-platform",
          "etl-pipeline",
          "storage"
        ],
        "title": "Keboola MCP Server",
        "tools": [
          {
            "name": "add_config_row"
          },
          {
            "name": "create_config"
          },
          {
            "name": "create_flow"
          },
          {
            "name": "create_oauth_url"
          },
          {
            "name": "create_sql_transformation"
          },
          {
            "name": "docs_query"
          },
          {
            "name": "find_component_id"
          },
          {
            "name": "get_bucket"
          },
          {
            "name": "get_component"
          },
          {
            "name": "get_config"
          },
          {
            "name": "get_config_examples"
          },
          {
            "name": "get_flow"
          },
          {
            "name": "get_flow_schema"
          },
          {
            "name": "get_job"
          },
          {
            "name": "get_project_info"
          },
          {
            "name": "get_sql_dialect"
          },
          {
            "name": "get_table"
          },
          {
            "name": "list_buckets"
          },
          {
            "name": "list_configs"
          },
          {
            "name": "list_flows"
          },
          {
            "name": "list_jobs"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "list_transformations"
          },
          {
            "name": "query_data"
          },
          {
            "name": "run_job"
          },
          {
            "name": "search"
          },
          {
            "name": "update_bucket_description"
          },
          {
            "name": "update_column_description"
          },
          {
            "name": "update_config"
          },
          {
            "name": "update_config_row"
          },
          {
            "name": "update_flow"
          },
          {
            "name": "update_sql_transformation"
          },
          {
            "name": "update_table_description"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/keboola-mcp.json",
        "upstream": "https://github.com/keboola/mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/atlassian",
    "description": "Tools for Atlassian products (Confluence and Jira). This integration supports both Atlassian Clou...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/atlassian@sha256:85b5a316edf04eeee782647ed50edb61a365a59ebe2c8f9c241834061a7d0ad6",
        "environmentVariables": [
          {
            "name": "CONFLUENCE_URL",
            "value": "{atlassian.confluence.url}",
            "variables": {
              "atlassian.confluence.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "CONFLUENCE_USERNAME",
            "value": "{atlassian.confluence.username}",
            "variables": {
              "atlassian.confluence.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "JIRA_URL",
            "value": "{atlassian.jira.url}",
            "variables": {
              "atlassian.jira.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "JIRA_USERNAME",
            "value": "{atlassian.jira.username}",
            "variables": {
              "atlassian.jira.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "CONFLUENCE_API_TOKEN",
            "value": "{atlassian.confluence.api_token}",
            "variables": {
              "atlassian.confluence.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "CONFLUENCE_PERSONAL_TOKEN",
            "value": "{atlassian.confluence.personal_token}",
            "variables": {
              "atlassian.confluence.personal_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "JIRA_API_TOKEN",
            "value": "{atlassian.jira.api_token}",
            "variables": {
              "atlassian.jira.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "JIRA_PERSONAL_TOKEN",
            "value": "{atlassian.jira.personal_token}",
            "variables": {
              "atlassian.jira.personal_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/sooperset/mcp-atlassian",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 3473,
        "icon": "https://avatars.githubusercontent.com/u/43281909?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "sooperset",
        "prompts": 0,
        "pulls": 33475,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/atlassian.md",
        "resources": {},
        "source": "https://github.com/sooperset/mcp-atlassian/tree/3b07fd3d05f88cd18c37a1739d4e0a1f37fa9aa5",
        "stars": 21,
        "tags": [
          "atlassian",
          "confluence",
          "jira"
        ],
        "title": "Atlassian",
        "tools": [
          {
            "name": "confluence_add_comment"
          },
          {
            "name": "confluence_add_label"
          },
          {
            "name": "confluence_create_page"
          },
          {
            "name": "confluence_delete_page"
          },
          {
            "name": "confluence_get_comments"
          },
          {
            "name": "confluence_get_labels"
          },
          {
            "name": "confluence_get_page"
          },
          {
            "name": "confluence_get_page_children"
          },
          {
            "name": "confluence_search"
          },
          {
            "name": "confluence_update_page"
          },
          {
            "name": "jira_add_comment"
          },
          {
            "name": "jira_add_worklog"
          },
          {
            "name": "jira_batch_create_issues"
          },
          {
            "name": "jira_batch_get_changelogs"
          },
          {
            "name": "jira_create_issue"
          },
          {
            "name": "jira_create_issue_link"
          },
          {
            "name": "jira_create_sprint"
          },
          {
            "name": "jira_delete_issue"
          },
          {
            "name": "jira_download_attachments"
          },
          {
            "name": "jira_get_agile_boards"
          },
          {
            "name": "jira_get_board_issues"
          },
          {
            "name": "jira_get_issue"
          },
          {
            "name": "jira_get_link_types"
          },
          {
            "name": "jira_get_project_issues"
          },
          {
            "name": "jira_get_project_versions"
          },
          {
            "name": "jira_get_sprint_issues"
          },
          {
            "name": "jira_get_sprints_from_board"
          },
          {
            "name": "jira_get_transitions"
          },
          {
            "name": "jira_get_user_profile"
          },
          {
            "name": "jira_get_worklog"
          },
          {
            "name": "jira_link_to_epic"
          },
          {
            "name": "jira_remove_issue_link"
          },
          {
            "name": "jira_search"
          },
          {
            "name": "jira_search_fields"
          },
          {
            "name": "jira_transition_issue"
          },
          {
            "name": "jira_update_issue"
          },
          {
            "name": "jira_update_sprint"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/atlassian.json",
        "upstream": "https://github.com/sooperset/mcp-atlassian"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/database-server",
    "description": "Comprehensive database server supporting PostgreSQL, MySQL, and SQLite with natural language SQL ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "souhardyak/mcp-db-server@sha256:5a365d70ecf0ee7a45988515e1296dc38ada1977ae045c357f7c18f15117ea5f",
        "environmentVariables": [
          {
            "name": "DATABASE_URL",
            "value": "{database-server.database_url}",
            "variables": {
              "database-server.database_url": {
                "format": "string",
                "description": "Connection string for your database. Examples: SQLite: sqlite+aiosqlite:///data/mydb.db, PostgreSQL: postgresql+asyncpg://user:password@localhost:5432/mydb, MySQL: mysql+aiomysql://user:password@localhost:3306/mydb"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Souhar-dya/mcp-db-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-09-24T20:01:26Z",
        "githubStars": 6,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "Other",
        "owner": "Souhar-dya",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/database-server.md",
        "resources": {},
        "source": "https://github.com/Souhar-dya/mcp-db-server/tree/d47b7ae3bf16e19deb9f2c8853cee255ee9157df",
        "tags": [
          "database",
          "sql",
          "postgresql",
          "mysql",
          "sqlite",
          "natural-language",
          "ai-assistant"
        ],
        "title": "MCP Database Server",
        "tools": [
          {
            "name": "query_database"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "describe_table"
          },
          {
            "name": "execute_sql"
          },
          {
            "name": "connect_to_database"
          },
          {
            "name": "get_connection_examples"
          },
          {
            "name": "get_current_database_info"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/database-server.json",
        "upstream": "https://github.com/Souhar-dya/mcp-db-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/maven-tools-mcp",
    "description": "JVM dependency intelligence for any build tool using Maven Central Repository. Includes Context7 ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "arvindand/maven-tools-mcp:latest@sha256:2b912125b8af54610f7dd808f3be1b35ef802a80e6e5f06d000534ff08ba28eb"
      }
    ],
    "repository": {
      "url": "https://github.com/arvindand/maven-tools-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "development",
        "dateAdded": "2025-10-16T16:09:40Z",
        "githubStars": 14,
        "icon": "https://avatars.githubusercontent.com/u/18013523?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "arvindand",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/maven-tools-mcp.md",
        "resources": {},
        "source": "https://github.com/arvindand/maven-tools-mcp/tree/d419a7bfeb19f3515838a64f9a695fe38291e0ec",
        "tags": [
          "maven",
          "dependencies",
          "java",
          "gradle",
          "sbt",
          "mill",
          "jvm",
          "development-tools",
          "context7"
        ],
        "title": "Maven Tools MCP Server",
        "tools": [
          {
            "name": "analyze_dependency_age"
          },
          {
            "name": "analyze_project_health"
          },
          {
            "name": "analyze_release_patterns"
          },
          {
            "name": "check_multiple_dependencies"
          },
          {
            "name": "check_version_exists"
          },
          {
            "name": "compare_dependency_versions"
          },
          {
            "name": "get_latest_version"
          },
          {
            "name": "get_library_docs"
          },
          {
            "name": "get_version_timeline"
          },
          {
            "name": "resolve_library_id"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/maven-tools-mcp.json",
        "upstream": "https://github.com/arvindand/maven-tools-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/ros2",
    "description": "Python server implementing Model Context Protocol (MCP) for ROS2.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/ros2@sha256:380224f84e21b1d09bb97bbae901834eab54f06d565c1c7f9d5ac7a190bf45e4"
      }
    ],
    "repository": {
      "url": "https://github.com/wise-vision/mcp_server_ros_2",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-15T16:12:49Z",
        "githubStars": 58,
        "icon": "https://avatars.githubusercontent.com/u/85994630?v=4",
        "license": "Mozilla Public License 2.0",
        "owner": "wise-vision",
        "prompts": 0,
        "pulls": 446,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/ros2.md",
        "resources": {},
        "source": "https://github.com/wise-vision/mcp_server_ros_2/tree/22c7184713840e3c233734c6477893a603fd480c",
        "tags": [
          "devops"
        ],
        "title": "WiseVision ROS2 MCP Server",
        "tools": [
          {
            "name": "ros2_get_message_fields"
          },
          {
            "name": "ros2_get_messages"
          },
          {
            "name": "ros2_interface_list"
          },
          {
            "name": "ros2_service_call"
          },
          {
            "name": "ros2_service_list"
          },
          {
            "name": "ros2_topic_list"
          },
          {
            "name": "ros2_topic_publish"
          },
          {
            "name": "ros2_topic_subscribe"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/ros2.json",
        "upstream": "https://github.com/wise-vision/mcp_server_ros_2"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/stackhawk",
    "description": "A Model Context Protocol (MCP) server for integrating with StackHawk's security scanning platform...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/stackhawk@sha256:058c26ca70e33599bf387521667d599c8838c4cf5ffcb3e8016013fceeb358ac",
        "environmentVariables": [
          {
            "name": "STACKHAWK_API_KEY",
            "value": "{stackhawk.api_key}",
            "variables": {
              "stackhawk.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/stackhawk/stackhawk-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-19T06:18:27Z",
        "githubStars": 2,
        "icon": "https://avatars.githubusercontent.com/u/53230463?v=4",
        "license": "Other",
        "owner": "stackhawk",
        "prompts": 0,
        "pulls": 254,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/stackhawk.md",
        "resources": {},
        "source": "https://github.com/stackhawk/stackhawk-mcp/tree/a330ddfc85aa880346b4555cb168c6ef28562ad3",
        "tags": [
          "devops",
          "stackhawk",
          "appsec"
        ],
        "title": "StackHawk",
        "tools": [
          {
            "name": "analyze_sensitive_data_trends"
          },
          {
            "name": "create_stackhawk_config"
          },
          {
            "name": "generate_security_dashboard"
          },
          {
            "name": "generate_sensitive_data_summary"
          },
          {
            "name": "get_app_findings_for_triage"
          },
          {
            "name": "get_critical_sensitive_data"
          },
          {
            "name": "get_organization_info"
          },
          {
            "name": "get_sensitive_data"
          },
          {
            "name": "get_sensitive_data_report"
          },
          {
            "name": "get_stackhawk_scan_instructions"
          },
          {
            "name": "get_stackhawk_schema"
          },
          {
            "name": "list_applications"
          },
          {
            "name": "map_sensitive_data_surface"
          },
          {
            "name": "run_stackhawk_scan"
          },
          {
            "name": "search_vulnerabilities"
          },
          {
            "name": "setup_stackhawk_for_project"
          },
          {
            "name": "validate_field_exists"
          },
          {
            "name": "validate_stackhawk_config"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/stackhawk.json",
        "upstream": "https://github.com/stackhawk/stackhawk-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/notion",
    "description": "Official Notion MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/notion@sha256:27fc9ba99c6b9840c9631d2ae4cfc7665e6f2fa6607c0cee413be4d5e99aeea2",
        "environmentVariables": [
          {
            "name": "OPENAPI_MCP_HEADERS",
            "value": "{\"Authorization\": \"Bearer $INTERNAL_INTEGRATION_TOKEN\", \"Notion-Version\": \"2022-06-28\"}"
          },
          {
            "name": "INTERNAL_INTEGRATION_TOKEN",
            "value": "{notion.internal_integration_token}",
            "variables": {
              "notion.internal_integration_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/makenotion/notion-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 3396,
        "icon": "https://avatars.githubusercontent.com/u/4792552?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "makenotion",
        "prompts": 0,
        "pulls": 53049,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/notion.md",
        "resources": {},
        "source": "https://github.com/makenotion/notion-mcp-server/tree/ffc1b18807df0cd72717f6ba55e7866af2d91ccd",
        "stars": 30,
        "tags": [
          "notion",
          "secrets"
        ],
        "title": "Notion",
        "tools": [
          {
            "name": "API-create-a-comment"
          },
          {
            "name": "API-create-a-database"
          },
          {
            "name": "API-delete-a-block"
          },
          {
            "name": "API-get-block-children"
          },
          {
            "name": "API-get-self"
          },
          {
            "name": "API-get-user"
          },
          {
            "name": "API-get-users"
          },
          {
            "name": "API-patch-block-children"
          },
          {
            "name": "API-patch-page"
          },
          {
            "name": "API-post-database-query"
          },
          {
            "name": "API-post-page"
          },
          {
            "name": "API-post-search"
          },
          {
            "name": "API-retrieve-a-block"
          },
          {
            "name": "API-retrieve-a-comment"
          },
          {
            "name": "API-retrieve-a-database"
          },
          {
            "name": "API-retrieve-a-page"
          },
          {
            "name": "API-retrieve-a-page-property"
          },
          {
            "name": "API-update-a-block"
          },
          {
            "name": "API-update-a-database"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/notion.json",
        "upstream": "https://github.com/makenotion/notion-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/curl",
    "description": "Standard curl tool.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": ""
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/16928085?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "docker",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/curl.md",
        "resources": {},
        "source": "",
        "tags": [
          "http"
        ],
        "title": "curl",
        "tools": [
          {
            "name": "curl"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/curl.json",
        "upstream": ""
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/scrapegraph",
    "description": "ScapeGraph MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/scrapegraph@sha256:9005c47bdd7917294777ebeefe448da7e127b608e2006450f901452645a4fb1c",
        "environmentVariables": [
          {
            "name": "SGAI_API_KEY",
            "value": "{scrapegraph.api_key}",
            "variables": {
              "scrapegraph.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ScrapeGraphAI/scrapegraph-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 41,
        "icon": "https://avatars.githubusercontent.com/u/171017415?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "ScrapeGraphAI",
        "prompts": 0,
        "pulls": 3573,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/scrapegraph.md",
        "resources": {},
        "source": "https://github.com/ScrapeGraphAI/scrapegraph-mcp/tree/aebeebd2748311e3ff68d5c10d37b0a903e6206a",
        "stars": 4,
        "tags": [
          "scrapegraph",
          "devops"
        ],
        "title": "ScrapeGraph",
        "tools": [
          {
            "name": "markdownify"
          },
          {
            "name": "searchscraper"
          },
          {
            "name": "smartcrawler_fetch_results"
          },
          {
            "name": "smartcrawler_initiate"
          },
          {
            "name": "smartscraper"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/scrapegraph.json",
        "upstream": "https://github.com/ScrapeGraphAI/scrapegraph-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/gmail-mcp",
    "description": "A Model Context Protocol server for Gmail operations using IMAP/SMTP with app password authentica...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "yashtekwani/gmail-mcp@sha256:9d806c6ba3752bd83a94782cc65d79929e05b3d4d805a01320d86004e39daf13",
        "environmentVariables": [
          {
            "name": "EMAIL_ADDRESS",
            "value": "{gmail-mcp.email_address}",
            "variables": {
              "gmail-mcp.email_address": {
                "format": "string",
                "description": "Your Gmail email address"
              }
            }
          },
          {
            "name": "IMAP_HOST",
            "value": "imap.gmail.com"
          },
          {
            "name": "IMAP_PORT",
            "value": "993"
          },
          {
            "name": "SMTP_HOST",
            "value": "smtp.gmail.com"
          },
          {
            "name": "SMTP_PORT",
            "value": "587"
          },
          {
            "name": "EMAIL_PASSWORD",
            "value": "{gmail-mcp.email_password}",
            "variables": {
              "gmail-mcp.email_password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Sallytion/Gmail-MCP",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "communication",
        "dateAdded": "2025-09-19T06:18:27Z",
        "githubStars": 5,
        "icon": "https://www.google.com/gmail/about/static/images/logo-gmail.png",
        "license": "",
        "owner": "Sallytion",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/gmail-mcp.md",
        "resources": {},
        "source": "https://github.com/Sallytion/Gmail-MCP/tree/c9a31741c7e879575c9dfc90192a7a430efef812",
        "tags": [
          "email",
          "gmail",
          "imap",
          "smtp",
          "communication"
        ],
        "title": "Gmail MCP Server",
        "tools": [
          {
            "name": "listMessages"
          },
          {
            "name": "findMessage"
          },
          {
            "name": "sendMessage"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/gmail-mcp.json",
        "upstream": "https://github.com/Sallytion/Gmail-MCP"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/google-maps-comprehensive",
    "description": "Complete Google Maps integration with 8 tools including geocoding, places search, directions, ele...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/google-maps-comprehensive@sha256:fc37a12a21f451ae7601cc8a9109af172357196f0bbc50d47947a65690dcb6fb",
        "environmentVariables": [
          {
            "name": "GOOGLE_MAPS_API_KEY",
            "value": "{google-maps-comprehensive.api_key}",
            "variables": {
              "google-maps-comprehensive.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/vicpeacock/google-maps-comprehensive-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-24T20:01:26Z",
        "githubStars": 1,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "",
        "owner": "vicpeacock",
        "prompts": 0,
        "pulls": 1291,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/google-maps-comprehensive.md",
        "resources": {},
        "source": "https://github.com/vicpeacock/google-maps-comprehensive-mcp/tree/32d7f4c1f497f97f2cf9f4a74ed5f6ff6daca687",
        "tags": [
          "google-maps",
          "maps",
          "geocoding",
          "directions",
          "places",
          "elevation",
          "location",
          "devops"
        ],
        "title": "Google Maps Comprehensive MCP",
        "tools": [
          {
            "name": "maps_directions"
          },
          {
            "name": "maps_distance_matrix"
          },
          {
            "name": "maps_elevation"
          },
          {
            "name": "maps_geocode"
          },
          {
            "name": "maps_ping"
          },
          {
            "name": "maps_place_details"
          },
          {
            "name": "maps_reverse_geocode"
          },
          {
            "name": "maps_search_places"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/google-maps-comprehensive.json",
        "upstream": "https://github.com/vicpeacock/google-maps-comprehensive-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/filesystem",
    "description": "Local filesystem access with configurable allowed paths.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/filesystem@sha256:35fcf0217ca0d5bf7b0a5bd68fb3b89e08174676c0e0b4f431604512cf7b3f67",
        "packageArguments": [
          {
            "type": "positional",
            "value": "{{filesystem.paths|volume-target|into}}"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{filesystem.paths|volume|into}",
            "variables": {
              "filesystem.paths": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 83976,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/filesystem.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 26,
        "tags": [
          "filesystem",
          "devops"
        ],
        "title": "Filesystem (Reference)",
        "tools": [
          {
            "name": "create_directory"
          },
          {
            "name": "directory_tree"
          },
          {
            "name": "edit_file"
          },
          {
            "name": "get_file_info"
          },
          {
            "name": "list_allowed_directories"
          },
          {
            "name": "list_directory"
          },
          {
            "name": "move_file"
          },
          {
            "name": "read_file"
          },
          {
            "name": "read_multiple_files"
          },
          {
            "name": "search_files"
          },
          {
            "name": "write_file"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/filesystem.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/neo4j-cloud-aura-api",
    "description": "Manage Neo4j Aura database instances through the Neo4j Aura API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/neo4j-cloud-aura-api@sha256:922fea38ae0dc6a29ed4b6606bddd41c254b2b68488efe4393d03338499ede66",
        "environmentVariables": [
          {
            "name": "NEO4J_AURA_CLIENT_ID",
            "value": "{neo4j-cloud-aura-api.client_id}",
            "variables": {
              "neo4j-cloud-aura-api.client_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_TRANSPORT",
            "value": "{neo4j-cloud-aura-api.transport}",
            "variables": {
              "neo4j-cloud-aura-api.transport": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_HOST",
            "value": "{neo4j-cloud-aura-api.server_host}",
            "variables": {
              "neo4j-cloud-aura-api.server_host": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PORT",
            "value": "{neo4j-cloud-aura-api.server_port}",
            "variables": {
              "neo4j-cloud-aura-api.server_port": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PATH",
            "value": "{neo4j-cloud-aura-api.server_path}",
            "variables": {
              "neo4j-cloud-aura-api.server_path": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
            "value": "{neo4j-cloud-aura-api.server_allow_origins}",
            "variables": {
              "neo4j-cloud-aura-api.server_allow_origins": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
            "value": "{neo4j-cloud-aura-api.server_allowed_hosts}",
            "variables": {
              "neo4j-cloud-aura-api.server_allowed_hosts": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_AURA_CLIENT_SECRET",
            "value": "{neo4j-cloud-aura-api.client_secret}",
            "variables": {
              "neo4j-cloud-aura-api.client_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/neo4j-contrib/mcp-neo4j",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 772,
        "icon": "https://avatars.githubusercontent.com/u/916372?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "neo4j-contrib",
        "prompts": 0,
        "pulls": 2590,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/neo4j-cloud-aura-api.md",
        "resources": {},
        "source": "https://github.com/neo4j-contrib/mcp-neo4j/tree/7bf941bb6d9d8cf95d91fd1209b2bf24fdc609d2/servers/mcp-neo4j-cloud-aura-api",
        "stars": 2,
        "tags": [
          "neo4j-cloud-aura-api",
          "devops"
        ],
        "title": "Neo4j Cloud Aura Api",
        "tools": [
          {
            "name": "create_instance"
          },
          {
            "name": "delete_instance"
          },
          {
            "name": "get_instance_by_name"
          },
          {
            "name": "get_instance_details"
          },
          {
            "name": "get_tenant_details"
          },
          {
            "name": "list_instances"
          },
          {
            "name": "list_tenants"
          },
          {
            "name": "pause_instance"
          },
          {
            "name": "resume_instance"
          },
          {
            "name": "update_instance_memory"
          },
          {
            "name": "update_instance_name"
          },
          {
            "name": "update_instance_vector_optimization"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/neo4j-cloud-aura-api.json",
        "upstream": "https://github.com/neo4j-contrib/mcp-neo4j"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/prometheus",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants to query and analyze Prometheus ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "ghcr.io/pab1it0/prometheus-mcp-server@sha256:3389176f1ac9651f7f13f728f995d2845cdaedc72468a06059858325a89f48c0",
        "environmentVariables": [
          {
            "name": "PROMETHEUS_URL",
            "value": "{prometheus.prometheus_url}",
            "variables": {
              "prometheus.prometheus_url": {
                "format": "string",
                "description": "The URL of your Prometheus server"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/pab1it0/prometheus-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 267,
        "icon": "https://upload.wikimedia.org/wikipedia/commons/3/38/Prometheus_software_logo.svg",
        "license": "MIT License",
        "owner": "pab1it0",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/prometheus.md",
        "resources": {},
        "source": "https://github.com/pab1it0/prometheus-mcp-server/tree/219d4f0772cfb035d702e1d7c64643baf60b3479",
        "tags": [
          "ai",
          "devops",
          "llm",
          "model-context-protocol",
          "prometheus",
          "metrics",
          "monitoring",
          "observability"
        ],
        "title": "Prometheus",
        "tools": [
          {
            "name": "execute_query"
          },
          {
            "name": "execute_range_query"
          },
          {
            "name": "get_metric_metadata"
          },
          {
            "name": "get_targets"
          },
          {
            "name": "health_check"
          },
          {
            "name": "list_metrics"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/prometheus.json",
        "upstream": "https://github.com/pab1it0/prometheus-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/inspektor-gadget",
    "description": "AI interface to troubleshoot and observe Kubernetes/Container workloads.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/inspektor-gadget@sha256:2e3f85144f52d082919dd0fc2fea0726135564bf78b16f89c188ac6a879296d0",
        "packageArguments": [
          {
            "type": "positional",
            "value": "-gadget-discoverer=artifacthub"
          },
          {
            "type": "positional",
            "value": "-gadget-images={{inspektor-gadget.gadget-images}}"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{inspektor-gadget.kubeconfig}:/kubeconfig",
            "variables": {
              "inspektor-gadget.kubeconfig": {
                "format": "string",
                "description": "Path to the kubeconfig file for accessing Kubernetes clusters"
              }
            }
          },
          {
            "type": "named",
            "name": "-v",
            "value": "ig-mcp-cache:/root/.cache/ig-mcp-server"
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/inspektor-gadget/ig-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-07-29T14:05:27Z",
        "githubStars": 16,
        "icon": "https://avatars.githubusercontent.com/u/111520143?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "inspektor-gadget",
        "prompts": 0,
        "pulls": 1280,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/inspektor-gadget.md",
        "resources": {},
        "source": "https://github.com/inspektor-gadget/ig-mcp-server/tree/e9bacad1366e85b42ddf38a68d843a308ce4e3d4",
        "stars": 2,
        "tags": [
          "inspektor-gadget",
          "kubernetes",
          "monitoring",
          "ebpf"
        ],
        "title": "Inspektor Gadget",
        "tools": [
          {
            "name": "gadget_advise_networkpolicy"
          },
          {
            "name": "gadget_advise_seccomp"
          },
          {
            "name": "gadget_audit_seccomp"
          },
          {
            "name": "gadget_bpfstats"
          },
          {
            "name": "gadget_deadlock"
          },
          {
            "name": "gadget_fdpass"
          },
          {
            "name": "gadget_fsnotify"
          },
          {
            "name": "gadget_profile_blockio"
          },
          {
            "name": "gadget_profile_cpu"
          },
          {
            "name": "gadget_profile_qdisc_latency"
          },
          {
            "name": "gadget_profile_tcprtt"
          },
          {
            "name": "gadget_snapshot_process"
          },
          {
            "name": "gadget_snapshot_socket"
          },
          {
            "name": "gadget_tcpdump"
          },
          {
            "name": "gadget_top_blockio"
          },
          {
            "name": "gadget_top_file"
          },
          {
            "name": "gadget_top_process"
          },
          {
            "name": "gadget_top_tcp"
          },
          {
            "name": "gadget_trace_bind"
          },
          {
            "name": "gadget_trace_capabilities"
          },
          {
            "name": "gadget_trace_dns"
          },
          {
            "name": "gadget_trace_exec"
          },
          {
            "name": "gadget_trace_fsslower"
          },
          {
            "name": "gadget_trace_lsm"
          },
          {
            "name": "gadget_trace_malloc"
          },
          {
            "name": "gadget_trace_mount"
          },
          {
            "name": "gadget_trace_oomkill"
          },
          {
            "name": "gadget_trace_open"
          },
          {
            "name": "gadget_trace_signal"
          },
          {
            "name": "gadget_trace_sni"
          },
          {
            "name": "gadget_trace_ssl"
          },
          {
            "name": "gadget_trace_tcp"
          },
          {
            "name": "gadget_trace_tcpdrop"
          },
          {
            "name": "gadget_trace_tcpretrans"
          },
          {
            "name": "gadget_traceloop"
          },
          {
            "name": "ig_deploy"
          },
          {
            "name": "ig_gadgets"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/inspektor-gadget.json",
        "upstream": "https://github.com/inspektor-gadget/ig-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/opik",
    "description": "Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unifie...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/opik@sha256:1ff61d0c6618e9b4add47b12b3b01b8c18d00df49cbf3c95ede58e87ee9886ad",
        "environmentVariables": [
          {
            "name": "OPIK_API_BASE_URL",
            "value": "{opik.api_base_url}",
            "variables": {
              "opik.api_base_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "OPIK_WORKSPACE_NAME",
            "value": "{opik.workspace_name}",
            "variables": {
              "opik.workspace_name": {
                "format": "string"
              }
            }
          },
          {
            "name": "OPIK_API_KEY",
            "value": "{opik.api_key}",
            "variables": {
              "opik.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/comet-ml/opik-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 178,
        "icon": "https://avatars.githubusercontent.com/u/31487821?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "comet-ml",
        "prompts": 0,
        "pulls": 2390,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/opik.md",
        "resources": {},
        "source": "https://github.com/comet-ml/opik-mcp/tree/40b8e53d73f363ebcd25085a5ff9274c3ce79718",
        "stars": 1,
        "tags": [
          "opik",
          "devops"
        ],
        "title": "Opik",
        "tools": [
          {
            "name": "add-trace-feedback"
          },
          {
            "name": "create-project"
          },
          {
            "name": "create-prompt"
          },
          {
            "name": "get-prompt-version"
          },
          {
            "name": "get-prompts"
          },
          {
            "name": "get-trace-by-id"
          },
          {
            "name": "get-trace-stats"
          },
          {
            "name": "get-trace-threads"
          },
          {
            "name": "list-projects"
          },
          {
            "name": "list-traces"
          },
          {
            "name": "opik-integration-docs"
          },
          {
            "name": "save-prompt-version"
          },
          {
            "name": "search-traces"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/opik.json",
        "upstream": "https://github.com/comet-ml/opik-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/risken",
    "description": "RISKEN's official MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/risken@sha256:2df37e7ad5ca173c269f4cad66cd80e23b62f9c4ea59147b71a4ac5a4b05da54",
        "environmentVariables": [
          {
            "name": "RISKEN_URL",
            "value": "{risken.url}",
            "variables": {
              "risken.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "RISKEN_ACCESS_TOKEN",
            "value": "{risken.access_key}",
            "variables": {
              "risken.access_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "positional",
            "value": "stdio"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ca-risken/risken-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 6,
        "icon": "https://avatars.githubusercontent.com/u/88366693?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "ca-risken",
        "prompts": 0,
        "pulls": 2038,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/risken.md",
        "resources": {},
        "source": "https://github.com/ca-risken/risken-mcp-server/tree/e1a0ceefa761ccafb20201cd9b213c921f7a3ac2",
        "tags": [
          "risken",
          "devops"
        ],
        "title": "RISKEN",
        "tools": [
          {
            "name": "archive_finding"
          },
          {
            "name": "get_project"
          },
          {
            "name": "search_alert"
          },
          {
            "name": "search_finding"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/risken.json",
        "upstream": "https://github.com/ca-risken/risken-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/neon",
    "description": "MCP server for interacting with Neon Management API and databases.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/neon@sha256:fab32eb73fb01e858b1effecc735c907488ba42536f7498e034b0567729051de",
        "environmentVariables": [
          {
            "name": "NEON_API_KEY",
            "value": "{neon.api_key}",
            "variables": {
              "neon.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/neondatabase-labs/mcp-server-neon",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 499,
        "icon": "https://avatars.githubusercontent.com/u/183852044?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "neondatabase",
        "prompts": 0,
        "pulls": 4694,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/neon.md",
        "resources": {},
        "source": "https://github.com/neondatabase-labs/mcp-server-neon/tree/dbfa184afd9fc677c0d6b007a62b33194e883821",
        "stars": 4,
        "tags": [
          "neon",
          "database"
        ],
        "title": "Neon",
        "tools": [
          {
            "name": "__node_version"
          },
          {
            "name": "complete_database_migration"
          },
          {
            "name": "complete_query_tuning"
          },
          {
            "name": "create_branch"
          },
          {
            "name": "create_project"
          },
          {
            "name": "delete_branch"
          },
          {
            "name": "delete_project"
          },
          {
            "name": "describe_branch"
          },
          {
            "name": "describe_project"
          },
          {
            "name": "describe_table_schema"
          },
          {
            "name": "explain_sql_statement"
          },
          {
            "name": "get_connection_string"
          },
          {
            "name": "get_database_tables"
          },
          {
            "name": "list_projects"
          },
          {
            "name": "prepare_database_migration"
          },
          {
            "name": "prepare_query_tuning"
          },
          {
            "name": "provision_neon_auth"
          },
          {
            "name": "run_sql"
          },
          {
            "name": "run_sql_transaction"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/neon.json",
        "upstream": "https://github.com/neondatabase-labs/mcp-server-neon"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/playwright",
    "description": "Playwright MCP server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/playwright@sha256:f0101edde47e0c70441c4285a4ff560a4f66c29feb9a49f413a5cbb293c0d3d5"
      }
    ],
    "repository": {
      "url": "https://github.com/microsoft/playwright-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 22603,
        "icon": "https://avatars.githubusercontent.com/u/6154722?v=4",
        "license": "Apache License 2.0",
        "owner": "microsoft",
        "prompts": 0,
        "pulls": 191050,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/playwright.md",
        "resources": {},
        "source": "https://github.com/microsoft/playwright-mcp/tree/ac6e678135035cd59ba18324d232dd7434818ebf",
        "stars": 23,
        "tags": [
          "playwright",
          "devops"
        ],
        "title": "Playwright",
        "tools": [
          {
            "name": "browser_click"
          },
          {
            "name": "browser_close"
          },
          {
            "name": "browser_console_messages"
          },
          {
            "name": "browser_drag"
          },
          {
            "name": "browser_evaluate"
          },
          {
            "name": "browser_file_upload"
          },
          {
            "name": "browser_fill_form"
          },
          {
            "name": "browser_handle_dialog"
          },
          {
            "name": "browser_hover"
          },
          {
            "name": "browser_install"
          },
          {
            "name": "browser_navigate"
          },
          {
            "name": "browser_navigate_back"
          },
          {
            "name": "browser_network_requests"
          },
          {
            "name": "browser_press_key"
          },
          {
            "name": "browser_resize"
          },
          {
            "name": "browser_select_option"
          },
          {
            "name": "browser_snapshot"
          },
          {
            "name": "browser_tabs"
          },
          {
            "name": "browser_take_screenshot"
          },
          {
            "name": "browser_type"
          },
          {
            "name": "browser_wait_for"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/playwright.json",
        "upstream": "https://github.com/microsoft/playwright-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/stripe",
    "description": "Interact with Stripe services over the Stripe API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/stripe@sha256:a7cbb0b0095824a91eaf1a6274da47c32b181e052d8f04b676ffc2d77aa4844e",
        "environmentVariables": [
          {
            "name": "STRIPE_SECRET_KEY",
            "value": "{stripe.secret_key}",
            "variables": {
              "stripe.secret_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "named",
            "name": "--tools",
            "value": "all"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/stripe/agent-toolkit",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "finance",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 993,
        "icon": "https://avatars.githubusercontent.com/u/856813?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "stripe",
        "prompts": 0,
        "pulls": 8962,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/stripe.md",
        "resources": {},
        "source": "https://github.com/stripe/agent-toolkit/tree/f495421c400748b65a05751806cb20293c764233/modelcontextprotocol",
        "stars": 9,
        "tags": [
          "stripe",
          "finance"
        ],
        "title": "Stripe",
        "tools": [
          {
            "name": "cancel_subscription"
          },
          {
            "name": "create_coupon"
          },
          {
            "name": "create_customer"
          },
          {
            "name": "create_invoice"
          },
          {
            "name": "create_invoice_item"
          },
          {
            "name": "create_payment_link"
          },
          {
            "name": "create_price"
          },
          {
            "name": "create_product"
          },
          {
            "name": "create_refund"
          },
          {
            "name": "finalize_invoice"
          },
          {
            "name": "list_coupons"
          },
          {
            "name": "list_customers"
          },
          {
            "name": "list_disputes"
          },
          {
            "name": "list_invoices"
          },
          {
            "name": "list_payment_intents"
          },
          {
            "name": "list_prices"
          },
          {
            "name": "list_products"
          },
          {
            "name": "list_subscriptions"
          },
          {
            "name": "retrieve_balance"
          },
          {
            "name": "search_stripe_documentation"
          },
          {
            "name": "update_dispute"
          },
          {
            "name": "update_subscription"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/stripe.json",
        "upstream": "https://github.com/stripe/agent-toolkit"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aws-documentation",
    "description": "Tools to access AWS documentation, search for content, and get recommendations.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aws-documentation@sha256:b468957edbab8c27ac312e4656a54ce267b3dd59f59143786c7f726a1c3cf94f"
      }
    ],
    "repository": {
      "url": "https://github.com/awslabs/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 6893,
        "icon": "https://avatars.githubusercontent.com/u/3299148?v=4",
        "license": "Apache License 2.0",
        "owner": "awslabs",
        "prompts": 0,
        "pulls": 31415,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aws-documentation.md",
        "resources": {},
        "source": "https://github.com/awslabs/mcp/tree/96f3e569e2a054d31ccbc452bda89580265e8dae/src/aws-documentation-mcp-server",
        "stars": 1,
        "tags": [
          "aws-documentation",
          "devops"
        ],
        "title": "AWS Documentation",
        "tools": [
          {
            "name": "read_documentation"
          },
          {
            "name": "recommend"
          },
          {
            "name": "search_documentation"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aws-documentation.json",
        "upstream": "https://github.com/awslabs/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/dart",
    "description": "Dart AI Model Context Protocol (MCP) server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/dart@sha256:4f659b1a51ca3367c42022d179c303770525d4aa8027165c9bd1154f274751c6",
        "environmentVariables": [
          {
            "name": "DART_HOST",
            "value": "{dart.host}",
            "variables": {
              "dart.host": {
                "format": "string"
              }
            }
          },
          {
            "name": "DART_TOKEN",
            "value": "{dart.token}",
            "variables": {
              "dart.token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/its-dart/dart-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 121,
        "icon": "https://avatars.githubusercontent.com/u/92822028?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "its-dart",
        "prompts": 0,
        "pulls": 3740,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/dart.md",
        "resources": {},
        "source": "https://github.com/its-dart/dart-mcp-server/tree/8b2e239afe9f0b6d2cd598383e53dd2c554dc3b7",
        "stars": 2,
        "tags": [
          "dart",
          "devops"
        ],
        "title": "Dart AI",
        "tools": [
          {
            "name": "add_task_comment"
          },
          {
            "name": "create_doc"
          },
          {
            "name": "create_task"
          },
          {
            "name": "delete_doc"
          },
          {
            "name": "delete_task"
          },
          {
            "name": "get_config"
          },
          {
            "name": "get_dartboard"
          },
          {
            "name": "get_doc"
          },
          {
            "name": "get_folder"
          },
          {
            "name": "get_task"
          },
          {
            "name": "get_view"
          },
          {
            "name": "list_docs"
          },
          {
            "name": "list_task_comments"
          },
          {
            "name": "list_tasks"
          },
          {
            "name": "update_doc"
          },
          {
            "name": "update_task"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/dart.json",
        "upstream": "https://github.com/its-dart/dart-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/neo4j-cypher",
    "description": "Interact with Neo4j using Cypher graph queries.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/neo4j-cypher@sha256:57a6000c2f0e165662899ba2181486f8d55772fceeee9030563d83b76f5063c1",
        "environmentVariables": [
          {
            "name": "NEO4J_URL",
            "value": "{neo4j-cypher.url}",
            "variables": {
              "neo4j-cypher.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_USERNAME",
            "value": "{neo4j-cypher.username}",
            "variables": {
              "neo4j-cypher.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_DATABASE",
            "value": "{neo4j-cypher.database}",
            "variables": {
              "neo4j-cypher.database": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_NAMESPACE",
            "value": "{neo4j-cypher.namespace}",
            "variables": {
              "neo4j-cypher.namespace": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_TRANSPORT",
            "value": "{neo4j-cypher.transport}",
            "variables": {
              "neo4j-cypher.transport": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_HOST",
            "value": "{neo4j-cypher.server_host}",
            "variables": {
              "neo4j-cypher.server_host": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PORT",
            "value": "{neo4j-cypher.server_port}",
            "variables": {
              "neo4j-cypher.server_port": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PATH",
            "value": "{neo4j-cypher.server_path}",
            "variables": {
              "neo4j-cypher.server_path": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
            "value": "{neo4j-cypher.server_allow_origins}",
            "variables": {
              "neo4j-cypher.server_allow_origins": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
            "value": "{neo4j-cypher.server_allowed_hosts}",
            "variables": {
              "neo4j-cypher.server_allowed_hosts": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_READ_TIMEOUT",
            "value": "{neo4j-cypher.read_timeout}",
            "variables": {
              "neo4j-cypher.read_timeout": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_RESPONSE_TOKEN_LIMIT",
            "value": "{neo4j-cypher.response_token_limit}",
            "variables": {
              "neo4j-cypher.response_token_limit": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_READ_ONLY",
            "value": "{neo4j-cypher.read_only}",
            "variables": {
              "neo4j-cypher.read_only": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_PASSWORD",
            "value": "{neo4j-cypher.password}",
            "variables": {
              "neo4j-cypher.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/neo4j-contrib/mcp-neo4j",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 772,
        "icon": "https://avatars.githubusercontent.com/u/916372?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "neo4j-contrib",
        "prompts": 0,
        "pulls": 10009,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/neo4j-cypher.md",
        "resources": {},
        "source": "https://github.com/neo4j-contrib/mcp-neo4j/tree/7bf941bb6d9d8cf95d91fd1209b2bf24fdc609d2/servers/mcp-neo4j-cypher",
        "stars": 2,
        "tags": [
          "neo4j-cypher",
          "devops"
        ],
        "title": "Neo4j Cypher",
        "tools": [
          {
            "name": "get_neo4j_schema"
          },
          {
            "name": "read_neo4j_cypher"
          },
          {
            "name": "write_neo4j_cypher"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/neo4j-cypher.json",
        "upstream": "https://github.com/neo4j-contrib/mcp-neo4j"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/onlyoffice-docspace",
    "description": "ONLYOFFICE DocSpace is a room-based collaborative platform which allows organizing a clear file s...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/onlyoffice-docspace@sha256:4efbf4879e6227e61475d3adc68b2fcce9d6b632dc0d2ae6676a830228b67e3a",
        "environmentVariables": [
          {
            "name": "DOCSPACE_BASE_URL",
            "value": "{onlyoffice-docspace.base_url}",
            "variables": {
              "onlyoffice-docspace.base_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "DOCSPACE_ORIGIN",
            "value": "{onlyoffice-docspace.origin}",
            "variables": {
              "onlyoffice-docspace.origin": {
                "format": "string"
              }
            }
          },
          {
            "name": "DOCSPACE_USER_AGENT",
            "value": "{onlyoffice-docspace.user_agent}",
            "variables": {
              "onlyoffice-docspace.user_agent": {
                "format": "string"
              }
            }
          },
          {
            "name": "DOCSPACE_DYNAMIC",
            "value": "{onlyoffice-docspace.dynamic}",
            "variables": {
              "onlyoffice-docspace.dynamic": {
                "format": "string"
              }
            }
          },
          {
            "name": "DOCSPACE_TOOLSETS",
            "value": "{onlyoffice-docspace.toolsets}",
            "variables": {
              "onlyoffice-docspace.toolsets": {
                "format": "string"
              }
            }
          },
          {
            "name": "DOCSPACE_API_KEY",
            "value": "{onlyoffice-docspace.api_key}",
            "variables": {
              "onlyoffice-docspace.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "DOCSPACE_AUTH_TOKEN",
            "value": "{onlyoffice-docspace.auth_token}",
            "variables": {
              "onlyoffice-docspace.auth_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "DOCSPACE_USERNAME",
            "value": "{onlyoffice-docspace.username}",
            "variables": {
              "onlyoffice-docspace.username": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "DOCSPACE_PASSWORD",
            "value": "{onlyoffice-docspace.password}",
            "variables": {
              "onlyoffice-docspace.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ONLYOFFICE/docspace-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-07-19T06:20:02Z",
        "githubStars": 8,
        "icon": "https://avatars.githubusercontent.com/u/1426033?v=4",
        "license": "Apache License 2.0",
        "owner": "ONLYOFFICE",
        "prompts": 0,
        "pulls": 1258,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/onlyoffice-docspace.md",
        "resources": {},
        "source": "https://github.com/ONLYOFFICE/docspace-mcp/tree/207df07a0f57e322787f6e6b60c7301572a87d9e",
        "tags": [
          "onlyoffice",
          "docspace",
          "productivity"
        ],
        "title": "ONLYOFFICE DocSpace",
        "tools": [
          {
            "name": "archive_room"
          },
          {
            "name": "copy_batch_items"
          },
          {
            "name": "create_folder"
          },
          {
            "name": "create_room"
          },
          {
            "name": "delete_file"
          },
          {
            "name": "delete_folder"
          },
          {
            "name": "download_file_as_text"
          },
          {
            "name": "get_all_people"
          },
          {
            "name": "get_file_info"
          },
          {
            "name": "get_folder_content"
          },
          {
            "name": "get_folder_info"
          },
          {
            "name": "get_my_folder"
          },
          {
            "name": "get_room_access_levels"
          },
          {
            "name": "get_room_info"
          },
          {
            "name": "get_room_security_info"
          },
          {
            "name": "get_room_types"
          },
          {
            "name": "get_rooms_folder"
          },
          {
            "name": "move_batch_items"
          },
          {
            "name": "rename_folder"
          },
          {
            "name": "set_room_security"
          },
          {
            "name": "update_file"
          },
          {
            "name": "update_room"
          },
          {
            "name": "upload_file"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/onlyoffice-docspace.json",
        "upstream": "https://github.com/ONLYOFFICE/docspace-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/memory",
    "description": "Knowledge graph-based persistent memory system.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/memory@sha256:db0c2db07a44b6797eba7a832b1bda142ffc899588aae82c92780cbb2252407f",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "claude-memory:/app/dist"
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/knowledgebase.svg",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 106418,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/memory.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306/src/memory",
        "stars": 26,
        "tags": [
          "mcp",
          "ai"
        ],
        "title": "Memory (Reference)",
        "tools": [
          {
            "name": "add_observations"
          },
          {
            "name": "create_entities"
          },
          {
            "name": "create_relations"
          },
          {
            "name": "delete_entities"
          },
          {
            "name": "delete_observations"
          },
          {
            "name": "delete_relations"
          },
          {
            "name": "open_nodes"
          },
          {
            "name": "read_graph"
          },
          {
            "name": "search_nodes"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/memory.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/wikipedia-mcp",
    "description": "A Model Context Protocol (MCP) server that retrieves information from Wikipedia to provide contex...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/wikipedia-mcp@sha256:c4f11de51360488e6c50ffa55c6701a8bd2b43a749734fcbd37fd262a27fe89b"
      }
    ],
    "repository": {
      "url": "https://github.com/Rudra-ravi/wikipedia-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 131,
        "icon": "https://avatars.githubusercontent.com/u/56668?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "Rudra-ravi",
        "prompts": 0,
        "pulls": 68894,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/wikipedia-mcp.md",
        "resources": {},
        "source": "https://github.com/Rudra-ravi/wikipedia-mcp/tree/bc12a6490be23c3481e29d0258736372a1a2f865",
        "stars": 7,
        "tags": [
          "wikipedia-mcp",
          "devops"
        ],
        "title": "Wikipedia",
        "tools": [
          {
            "name": "extract_key_facts"
          },
          {
            "name": "get_article"
          },
          {
            "name": "get_coordinates"
          },
          {
            "name": "get_links"
          },
          {
            "name": "get_related_topics"
          },
          {
            "name": "get_sections"
          },
          {
            "name": "get_summary"
          },
          {
            "name": "search_wikipedia"
          },
          {
            "name": "summarize_article_for_query"
          },
          {
            "name": "summarize_article_section"
          },
          {
            "name": "test_wikipedia_connectivity"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/wikipedia-mcp.json",
        "upstream": "https://github.com/Rudra-ravi/wikipedia-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/scrapezy",
    "description": "A Model Context Protocol server for Scrapezy that enables AI models to extract structured data fr...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/scrapezy@sha256:7a19e9b36500d94ba48f9497aaa50fc7387e274ef53ca0f6f2c076444ff4b05a",
        "environmentVariables": [
          {
            "name": "SCRAPEZY_API_KEY",
            "value": "{scrapezy.auth_token}",
            "variables": {
              "scrapezy.auth_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Scrapezy/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 10,
        "icon": "https://avatars.githubusercontent.com/u/196929482?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "Scrapezy",
        "prompts": 0,
        "pulls": 2708,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/scrapezy.md",
        "resources": {},
        "source": "https://github.com/Scrapezy/mcp/tree/a8d31506d1f962c384840773e1918a310ec17032",
        "stars": 3,
        "tags": [
          "scrapezy",
          "devops"
        ],
        "title": "Scrapezy",
        "tools": [
          {
            "name": "extract-structured-data"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/scrapezy.json",
        "upstream": "https://github.com/Scrapezy/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/sequentialthinking",
    "description": "Dynamic and reflective problem-solving through thought sequences.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/sequentialthinking@sha256:cd3174b2ecf37738654cf7671fb1b719a225c40a78274817da00c4241f465e5f"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 136643,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/sequentialthinking.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/82064568802e542c3924560aef2cb421b4ce436c/src/sequentialthinking",
        "stars": 28,
        "tags": [
          "mcp",
          "ai"
        ],
        "title": "Sequential Thinking (Reference)",
        "tools": [
          {
            "name": "sequentialthinking"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/sequentialthinking.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/gitlab",
    "description": "MCP Server for the GitLab API, enabling project management, file operations, and more.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/gitlab@sha256:a1b8571a210a3c8b17b288498d287cd1c3512c10519330ea71ca48e559e78917",
        "environmentVariables": [
          {
            "name": "GITLAB_API_URL",
            "value": "{gitlab.url}",
            "variables": {
              "gitlab.url": {
                "format": "string",
                "description": "api url - optional for self-hosted instances"
              }
            }
          },
          {
            "name": "GITLAB_PERSONAL_ACCESS_TOKEN",
            "value": "{gitlab.personal_access_token}",
            "variables": {
              "gitlab.personal_access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/1086321?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 20373,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/gitlab.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 21,
        "tags": [
          "gitlab",
          "devops"
        ],
        "title": "GitLab (Archived)",
        "tools": [
          {
            "name": "create_branch"
          },
          {
            "name": "create_issue"
          },
          {
            "name": "create_merge_request"
          },
          {
            "name": "create_or_update_file"
          },
          {
            "name": "create_repository"
          },
          {
            "name": "fork_repository"
          },
          {
            "name": "get_file_contents"
          },
          {
            "name": "push_files"
          },
          {
            "name": "search_repositories"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/gitlab.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/oxylabs",
    "description": "A Model Context Protocol (MCP) server that enables AI assistants like Claude to seamlessly access...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/oxylabs@sha256:67085d076c5b7c29dd4167754bc4164405f00bfd955529fc8319e1497d24de78",
        "environmentVariables": [
          {
            "name": "OXYLABS_USERNAME",
            "value": "{oxylabs.username}",
            "variables": {
              "oxylabs.username": {
                "format": "string"
              }
            }
          },
          {
            "name": "OXYLABS_PASSWORD",
            "value": "{oxylabs.password}",
            "variables": {
              "oxylabs.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/oxylabs/oxylabs-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 67,
        "icon": "https://avatars.githubusercontent.com/u/43960873?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "oxylabs",
        "prompts": 0,
        "pulls": 2817,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/oxylabs.md",
        "resources": {},
        "source": "https://github.com/oxylabs/oxylabs-mcp/tree/0e738c89335e8e521a5b1b925f048ea075c8235b",
        "stars": 3,
        "tags": [
          "oxylabs",
          "devops"
        ],
        "title": "Oxylabs",
        "tools": [
          {
            "name": "amazon_product_scraper"
          },
          {
            "name": "amazon_search_scraper"
          },
          {
            "name": "google_search_scraper"
          },
          {
            "name": "universal_scraper"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/oxylabs.json",
        "upstream": "https://github.com/oxylabs/oxylabs-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/webflow",
    "description": "Model Context Protocol (MCP) server for the Webflow Data API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/webflow@sha256:20e73bbc57ed58fa4396eefb0e0ee7f2a60c4121521765ffb40d70da60850f13",
        "environmentVariables": [
          {
            "name": "WEBFLOW_TOKEN",
            "value": "{webflow.token}",
            "variables": {
              "webflow.token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/webflow/mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 86,
        "icon": "https://avatars.githubusercontent.com/u/1229663?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "webflow",
        "prompts": 0,
        "pulls": 2501,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/webflow.md",
        "resources": {},
        "source": "https://github.com/slimslenderslacks/mcp-server/tree/ed02aacd106375cfca402b73f8b7efffd4168c1d",
        "tags": [
          "webflow",
          "devops"
        ],
        "title": "Webflow",
        "tools": [
          {
            "name": "collection_fields_create_option"
          },
          {
            "name": "collection_fields_create_reference"
          },
          {
            "name": "collection_fields_create_static"
          },
          {
            "name": "collection_fields_update"
          },
          {
            "name": "collections_create"
          },
          {
            "name": "collections_get"
          },
          {
            "name": "collections_items_create_item"
          },
          {
            "name": "collections_items_create_item_live"
          },
          {
            "name": "collections_items_list_items"
          },
          {
            "name": "collections_items_publish_items"
          },
          {
            "name": "collections_items_update_items"
          },
          {
            "name": "collections_items_update_items_live"
          },
          {
            "name": "collections_list"
          },
          {
            "name": "pages_get_content"
          },
          {
            "name": "pages_get_metadata"
          },
          {
            "name": "pages_list"
          },
          {
            "name": "pages_update_page_settings"
          },
          {
            "name": "pages_update_static_content"
          },
          {
            "name": "sites_get"
          },
          {
            "name": "sites_list"
          },
          {
            "name": "sites_publish"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/webflow.json",
        "upstream": "https://github.com/webflow/mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/descope",
    "description": "The Descope Model Context Protocol (MCP) server provides an interface to interact with Descope's ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/descope@sha256:554b2b490c18c44556b734b34068d6c754657977fd343a1ec047ce977e44ad87",
        "environmentVariables": [
          {
            "name": "DESCOPE_PROJECT_ID",
            "value": "{descope.project_id}",
            "variables": {
              "descope.project_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "DESCOPE_MANAGEMENT_KEY",
            "value": "{descope.management_key}",
            "variables": {
              "descope.management_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/descope-sample-apps/descope-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 25,
        "icon": "https://avatars.githubusercontent.com/u/119703169?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "descope-sample-apps",
        "prompts": 0,
        "pulls": 2236,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/descope.md",
        "resources": {},
        "source": "https://github.com/descope-sample-apps/descope-mcp-server/tree/e983c18dd340924aa40a1c72ab6608b8b0b35ee7",
        "tags": [
          "descope",
          "devops"
        ],
        "title": "Descope",
        "tools": [
          {
            "name": "create-user"
          },
          {
            "name": "invite-user"
          },
          {
            "name": "search-audits"
          },
          {
            "name": "search-users"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/descope.json",
        "upstream": "https://github.com/descope-sample-apps/descope-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/needle-mcp",
    "description": "Production-ready RAG service to search and retrieve data from your documents.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/needle-mcp@sha256:d3fd314f40c306ad12a78f6e9a1cbad35a8aee902ecaf50020416eccb8078ff4",
        "environmentVariables": [
          {
            "name": "NEEDLE_API_KEY",
            "value": "{needle-mcp.api_key}",
            "variables": {
              "needle-mcp.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/needle-ai/needle-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-07-11T18:29:38Z",
        "githubStars": 82,
        "icon": "https://avatars.githubusercontent.com/u/194782563?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "needle-ai",
        "prompts": 0,
        "pulls": 1326,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/needle-mcp.md",
        "resources": {},
        "source": "https://github.com/needle-ai/needle-mcp/tree/96d82632e3c719ffa61dc8f0909a7cc0d185a161",
        "stars": 1,
        "tags": [
          "needle",
          "search",
          "productivity",
          "rag",
          "semantic-search",
          "document-management"
        ],
        "title": "Needle",
        "tools": [
          {
            "name": "needle_add_file"
          },
          {
            "name": "needle_create_collection"
          },
          {
            "name": "needle_get_collection_details"
          },
          {
            "name": "needle_get_collection_stats"
          },
          {
            "name": "needle_list_collections"
          },
          {
            "name": "needle_list_files"
          },
          {
            "name": "needle_search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/needle-mcp.json",
        "upstream": "https://github.com/needle-ai/needle-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/hyperbrowser",
    "description": "A MCP server implementation for hyperbrowser.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/hyperbrowser@sha256:11ed80138c334c419249c79e5f5acda3f4e7052c04f62f54548f00a3b9815140",
        "environmentVariables": [
          {
            "name": "HYPERBROWSER_API_KEY",
            "value": "{hyperbrowser.api_key}",
            "variables": {
              "hyperbrowser.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/hyperbrowserai/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 632,
        "icon": "https://avatars.githubusercontent.com/u/189776885?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "hyperbrowserai",
        "prompts": 0,
        "pulls": 3504,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/hyperbrowser.md",
        "resources": {},
        "source": "https://github.com/hyperbrowserai/mcp/tree/7492e83cf1825b3cf9725bfa25c5086df702599a",
        "stars": 3,
        "tags": [
          "hyperbrowser",
          "devops"
        ],
        "title": "Hyperbrowser",
        "tools": [
          {
            "name": "browser_use_agent"
          },
          {
            "name": "claude_computer_use_agent"
          },
          {
            "name": "crawl_webpages"
          },
          {
            "name": "create_profile"
          },
          {
            "name": "delete_profile"
          },
          {
            "name": "extract_structured_data"
          },
          {
            "name": "list_profiles"
          },
          {
            "name": "openai_computer_use_agent"
          },
          {
            "name": "scrape_webpage"
          },
          {
            "name": "search_with_bing"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/hyperbrowser.json",
        "upstream": "https://github.com/hyperbrowserai/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/iaptic",
    "description": "Model Context Protocol server for interacting with iaptic.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/iaptic@sha256:ed978fc5847131aca695a3dc65f25ed397acdeffc19aa5e3bc53163d2c75f2fd",
        "environmentVariables": [
          {
            "name": "IAPTIC_APP_NAME",
            "value": "{iaptic.app_name}",
            "variables": {
              "iaptic.app_name": {
                "format": "string"
              }
            }
          },
          {
            "name": "IAPTIC_API_KEY",
            "value": "{iaptic.api_key}",
            "variables": {
              "iaptic.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/iaptic/mcp-server-iaptic",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 4,
        "icon": "https://avatars.githubusercontent.com/u/72789805?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "iaptic",
        "prompts": 0,
        "pulls": 2059,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/iaptic.md",
        "resources": {},
        "source": "https://github.com/iaptic/mcp-server-iaptic/tree/210c73ccb12bb61676dbb23302f16a2d408c4f05",
        "tags": [
          "iaptic",
          "devops"
        ],
        "title": "Iaptic",
        "tools": [
          {
            "name": "customer_add_purchase"
          },
          {
            "name": "customer_get"
          },
          {
            "name": "customer_list"
          },
          {
            "name": "customer_subscription"
          },
          {
            "name": "customer_transactions"
          },
          {
            "name": "event_list"
          },
          {
            "name": "iaptic_current_app"
          },
          {
            "name": "iaptic_reset_app"
          },
          {
            "name": "iaptic_switch_app"
          },
          {
            "name": "purchase_get"
          },
          {
            "name": "purchase_list"
          },
          {
            "name": "stats_app"
          },
          {
            "name": "stats_get"
          },
          {
            "name": "stripe_prices"
          },
          {
            "name": "transaction_get"
          },
          {
            "name": "transaction_list"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/iaptic.json",
        "upstream": "https://github.com/iaptic/mcp-server-iaptic"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/resend",
    "description": "Send emails directly from Cursor with this email sending MCP server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/resend@sha256:2a786579214e118992c62875fd81488fee01918b10b06b447beb1acd5824e8ed",
        "environmentVariables": [
          {
            "name": "REPLY_TO_EMAIL_ADDRESSES",
            "value": "{resend.reply_to}",
            "variables": {
              "resend.reply_to": {
                "format": "string",
                "description": "comma separated list of reply to email addresses"
              }
            }
          },
          {
            "name": "SENDER_EMAIL_ADDRESS",
            "value": "{resend.sender}",
            "variables": {
              "resend.sender": {
                "format": "string",
                "description": "sender email address"
              }
            }
          },
          {
            "name": "RESEND_API_KEY",
            "value": "{resend.api_key}",
            "variables": {
              "resend.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/resend/mcp-send-email",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "communication",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 410,
        "icon": "https://avatars.githubusercontent.com/u/109384852?s=200\u0026v=4",
        "license": "",
        "owner": "resend",
        "prompts": 0,
        "pulls": 3825,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/resend.md",
        "resources": {},
        "source": "https://github.com/slimslenderslacks/mcp-send-email/tree/ee47c6dc4776491226fd066380d052e24ca34fd4",
        "stars": 5,
        "tags": [
          "resend",
          "email"
        ],
        "title": "Send emails",
        "tools": [
          {
            "name": "send-email"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/resend.json",
        "upstream": "https://github.com/resend/mcp-send-email"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/markdownify",
    "description": "A Model Context Protocol server for converting almost anything to Markdown.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/markdownify@sha256:310ee6fb7120f9da1318e58addf888686d816e255e2a8c43996f35e494812a6c",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{markdownify.paths|volume|into}",
            "variables": {
              "markdownify.paths": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/zcaceres/markdownify-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-08-25T06:19:52Z",
        "githubStars": 2227,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "zcaceres",
        "prompts": 0,
        "pulls": 3950,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/markdownify.md",
        "resources": {},
        "source": "https://github.com/zcaceres/markdownify-mcp/tree/4add350f4643365d31f7b3385ab1b65d37f97f1e",
        "stars": 1,
        "tags": [
          "productivity",
          "markdown",
          "conversion",
          "pdf",
          "docx",
          "pptx",
          "xlsx",
          "html",
          "audio",
          "youtube"
        ],
        "title": "Markdownify",
        "tools": [
          {
            "name": "audio-to-markdown"
          },
          {
            "name": "bing-search-to-markdown"
          },
          {
            "name": "docx-to-markdown"
          },
          {
            "name": "get-markdown-file"
          },
          {
            "name": "image-to-markdown"
          },
          {
            "name": "pdf-to-markdown"
          },
          {
            "name": "pptx-to-markdown"
          },
          {
            "name": "webpage-to-markdown"
          },
          {
            "name": "xlsx-to-markdown"
          },
          {
            "name": "youtube-to-markdown"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/markdownify.json",
        "upstream": "https://github.com/zcaceres/markdownify-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/pref-editor",
    "description": "Pref Editor is a tool for viewing and editing Android app preferences during development.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/pref-editor@sha256:8b515464425127b8272d253d0b77a1835f18c18df26673d53ce0e7527cf7fd66"
      }
    ],
    "repository": {
      "url": "https://github.com/charlesmuchene/pref-editor-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-07-01T14:14:18Z",
        "githubStars": 2,
        "icon": "https://raw.githubusercontent.com/charlesmuchene/pref-editor-mcp-server/refs/heads/main/logo.png",
        "license": "Apache License 2.0",
        "owner": "charlesmuchene",
        "prompts": 0,
        "pulls": 1259,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/pref-editor.md",
        "resources": {},
        "source": "https://github.com/charlesmuchene/pref-editor-mcp-server/tree/8a795f068654c4d2eb67c1138a72438fe2911e35",
        "tags": [
          "android preferences",
          "android development",
          "preferences-datastore",
          "shared-preferences"
        ],
        "title": "Pref Editor",
        "tools": [
          {
            "name": "add_preference"
          },
          {
            "name": "change_preference"
          },
          {
            "name": "delete_preference"
          },
          {
            "name": "devices"
          },
          {
            "name": "list_apps"
          },
          {
            "name": "list_files"
          },
          {
            "name": "read_preferences"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/pref-editor.json",
        "upstream": "https://github.com/charlesmuchene/pref-editor-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/neo4j-data-modeling",
    "description": "MCP server that assists in creating, validating and visualizing graph data models.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/neo4j-data-modeling@sha256:18d70dafe9e0ee13f6eaf44ccc5992668ead2f8d908bccb10de5213bf99d5109",
        "environmentVariables": [
          {
            "name": "NEO4J_TRANSPORT",
            "value": "{neo4j-data-modeling.transport}",
            "variables": {
              "neo4j-data-modeling.transport": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_HOST",
            "value": "{neo4j-data-modeling.server_host}",
            "variables": {
              "neo4j-data-modeling.server_host": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PORT",
            "value": "{neo4j-data-modeling.server_port}",
            "variables": {
              "neo4j-data-modeling.server_port": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_PATH",
            "value": "{neo4j-data-modeling.server_path}",
            "variables": {
              "neo4j-data-modeling.server_path": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
            "value": "{neo4j-data-modeling.server_allow_origins}",
            "variables": {
              "neo4j-data-modeling.server_allow_origins": {
                "format": "string"
              }
            }
          },
          {
            "name": "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
            "value": "{neo4j-data-modeling.server_allowed_hosts}",
            "variables": {
              "neo4j-data-modeling.server_allowed_hosts": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/neo4j-contrib/mcp-neo4j",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-09T15:35:27Z",
        "githubStars": 772,
        "icon": "https://avatars.githubusercontent.com/u/916372?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "neo4j-contrib",
        "prompts": 0,
        "pulls": 994,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/neo4j-data-modeling.md",
        "resources": {},
        "source": "https://github.com/neo4j-contrib/mcp-neo4j/tree/7bf941bb6d9d8cf95d91fd1209b2bf24fdc609d2/servers/mcp-neo4j-data-modeling",
        "tags": [
          "neo4j-data-modeling",
          "devops"
        ],
        "title": "Neo4j Data Modeling",
        "tools": [
          {
            "name": "export_to_arrows_json"
          },
          {
            "name": "get_constraints_cypher_queries"
          },
          {
            "name": "get_example_data_model"
          },
          {
            "name": "get_mermaid_config_str"
          },
          {
            "name": "get_node_cypher_ingest_query"
          },
          {
            "name": "get_relationship_cypher_ingest_query"
          },
          {
            "name": "list_example_data_models"
          },
          {
            "name": "load_from_arrows_json"
          },
          {
            "name": "validate_data_model"
          },
          {
            "name": "validate_node"
          },
          {
            "name": "validate_relationship"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/neo4j-data-modeling.json",
        "upstream": "https://github.com/neo4j-contrib/mcp-neo4j"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/novita",
    "description": "Seamless interaction with Novita AI platform resources.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/novita@sha256:ddc904348d9e0be0fd4572840a41b398e95b23a64d7e1d58c9d6275eb7d67899",
        "environmentVariables": [
          {
            "name": "NOVITA_API_KEY"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/novitalabs/novita-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 12,
        "icon": "https://avatars.githubusercontent.com/u/145963681?v=4",
        "license": "MIT License",
        "owner": "novitalabs",
        "prompts": 0,
        "pulls": 1326,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/novita.md",
        "resources": {},
        "source": "https://github.com/novitalabs/novita-mcp-server/tree/64efc99e8b05d05ddd1e3513f5f21f6aa236e82d",
        "tags": [
          "novita",
          "ai"
        ],
        "title": "Novita",
        "tools": [
          {
            "name": "create-container-registry-auth"
          },
          {
            "name": "create-gpu-instance"
          },
          {
            "name": "create-network-storage"
          },
          {
            "name": "create-template"
          },
          {
            "name": "delete-container-registry-auth"
          },
          {
            "name": "delete-gpu-instance"
          },
          {
            "name": "delete-network-storage"
          },
          {
            "name": "delete-template"
          },
          {
            "name": "get-gpu-instance"
          },
          {
            "name": "get-template"
          },
          {
            "name": "list-clusters"
          },
          {
            "name": "list-container-registry-auths"
          },
          {
            "name": "list-gpu-instances"
          },
          {
            "name": "list-network-storage"
          },
          {
            "name": "list-products"
          },
          {
            "name": "list-templates"
          },
          {
            "name": "restart-gpu-instance"
          },
          {
            "name": "start-gpu-instance"
          },
          {
            "name": "stop-gpu-instance"
          },
          {
            "name": "update-network-storage"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/novita.json",
        "upstream": "https://github.com/novitalabs/novita-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/openbnb-airbnb",
    "description": "MCP Server for searching Airbnb and get listing details.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/openbnb-airbnb@sha256:352f5716e418f7d94e1bcd5c6846d7940b3250255b78ab1acb7e0adbd8f89331"
      }
    ],
    "repository": {
      "url": "https://github.com/openbnb-org/mcp-server-airbnb",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-07-01T12:14:18Z",
        "githubStars": 322,
        "icon": "https://avatars.githubusercontent.com/u/202564951?v=4",
        "license": "MIT License",
        "owner": "openbnb-org",
        "prompts": 0,
        "pulls": 4842,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/openbnb-airbnb.md",
        "resources": {},
        "source": "https://github.com/openbnb-org/mcp-server-airbnb/tree/57d9d6cdabe813c4d4ab57f90481490aaf8b1b0a",
        "stars": 1,
        "tags": [
          "airbnb",
          "openbnb"
        ],
        "title": "Airbnb Search",
        "tools": [
          {
            "name": "airbnb_listing_details"
          },
          {
            "name": "airbnb_search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/openbnb-airbnb.json",
        "upstream": "https://github.com/openbnb-org/mcp-server-airbnb"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/SQLite",
    "description": "Database interaction and business intelligence capabilities.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/sqlite@sha256:efbc05ccace18df122f26b674bd1730c76ece716551df2b3961d519909c34696",
        "packageArguments": [
          {
            "type": "named",
            "name": "--db-path"
          },
          {
            "type": "positional",
            "value": "/mcp/db.sqlite"
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "mcp-sqlite:/mcp"
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/48680494?v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 16187,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/SQLite.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306/src/sqlite",
        "stars": 15,
        "tags": [
          "sqlite",
          "database"
        ],
        "title": "SQLite (Archived)",
        "tools": [
          {
            "name": "append_insight"
          },
          {
            "name": "create_table"
          },
          {
            "name": "describe_table"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "read_query"
          },
          {
            "name": "write_query"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/SQLite.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/couchbase",
    "description": "Couchbase is a distributed document database with a powerful search engine and in-built operation...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/couchbase@sha256:96856e24d4b5e66325f0e95fbf3783766d698e6686cb4506b5c2ec0f884de1f7",
        "environmentVariables": [
          {
            "name": "CB_CONNECTION_STRING",
            "value": "{couchbase.cb_connection_string}",
            "variables": {
              "couchbase.cb_connection_string": {
                "format": "string",
                "description": "Connection string for the Couchbase cluster."
              }
            }
          },
          {
            "name": "CB_USERNAME",
            "value": "{couchbase.cb_username}",
            "variables": {
              "couchbase.cb_username": {
                "format": "string",
                "description": "Username for the Couchbase cluster with access to the bucket."
              }
            }
          },
          {
            "name": "CB_BUCKET_NAME",
            "value": "{couchbase.cb_bucket_name}",
            "variables": {
              "couchbase.cb_bucket_name": {
                "format": "string",
                "description": "Bucket in the Couchbase cluster to use for the MCP server."
              }
            }
          },
          {
            "name": "CB_MCP_READ_ONLY_QUERY_MODE",
            "value": "{couchbase.cb_mcp_read_only_query_mode}",
            "variables": {
              "couchbase.cb_mcp_read_only_query_mode": {
                "format": "string",
                "description": "Setting to \"true\" (default) enables read-only query mode while running SQL++ queries."
              }
            }
          },
          {
            "name": "CB_PASSWORD",
            "value": "{couchbase.cb_password}",
            "variables": {
              "couchbase.cb_password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-07-29T14:05:27Z",
        "githubStars": 22,
        "icon": "https://avatars.githubusercontent.com/u/605755?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "Couchbase-Ecosystem",
        "prompts": 0,
        "pulls": 2193,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/couchbase.md",
        "resources": {},
        "source": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase/tree/28620e91315a734cbe7873a1d2a61505952a1ff2",
        "stars": 2,
        "tags": [
          "couchbase",
          "database"
        ],
        "title": "Couchbase",
        "tools": [
          {
            "name": "delete_document_by_id"
          },
          {
            "name": "get_buckets_in_cluster"
          },
          {
            "name": "get_collections_in_scope"
          },
          {
            "name": "get_document_by_id"
          },
          {
            "name": "get_schema_for_collection"
          },
          {
            "name": "get_scopes_and_collections_in_bucket"
          },
          {
            "name": "get_scopes_in_bucket"
          },
          {
            "name": "get_server_configuration_status"
          },
          {
            "name": "run_sql_plus_plus_query"
          },
          {
            "name": "test_cluster_connection"
          },
          {
            "name": "upsert_document_by_id"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/couchbase.json",
        "upstream": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mcp-hackernews",
    "description": "A Model Context Protocol (MCP) server that provides access to Hacker News stories, comments, and ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/hackernews-mcp@sha256:2e5c5cc89490848e1b5c0dc677f0dd5076dd09984be699e230cad387fb5f582f"
      }
    ],
    "repository": {
      "url": "https://github.com/AayushBahukhandi/hackernews-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-09-15T16:12:49Z",
        "githubStars": 0,
        "icon": "https://news.ycombinator.com/y18.svg",
        "license": "",
        "owner": "AayushBahukhandi",
        "prompts": 0,
        "pulls": 23816,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mcp-hackernews.md",
        "resources": {},
        "source": "https://github.com/AayushBahukhandi/hackernews-mcp/tree/b3d01052c2bc1f01d890b4e5d0d22a55fe5dadcd",
        "stars": 1,
        "tags": [
          "search"
        ],
        "title": "Hackernews mcp",
        "tools": [
          {
            "name": "get_stories"
          },
          {
            "name": "get_story_info"
          },
          {
            "name": "get_user_info"
          },
          {
            "name": "search_stories"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mcp-hackernews.json",
        "upstream": "https://github.com/AayushBahukhandi/hackernews-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/singlestore",
    "description": "MCP server for interacting with SingleStore Management API and services.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/singlestore@sha256:84f5ce412167ad1783f9877cb69139fa871972ef99542994b9423059615eb9b7",
        "environmentVariables": [
          {
            "name": "MCP_API_KEY",
            "value": "{singlestore.mcp_api_key}",
            "variables": {
              "singlestore.mcp_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/singlestore-labs/mcp-server-singlestore",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-07-09T16:39:19Z",
        "githubStars": 26,
        "icon": "https://avatars.githubusercontent.com/u/79943160?v=4",
        "license": "MIT License",
        "owner": "singlestore-labs",
        "prompts": 0,
        "pulls": 1232,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/singlestore.md",
        "resources": {},
        "source": "https://github.com/singlestore-labs/mcp-server-singlestore/tree/1fd9c0c391e2b5c56d330a1578ab2897f550c38e",
        "tags": [
          "singlestore",
          "database"
        ],
        "title": "Singlestore",
        "tools": [
          {
            "name": "create_job_from_notebook"
          },
          {
            "name": "create_notebook_file"
          },
          {
            "name": "create_starter_workspace"
          },
          {
            "name": "delete_job"
          },
          {
            "name": "get_job"
          },
          {
            "name": "get_user_info"
          },
          {
            "name": "list_regions"
          },
          {
            "name": "list_sharedtier_regions"
          },
          {
            "name": "list_starter_workspaces"
          },
          {
            "name": "organization_info"
          },
          {
            "name": "resume_workspace"
          },
          {
            "name": "run_sql"
          },
          {
            "name": "terminate_starter_workspace"
          },
          {
            "name": "upload_notebook_file"
          },
          {
            "name": "workspace_groups_info"
          },
          {
            "name": "workspaces_info"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/singlestore.json",
        "upstream": "https://github.com/singlestore-labs/mcp-server-singlestore"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/suzieq",
    "description": "MCP Server to interact with a SuzieQ network observability instance via its REST API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/suzieq-mcp@sha256:ea9f7d06053dc97bd1af1cc24636c3020ece91746323b6229560bf3d0a457200",
        "environmentVariables": [
          {
            "name": "SUZIEQ_API_ENDPOINT",
            "value": "{suzieq.api_endpoint}",
            "variables": {
              "suzieq.api_endpoint": {
                "format": "string"
              }
            }
          },
          {
            "name": "SUZIEQ_API_KEY",
            "value": "{suzieq.api_key}",
            "variables": {
              "suzieq.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/PovedaAqui/suzieq-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-06-11T14:18:50Z",
        "githubStars": 3,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "PovedaAqui",
        "prompts": 0,
        "pulls": 1127,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/suzieq.md",
        "resources": {},
        "source": "https://github.com/PovedaAqui/suzieq-mcp/tree/42e74a941237099a36761840d2cc8b5f30a03a5c",
        "stars": 1,
        "tags": [
          "observability"
        ],
        "title": "Suzieq MCP",
        "tools": [
          {
            "name": "run_suzieq_show"
          },
          {
            "name": "run_suzieq_summarize"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/suzieq.json",
        "upstream": "https://github.com/PovedaAqui/suzieq-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/audiense-insights",
    "description": "Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Cl...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/audiense-insights@sha256:064623a07a6b1d4282a94cb338ca5872db1326dd09591f8f6b708d15326bf962",
        "environmentVariables": [
          {
            "name": "AUDIENSE_CLIENT_ID",
            "value": "{audiense-insights.client_id}",
            "variables": {
              "audiense-insights.client_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "AUDIENSE_CLIENT_SECRET",
            "value": "{audiense-insights.client_secret}",
            "variables": {
              "audiense-insights.client_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "TWITTER_BEARER_TOKEN",
            "value": "{audiense-insights.twitter_bearer_token}",
            "variables": {
              "audiense-insights.twitter_bearer_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/AudienseCo/mcp-audiense-insights",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 17,
        "icon": "https://avatars.githubusercontent.com/u/2454008?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "AudienseCo",
        "prompts": 0,
        "pulls": 2544,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/audiense-insights.md",
        "resources": {},
        "source": "https://github.com/AudienseCo/mcp-audiense-insights/tree/f18ffa6ddf944769f3c95944281f752bf6369fa5",
        "tags": [
          "audiense-insights",
          "devops"
        ],
        "title": "Audiense Insights",
        "tools": [
          {
            "name": "compare-audience-influencers"
          },
          {
            "name": "get-audience-content"
          },
          {
            "name": "get-audience-insights"
          },
          {
            "name": "get-baselines"
          },
          {
            "name": "get-categories"
          },
          {
            "name": "get-report-info"
          },
          {
            "name": "get-reports"
          },
          {
            "name": "report-summary"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/audiense-insights.json",
        "upstream": "https://github.com/AudienseCo/mcp-audiense-insights"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/dynatrace-mcp-server",
    "description": "This MCP Server allows interaction with the Dynatrace observability platform, brining real-time o...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/dynatrace-mcp-server@sha256:101536db9b2538162dbb1566b96b10bbb513b70442785a97155d5376344de0ec",
        "environmentVariables": [
          {
            "name": "DT_ENVIRONMENT",
            "value": "{dynatrace-mcp-server.url}",
            "variables": {
              "dynatrace-mcp-server.url": {
                "format": "string"
              }
            }
          },
          {
            "name": "OAUTH_CLIENT_ID",
            "value": "{dynatrace-mcp-server.oauth_client_id}",
            "variables": {
              "dynatrace-mcp-server.oauth_client_id": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "OAUTH_CLIENT_SECRET",
            "value": "{dynatrace-mcp-server.oauth_client_secret}",
            "variables": {
              "dynatrace-mcp-server.oauth_client_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/dynatrace-oss/dynatrace-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "monitoring",
        "dateAdded": "2025-08-11T20:20:11Z",
        "githubStars": 167,
        "icon": "https://avatars.githubusercontent.com/u/58178984?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "dynatrace-oss",
        "prompts": 0,
        "pulls": 7901,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/dynatrace-mcp-server.md",
        "resources": {},
        "source": "https://github.com/dynatrace-oss/dynatrace-mcp/tree/e1b9fcf382515c51e2c60fc6442b97bebc641b44",
        "tags": [
          "Dynatrace",
          "Observability",
          "Monitoring"
        ],
        "title": "Dynatrace MCP Server",
        "tools": [
          {
            "name": "chat_with_davis_copilot"
          },
          {
            "name": "create_workflow_for_notification"
          },
          {
            "name": "execute_dql"
          },
          {
            "name": "explain_dql_in_natural_language"
          },
          {
            "name": "find_entity_by_name"
          },
          {
            "name": "generate_dql_from_natural_language"
          },
          {
            "name": "get_entity_details"
          },
          {
            "name": "get_environment_info"
          },
          {
            "name": "get_kubernetes_events"
          },
          {
            "name": "get_logs_for_entity"
          },
          {
            "name": "get_ownership"
          },
          {
            "name": "list_problems"
          },
          {
            "name": "list_vulnerabilities"
          },
          {
            "name": "make_workflow_public"
          },
          {
            "name": "send_slack_message"
          },
          {
            "name": "verify_dql"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/dynatrace-mcp-server.json",
        "upstream": "https://github.com/dynatrace-oss/dynatrace-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/firewalla-mcp-server",
    "description": "Real-time network monitoring, security analysis, and firewall management through 28 specialized t...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/firewalla-mcp-server@sha256:af186f868759476978d884704a2736dd070c207424f23fe3f7d46a8bd385c2ed",
        "environmentVariables": [
          {
            "name": "FIREWALLA_MSP_ID",
            "value": "{firewalla-mcp-server.msp_id}",
            "variables": {
              "firewalla-mcp-server.msp_id": {
                "format": "string",
                "description": "Your Firewalla MSP domain (e.g., yourdomain.firewalla.net)"
              }
            }
          },
          {
            "name": "FIREWALLA_BOX_ID",
            "value": "{firewalla-mcp-server.box_id}",
            "variables": {
              "firewalla-mcp-server.box_id": {
                "format": "string",
                "description": "Your Firewalla Box Global ID"
              }
            }
          },
          {
            "name": "MCP_WAVE0_ENABLED",
            "value": "true"
          },
          {
            "name": "MCP_READ_ONLY_MODE",
            "value": "false"
          },
          {
            "name": "MCP_CACHE_ENABLED",
            "value": "true"
          },
          {
            "name": "MCP_DEBUG_MODE",
            "value": "false"
          },
          {
            "name": "NODE_ENV",
            "value": "production"
          },
          {
            "name": "LOG_LEVEL",
            "value": "info"
          },
          {
            "name": "MCP_CACHE_TTL",
            "value": "300"
          },
          {
            "name": "MCP_RATE_LIMIT_WINDOW",
            "value": "60000"
          },
          {
            "name": "MCP_RATE_LIMIT_MAX_REQUESTS",
            "value": "100"
          },
          {
            "name": "FIREWALLA_MSP_TOKEN",
            "value": "{firewalla-mcp-server.msp_token}",
            "variables": {
              "firewalla-mcp-server.msp_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/amittell/firewalla-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "security",
        "dateAdded": "2025-07-29T14:05:27Z",
        "githubStars": 8,
        "icon": "https://avatars.githubusercontent.com/u/16805913?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "amittell",
        "prompts": 0,
        "pulls": 1179,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/firewalla-mcp-server.md",
        "resources": {},
        "source": "https://github.com/amittell/firewalla-mcp-server/tree/d6f8c6ac25701a7eb69c3dfdda312817979329e9",
        "tags": [
          "firewall",
          "security",
          "monitoring",
          "network",
          "threat-detection"
        ],
        "title": "Firewalla MCP Server",
        "tools": [
          {
            "name": "create_target_list"
          },
          {
            "name": "delete_target_list"
          },
          {
            "name": "get_active_alarms"
          },
          {
            "name": "get_alarm_trends"
          },
          {
            "name": "get_bandwidth_usage"
          },
          {
            "name": "get_boxes"
          },
          {
            "name": "get_device_status"
          },
          {
            "name": "get_flow_data"
          },
          {
            "name": "get_flow_insights"
          },
          {
            "name": "get_network_rules"
          },
          {
            "name": "get_network_rules_summary"
          },
          {
            "name": "get_offline_devices"
          },
          {
            "name": "get_recent_flow_activity"
          },
          {
            "name": "get_rule_trends"
          },
          {
            "name": "get_simple_statistics"
          },
          {
            "name": "get_specific_alarm"
          },
          {
            "name": "get_specific_target_list"
          },
          {
            "name": "get_statistics_by_box"
          },
          {
            "name": "get_statistics_by_region"
          },
          {
            "name": "get_target_lists"
          },
          {
            "name": "pause_rule"
          },
          {
            "name": "resume_rule"
          },
          {
            "name": "search_alarms"
          },
          {
            "name": "search_devices"
          },
          {
            "name": "search_flows"
          },
          {
            "name": "search_rules"
          },
          {
            "name": "search_target_lists"
          },
          {
            "name": "update_target_list"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/firewalla-mcp-server.json",
        "upstream": "https://github.com/amittell/firewalla-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/schogini-mcp-image-border",
    "description": "This adds a border to an image and returns base64 encoded image.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/schogini_mcp_image_border@sha256:aadb75058ed149533d43a5011cf61f3daaed9787acdfe4082093c6ddc494d061"
      }
    ],
    "repository": {
      "url": "https://github.com/schogini/schogini_mcp_image_border",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-07-11T18:29:38Z",
        "githubStars": 0,
        "icon": "https://d1yei2z3i6k35z.cloudfront.net/7429984/669a56c4ca69e_SCHOGINI-LOGO-ROUND.png",
        "license": "",
        "owner": "schogini",
        "prompts": 0,
        "pulls": 1039,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/schogini-mcp-image-border.md",
        "resources": {},
        "source": "https://github.com/schogini/schogini_mcp_image_border/tree/fc8aa52cec0f5ac9aeff2e57c16ffecd21bb12f7",
        "tags": [
          "productivity"
        ],
        "title": "Schogini MCP Image Border",
        "tools": [
          {
            "name": "add-two-numbers"
          },
          {
            "name": "image-border"
          },
          {
            "name": "image-meta"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/schogini-mcp-image-border.json",
        "upstream": "https://github.com/schogini/schogini_mcp_image_border"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/schemacrawler-ai",
    "description": "The SchemaCrawler AI MCP Server enables natural language interaction with your database schema us...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/schemacrawler-ai@sha256:529bcf70c268d5763dc817effcdd4561c6f9c53a08dc6884bee35b5df1659941",
        "environmentVariables": [
          {
            "name": "SCHCRWLR_JDBC_URL",
            "value": "{schemacrawler-ai.url_connection.jdbc_url}",
            "variables": {
              "schemacrawler-ai.url_connection.jdbc_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_SERVER",
            "value": "{schemacrawler-ai.server_connection.server}",
            "variables": {
              "schemacrawler-ai.server_connection.server": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_HOST",
            "value": "{schemacrawler-ai.server_connection.host}",
            "variables": {
              "schemacrawler-ai.server_connection.host": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_PORT",
            "value": "{schemacrawler-ai.server_connection.port}",
            "variables": {
              "schemacrawler-ai.server_connection.port": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_DATABASE",
            "value": "{schemacrawler-ai.server_connection.database}",
            "variables": {
              "schemacrawler-ai.server_connection.database": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_INFO_LEVEL",
            "value": "{schemacrawler-ai.general.info_level}",
            "variables": {
              "schemacrawler-ai.general.info_level": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_LOG_LEVEL",
            "value": "{schemacrawler-ai.general.log_level}",
            "variables": {
              "schemacrawler-ai.general.log_level": {
                "format": "string"
              }
            }
          },
          {
            "name": "SCHCRWLR_DATABASE_USER",
            "value": "{schemacrawler-ai.database_user}",
            "variables": {
              "schemacrawler-ai.database_user": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "SCHCRWLR_DATABASE_PASSWORD",
            "value": "{schemacrawler-ai.database_password}",
            "variables": {
              "schemacrawler-ai.database_password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{schemacrawler-ai.volume.host_share}:/share",
            "variables": {
              "schemacrawler-ai.volume.host_share": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/schemacrawler/SchemaCrawler-AI",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 4,
        "icon": "https://avatars.githubusercontent.com/u/58572?v=4",
        "license": "Other",
        "owner": "schemacrawler",
        "prompts": 0,
        "pulls": 769,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/schemacrawler-ai.md",
        "resources": {},
        "source": "https://github.com/schemacrawler/SchemaCrawler-AI/tree/2fadcfcb3c7eb141dcfa323494b7cde148b090d9",
        "stars": 1,
        "tags": [
          "ai",
          "database"
        ],
        "title": "SchemaCrawler AI",
        "tools": [
          {
            "name": "describe-routines"
          },
          {
            "name": "describe-tables"
          },
          {
            "name": "get-schemacrawler-version"
          },
          {
            "name": "lint"
          },
          {
            "name": "list"
          },
          {
            "name": "list-across-tables"
          },
          {
            "name": "server-information"
          },
          {
            "name": "table-sample"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/schemacrawler-ai.json",
        "upstream": "https://github.com/schemacrawler/SchemaCrawler-AI"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mongodb",
    "description": "A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mongodb@sha256:20f2487cac18091a6efa14b29561d73fc8b4e04541818a6d00feeceb64d4cd5a",
        "environmentVariables": [
          {
            "name": "MDB_MCP_CONNECTION_STRING",
            "value": "{mongodb.connection_string}",
            "variables": {
              "mongodb.connection_string": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/mongodb-js/mongodb-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-05-15T20:04:34Z",
        "githubStars": 777,
        "icon": "https://avatars.githubusercontent.com/u/11214950?v=4",
        "license": "Apache License 2.0",
        "owner": "mongodb-js",
        "prompts": 0,
        "pulls": 25033,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mongodb.md",
        "resources": {},
        "source": "https://github.com/mongodb-js/mongodb-mcp-server/tree/4368cb3fc5442ad20a3a74760ebcd4d6ea323cc7",
        "stars": 6,
        "tags": [
          "mongodb",
          "database"
        ],
        "title": "MongoDB",
        "tools": [
          {
            "name": "aggregate"
          },
          {
            "name": "collection-indexes"
          },
          {
            "name": "collection-schema"
          },
          {
            "name": "collection-storage-size"
          },
          {
            "name": "connect"
          },
          {
            "name": "count"
          },
          {
            "name": "create-collection"
          },
          {
            "name": "create-index"
          },
          {
            "name": "db-stats"
          },
          {
            "name": "delete-many"
          },
          {
            "name": "drop-collection"
          },
          {
            "name": "drop-database"
          },
          {
            "name": "drop-index"
          },
          {
            "name": "explain"
          },
          {
            "name": "export"
          },
          {
            "name": "find"
          },
          {
            "name": "insert-many"
          },
          {
            "name": "list-collections"
          },
          {
            "name": "list-databases"
          },
          {
            "name": "mongodb-logs"
          },
          {
            "name": "rename-collection"
          },
          {
            "name": "update-many"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mongodb.json",
        "upstream": "https://github.com/mongodb-js/mongodb-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/apify-mcp-server",
    "description": "Apify is the world's largest marketplace of tools for web scraping, data extraction, and web auto...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/apify-mcp-server@sha256:cafa23b6f977b8e5b1ad51a31465d393f4166e9316edb1cb3ed8472572467b5d",
        "environmentVariables": [
          {
            "name": "TOOLS",
            "value": "{apify-mcp-server.tools}",
            "variables": {
              "apify-mcp-server.tools": {
                "format": "string",
                "description": "Comma-separated list of tools to enable. Can be either a tool category, a specific tool, or an Apify Actor. For example: \"actors,docs,apify/rag-web-browser\". For more details visit https://mcp.apify.com."
              }
            }
          },
          {
            "name": "APIFY_TOKEN",
            "value": "{apify-mcp-server.apify_token}",
            "variables": {
              "apify-mcp-server.apify_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/apify/actors-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-08-22T06:21:38Z",
        "githubStars": 522,
        "icon": "https://avatars.githubusercontent.com/u/24586296?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "apify",
        "prompts": 0,
        "pulls": 3504,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/apify-mcp-server.md",
        "resources": {},
        "source": "https://github.com/apify/actors-mcp-server/tree/4e3cf9de2ea4896665a200b07f2e785881a2da9b",
        "tags": [
          "productivity",
          "search",
          "mcp",
          "automation",
          "web scraping",
          "api",
          "data extraction"
        ],
        "title": "Apify MCP Server",
        "tools": [
          {
            "name": "apify-slash-rag-web-browser"
          },
          {
            "name": "call-actor"
          },
          {
            "name": "fetch-actor-details"
          },
          {
            "name": "fetch-apify-docs"
          },
          {
            "name": "get-actor-output"
          },
          {
            "name": "search-actors"
          },
          {
            "name": "search-apify-docs"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/apify-mcp-server.json",
        "upstream": "https://github.com/apify/actors-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aws-cdk-mcp-server",
    "description": "AWS Cloud Development Kit (CDK) best practices, infrastructure as code patterns, and security com...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aws-cdk-mcp-server@sha256:73b7ecb48adbc9dd3b170c859c4a11d03b6167590d4b0dee5396e6b61aa1a0eb"
      }
    ],
    "repository": {
      "url": "https://github.com/awslabs/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 6893,
        "icon": "https://avatars.githubusercontent.com/u/3299148?v=4",
        "license": "Apache License 2.0",
        "owner": "awslabs",
        "prompts": 0,
        "pulls": 11470,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aws-cdk-mcp-server.md",
        "resources": {},
        "source": "https://github.com/awslabs/mcp/tree/96f3e569e2a054d31ccbc452bda89580265e8dae/src/cdk-mcp-server",
        "tags": [
          "aws-cdk-mcp-server",
          "devops"
        ],
        "title": "AWS CDK",
        "tools": [
          {
            "name": "CDKGeneralGuidance"
          },
          {
            "name": "CheckCDKNagSuppressions"
          },
          {
            "name": "ExplainCDKNagRule"
          },
          {
            "name": "GenerateBedrockAgentSchema"
          },
          {
            "name": "GetAwsSolutionsConstructPattern"
          },
          {
            "name": "LambdaLayerDocumentationProvider"
          },
          {
            "name": "SearchGenAICDKConstructs"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aws-cdk-mcp-server.json",
        "upstream": "https://github.com/awslabs/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aws-diagram",
    "description": "Seamlessly create diagrams using the Python diagrams package DSL. This server allows you to gener...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aws-diagram@sha256:9f7eac66272a36761ab1864723696f9092c822903a0cdfc6ae3d5a0325457cc9"
      }
    ],
    "repository": {
      "url": "https://github.com/awslabs/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 6893,
        "icon": "https://avatars.githubusercontent.com/u/3299148?v=4",
        "license": "Apache License 2.0",
        "owner": "awslabs",
        "prompts": 0,
        "pulls": 15184,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aws-diagram.md",
        "resources": {},
        "source": "https://github.com/awslabs/mcp/tree/96f3e569e2a054d31ccbc452bda89580265e8dae/src/aws-diagram-mcp-server",
        "stars": 1,
        "tags": [
          "aws-diagram",
          "devops"
        ],
        "title": "AWS Diagram",
        "tools": [
          {
            "name": "generate_diagram"
          },
          {
            "name": "get_diagram_examples"
          },
          {
            "name": "list_icons"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aws-diagram.json",
        "upstream": "https://github.com/awslabs/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/box",
    "description": "An MCP server capable of interacting with the Box API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/box@sha256:4db7963505c2ea80c0f8c867e7062f74d96c839687f1b79cedb3836a74498656",
        "environmentVariables": [
          {
            "name": "BOX_CLIENT_ID",
            "value": "{box.client_id}",
            "variables": {
              "box.client_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "BOX_CLIENT_SECRET",
            "value": "{box.client_secret}",
            "variables": {
              "box.client_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/dgageot/mcp-server-box",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/8659759?s=200\u0026v=4",
        "license": "",
        "owner": "dgageot",
        "prompts": 0,
        "pulls": 2918,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/box.md",
        "resources": {},
        "source": "https://github.com/dgageot/mcp-server-box/tree/ec5b6680117610028d4320c9463b66309d95452d",
        "stars": 3,
        "tags": [
          "box",
          "devops"
        ],
        "title": "Box",
        "tools": [
          {
            "name": "box_ai_extract_data"
          },
          {
            "name": "box_ask_ai_tool"
          },
          {
            "name": "box_ask_ai_tool_multi_file"
          },
          {
            "name": "box_authorize_app_tool"
          },
          {
            "name": "box_download_file_tool"
          },
          {
            "name": "box_list_folder_content_by_folder_id"
          },
          {
            "name": "box_manage_folder_tool"
          },
          {
            "name": "box_read_tool"
          },
          {
            "name": "box_search_folder_by_name"
          },
          {
            "name": "box_search_tool"
          },
          {
            "name": "box_upload_file_tool"
          },
          {
            "name": "box_who_am_i"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/box.json",
        "upstream": "https://github.com/dgageot/mcp-server-box"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/github",
    "description": "Tools for interacting with the GitHub API, enabling file operations, repository management, searc...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/github@sha256:89fd71b6f2dd098de0d7517c1899b7fe90590d3193e253991d61a800b041bfd4",
        "environmentVariables": [
          {
            "name": "GITHUB_PERSONAL_ACCESS_TOKEN",
            "value": "{github.personal_access_token}",
            "variables": {
              "github.personal_access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 57827,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/github.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 20,
        "tags": [
          "github",
          "devops"
        ],
        "title": "GitHub (Archived)",
        "tools": [
          {
            "name": "add_issue_comment"
          },
          {
            "name": "create_branch"
          },
          {
            "name": "create_issue"
          },
          {
            "name": "create_or_update_file"
          },
          {
            "name": "create_pull_request"
          },
          {
            "name": "create_pull_request_review"
          },
          {
            "name": "create_repository"
          },
          {
            "name": "fork_repository"
          },
          {
            "name": "get_file_contents"
          },
          {
            "name": "get_issue"
          },
          {
            "name": "get_pull_request"
          },
          {
            "name": "get_pull_request_comments"
          },
          {
            "name": "get_pull_request_files"
          },
          {
            "name": "get_pull_request_reviews"
          },
          {
            "name": "get_pull_request_status"
          },
          {
            "name": "list_commits"
          },
          {
            "name": "list_issues"
          },
          {
            "name": "list_pull_requests"
          },
          {
            "name": "merge_pull_request"
          },
          {
            "name": "push_files"
          },
          {
            "name": "search_code"
          },
          {
            "name": "search_issues"
          },
          {
            "name": "search_repositories"
          },
          {
            "name": "search_users"
          },
          {
            "name": "update_issue"
          },
          {
            "name": "update_pull_request_branch"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/github.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/ramparts",
    "description": "A comprehensive security scanner for MCP servers with YARA rules and static analysis capabilities.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/ramparts@sha256:1ddf4303800edb4c521a5275ba8de8054ac895677624dd20aed98480db00c494",
        "environmentVariables": [
          {
            "name": "RUST_LOG",
            "value": "info"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/getjavelin/ramparts",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "security",
        "dateAdded": "2025-08-20T06:26:55Z",
        "githubStars": 72,
        "icon": "https://raw.githubusercontent.com/getjavelin/ramparts/main/assets/ramparts.png",
        "license": "Apache License 2.0",
        "owner": "getjavelin",
        "prompts": 0,
        "pulls": 990,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/ramparts.md",
        "resources": {},
        "source": "https://github.com/getjavelin/ramparts/tree/f206d33e6fe746aae1d58d00c56073c546189900",
        "tags": [
          "security",
          "vulnerability-scanning",
          "mcp-server-analysis",
          "yara-rules"
        ],
        "title": "Ramparts MCP Security Scanner",
        "tools": [
          {
            "name": "scan"
          },
          {
            "name": "scan-config"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/ramparts.json",
        "upstream": "https://github.com/getjavelin/ramparts"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/husqvarna-automower",
    "description": "MCP Server for huqsvarna automower.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/husqvarna-automower@sha256:05efbdf5e90f0b65f841dd8b3c735b48ccf21a60c410fc49b3e7551a2d7c583b",
        "environmentVariables": [
          {
            "name": "HUSQVARNA_CLIENT_ID",
            "value": "{husqvarna-automower.client_id}",
            "variables": {
              "husqvarna-automower.client_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "HUSQVARNA_CLIENT_SECRET",
            "value": "{husqvarna.client.secret}",
            "variables": {
              "husqvarna.client.secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/jeanlaurent/mcp-husqvarna-automower",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 1,
        "icon": "https://avatars.githubusercontent.com/u/17142631?v=4",
        "license": "",
        "owner": "jeanlaurent",
        "prompts": 0,
        "pulls": 1633,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/husqvarna-automower.md",
        "resources": {},
        "source": "https://github.com/jeanlaurent/mcp-husqvarna-automower/tree/288d2c3a10e650308ec03863258c3a72ae08578b",
        "tags": [
          "husqvarna-automower",
          "devops"
        ],
        "title": "Husqvarna Automower",
        "tools": [
          {
            "name": "Husqvarna Automowers Status"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/husqvarna-automower.json",
        "upstream": "https://github.com/jeanlaurent/mcp-husqvarna-automower"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/postman",
    "description": "Postman's MCP server connects AI agents, assistants, and chatbots directly to your APIs on Postma...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/postman@sha256:68f4e71187ddb5862f935de3f80e9f48a200c571057d67eb1faf65d2af7a8eed",
        "environmentVariables": [
          {
            "name": "POSTMAN_API_KEY",
            "value": "{postman.postman-api-key}",
            "variables": {
              "postman.postman-api-key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/postmanlabs/postman-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-11T17:03:42Z",
        "githubStars": 77,
        "icon": "https://voyager.postman.com/logo/postman-logo-icon-orange.svg",
        "license": "Apache License 2.0",
        "owner": "postmanlabs",
        "prompts": 0,
        "pulls": 3488,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/postman.md",
        "resources": {},
        "source": "https://github.com/postmanlabs/postman-mcp-server/tree/1ee7e1b3ea09058c3cf40f80abb72c171c6f2401",
        "stars": 1,
        "tags": [
          "devops"
        ],
        "title": "Postman MCP server",
        "tools": [
          {
            "name": "createCollection"
          },
          {
            "name": "createCollectionRequest"
          },
          {
            "name": "createCollectionResponse"
          },
          {
            "name": "createEnvironment"
          },
          {
            "name": "createMock"
          },
          {
            "name": "createSpec"
          },
          {
            "name": "createSpecFile"
          },
          {
            "name": "createWorkspace"
          },
          {
            "name": "duplicateCollection"
          },
          {
            "name": "generateCollection"
          },
          {
            "name": "generateSpecFromCollection"
          },
          {
            "name": "getAllSpecs"
          },
          {
            "name": "getAuthenticatedUser"
          },
          {
            "name": "getCollection"
          },
          {
            "name": "getCollections"
          },
          {
            "name": "getEnvironment"
          },
          {
            "name": "getEnvironments"
          },
          {
            "name": "getGeneratedCollectionSpecs"
          },
          {
            "name": "getMock"
          },
          {
            "name": "getMocks"
          },
          {
            "name": "getSpec"
          },
          {
            "name": "getSpecCollections"
          },
          {
            "name": "getSpecDefinition"
          },
          {
            "name": "getSpecFile"
          },
          {
            "name": "getSpecFiles"
          },
          {
            "name": "getStatusOfAnAsyncApiTask"
          },
          {
            "name": "getTaggedEntities"
          },
          {
            "name": "getWorkspace"
          },
          {
            "name": "getWorkspaces"
          },
          {
            "name": "publishMock"
          },
          {
            "name": "putCollection"
          },
          {
            "name": "putEnvironment"
          },
          {
            "name": "syncCollectionWithSpec"
          },
          {
            "name": "syncSpecWithCollection"
          },
          {
            "name": "updateMock"
          },
          {
            "name": "updateSpecFile"
          },
          {
            "name": "updateSpecProperties"
          },
          {
            "name": "updateWorkspace"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/postman.json",
        "upstream": "https://github.com/postmanlabs/postman-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/sentry",
    "description": "A Model Context Protocol server for retrieving and analyzing issues from Sentry.io. This server p...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/sentry@sha256:f38467297a1ed273009e0ad85bd0fc9f4ce44578114be0f349d6333c5000558b",
        "environmentVariables": [
          {
            "name": "SENTRY_AUTH_TOKEN",
            "value": "{sentry.auth_token}",
            "variables": {
              "sentry.auth_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ],
        "packageArguments": [
          {
            "type": "named",
            "name": "--auth-token"
          },
          {
            "type": "positional",
            "value": "$SENTRY_AUTH_TOKEN"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/1396951?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 4647,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/sentry.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306/src/sentry",
        "stars": 5,
        "tags": [
          "sentry",
          "devops"
        ],
        "title": "Sentry (Archived)",
        "tools": [
          {
            "name": "get_sentry_issue"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/sentry.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/charmhealth-mcp-server",
    "description": "An MCP server for CharmHealth EHR that allows LLMs and MCP clients to interact with patient recor...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/charmhealth-mcp-server@sha256:909d932e846f59bdb33067a3c6f79b51097a8326289fed896ff1ce2ceb668360",
        "environmentVariables": [
          {
            "name": "CHARMHEALTH_BASE_URL",
            "value": "{charmhealth-mcp-server.charmhealth_base_url}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_base_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "CHARMHEALTH_CLIENT_ID",
            "value": "{charmhealth-mcp-server.charmhealth_client_id}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_client_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "CHARMHEALTH_CLIENT_SECRET",
            "value": "{charmhealth-mcp-server.charmhealth_client_secret}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_client_secret": {
                "format": "string"
              }
            }
          },
          {
            "name": "CHARMHEALTH_REDIRECT_URI",
            "value": "{charmhealth-mcp-server.charmhealth_redirect_uri}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_redirect_uri": {
                "format": "string"
              }
            }
          },
          {
            "name": "CHARMHEALTH_TOKEN_URL",
            "value": "{charmhealth-mcp-server.charmhealth_token_url}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_token_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "CHARMHEALTH_API_KEY",
            "value": "{charmhealth-mcp-server.charmhealth_api_key}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "CHARMHEALTH_REFRESH_TOKEN",
            "value": "{charmhealth-mcp-server.charmhealth_refresh_token}",
            "variables": {
              "charmhealth-mcp-server.charmhealth_refresh_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/CharmHealth/charm-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-04T19:31:40Z",
        "githubStars": 2,
        "icon": "https://raw.githubusercontent.com/CharmHealth/charm-mcp-server/d7928f1ed514f59656e36693749dffea52ab04c2/Charm_icon.png",
        "license": "MIT License",
        "owner": "CharmHealth",
        "prompts": 0,
        "pulls": 659,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/charmhealth-mcp-server.md",
        "resources": {},
        "source": "https://github.com/CharmHealth/charm-mcp-server/tree/1c52c486a2425c6dffc666096acfb8fb39e9016b",
        "tags": [
          "charmhealth",
          "ehr",
          "medical",
          "productivity"
        ],
        "title": "CharmHealth MCP Server",
        "tools": [
          {
            "name": "findPatients"
          },
          {
            "name": "getPracticeInfo"
          },
          {
            "name": "manageAppointments"
          },
          {
            "name": "manageEncounter"
          },
          {
            "name": "managePatient"
          },
          {
            "name": "managePatientAllergies"
          },
          {
            "name": "managePatientDiagnoses"
          },
          {
            "name": "managePatientDrugs"
          },
          {
            "name": "managePatientFiles"
          },
          {
            "name": "managePatientLabs"
          },
          {
            "name": "managePatientNotes"
          },
          {
            "name": "managePatientRecalls"
          },
          {
            "name": "managePatientVitals"
          },
          {
            "name": "reviewPatientHistory"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/charmhealth-mcp-server.json",
        "upstream": "https://github.com/CharmHealth/charm-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/minecraft-wiki",
    "description": "A MCP Server for browsing the official Minecraft Wiki!.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/minecraft-wiki@sha256:b191b5c6725ba90954bd86956afd1555d44fd58a1984f9e96a7657e029ad57fd"
      }
    ],
    "repository": {
      "url": "https://github.com/L3-N0X/Minecraft-Wiki-MCP",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "games",
        "dateAdded": "2025-06-05T06:09:26Z",
        "githubStars": 6,
        "icon": "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/minecraft.svg",
        "license": "",
        "owner": "L3-N0X",
        "prompts": 0,
        "pulls": 2278,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/minecraft-wiki.md",
        "resources": {},
        "source": "https://github.com/L3-N0X/Minecraft-Wiki-MCP/tree/7a753f50eab0ddf1f743d1cb1ab7edb7a9737ad2",
        "stars": 1,
        "tags": [
          "games",
          "minecraft",
          "search"
        ],
        "title": "Minecraft Wiki",
        "tools": [
          {
            "name": "MinecraftWiki_getCategoriesForPage"
          },
          {
            "name": "MinecraftWiki_getPageContent"
          },
          {
            "name": "MinecraftWiki_getPageSection"
          },
          {
            "name": "MinecraftWiki_getPageSummary"
          },
          {
            "name": "MinecraftWiki_getSectionsInPage"
          },
          {
            "name": "MinecraftWiki_listAllCategories"
          },
          {
            "name": "MinecraftWiki_listCategoryMembers"
          },
          {
            "name": "MinecraftWiki_resolveRedirect"
          },
          {
            "name": "MinecraftWiki_searchWiki"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/minecraft-wiki.json",
        "upstream": "https://github.com/L3-N0X/Minecraft-Wiki-MCP"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/okta-mcp-fctr",
    "description": "Secure Okta identity and access management via Model Context Protocol (MCP). Access Okta users, g...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/okta-mcp-fctr@sha256:c0a95e22c7037aa14f7d476658b4930fcad152bc5836ed2cbe1cf731f50061d4",
        "environmentVariables": [
          {
            "name": "OKTA_CLIENT_ORGURL",
            "value": "{okta-mcp-fctr.client_orgurl}",
            "variables": {
              "okta-mcp-fctr.client_orgurl": {
                "format": "string",
                "description": "Okta organization URL (e.g., https://dev-123456.okta.com)"
              }
            }
          },
          {
            "name": "LOG_LEVEL",
            "value": "{okta-mcp-fctr.log_level}",
            "variables": {
              "okta-mcp-fctr.log_level": {
                "format": "string",
                "description": "Logging level for server output"
              }
            }
          },
          {
            "name": "OKTA_CONCURRENT_LIMIT",
            "value": "{okta-mcp-fctr.concurrent_limit}",
            "variables": {
              "okta-mcp-fctr.concurrent_limit": {
                "format": "string",
                "description": "Maximum concurrent requests to Okta API"
              }
            }
          },
          {
            "name": "OKTA_API_TOKEN",
            "value": "{okta-mcp-fctr.api_token}",
            "variables": {
              "okta-mcp-fctr.api_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/fctr-id/okta-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-08-01T06:21:29Z",
        "githubStars": 34,
        "icon": "https://avatars.githubusercontent.com/u/198773578?v=4",
        "license": "Apache License 2.0",
        "owner": "fctr-id",
        "prompts": 0,
        "pulls": 973,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/okta-mcp-fctr.md",
        "resources": {},
        "source": "https://github.com/fctr-id/okta-mcp-server/tree/39b4151a2ece178640fc19ccbb045346ad761e53",
        "tags": [
          "ai",
          "okta",
          "identity",
          "access-management",
          "security",
          "authentication",
          "audit",
          "compliance",
          "enterprise"
        ],
        "title": "Okta MCP Server",
        "tools": [
          {
            "name": "analyze_login_risk"
          },
          {
            "name": "analyze_user_app_access"
          },
          {
            "name": "get_current_time"
          },
          {
            "name": "get_okta_application"
          },
          {
            "name": "get_okta_event_logs"
          },
          {
            "name": "get_okta_group"
          },
          {
            "name": "get_okta_policy_rule"
          },
          {
            "name": "get_okta_user"
          },
          {
            "name": "list_okta_application_groups"
          },
          {
            "name": "list_okta_application_users"
          },
          {
            "name": "list_okta_applications"
          },
          {
            "name": "list_okta_group_users"
          },
          {
            "name": "list_okta_groups"
          },
          {
            "name": "list_okta_network_zones"
          },
          {
            "name": "list_okta_policy_rules"
          },
          {
            "name": "list_okta_user_applications"
          },
          {
            "name": "list_okta_user_factors"
          },
          {
            "name": "list_okta_user_groups"
          },
          {
            "name": "list_okta_users"
          },
          {
            "name": "parse_relative_time"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/okta-mcp-fctr.json",
        "upstream": "https://github.com/fctr-id/okta-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/openapi",
    "description": "Fetch, validate, and generate code or curl from any OpenAPI or Swagger spec - all from a single URL.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/openapi@sha256:26234065b6a786e69088b9b22ec4f9130572704664211e76e9b0887c388186e5",
        "environmentVariables": [
          {
            "name": "MODE",
            "value": "{openapi.mode}",
            "variables": {
              "openapi.mode": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/lepoco/openapi.client",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-15T16:12:49Z",
        "githubStars": 12,
        "icon": "https://raw.githubusercontent.com/lepoco/openapi.client/refs/heads/main/build/nuget.png",
        "license": "MIT License",
        "owner": "lepoco",
        "prompts": 0,
        "pulls": 1084,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/openapi.md",
        "resources": {},
        "source": "https://github.com/lepoco/openapi.client/tree/30bc5dfc95c789c0dadecf4816dcbf641b49aa3b",
        "tags": [
          "productivity"
        ],
        "title": "OpenAPI Toolkit for MCP",
        "tools": [
          {
            "name": "create_csharp_snippet"
          },
          {
            "name": "generate_curl_command"
          },
          {
            "name": "get_known_responses"
          },
          {
            "name": "get_list_of_operations"
          },
          {
            "name": "validate_document"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/openapi.json",
        "upstream": "https://github.com/lepoco/openapi.client"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/ref",
    "description": "Ref powerful search tool connets your coding tools with documentation context. It includes an up-...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/ref-tools-mcp@sha256:2058bbd780890c8732090bc626652923d937a943df0d8de3faf4f2a8003cf728",
        "environmentVariables": [
          {
            "name": "REF_API_KEY",
            "value": "{ref.REF_API_KEY}",
            "variables": {
              "ref.REF_API_KEY": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ref-tools/ref-tools-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-09-12T18:02:36Z",
        "githubStars": 718,
        "icon": "https://avatars.githubusercontent.com/u/210568548?v=4",
        "license": "MIT License",
        "owner": "ref-tools",
        "prompts": 0,
        "pulls": 2292,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/ref.md",
        "resources": {},
        "source": "https://github.com/ref-tools/ref-tools-mcp/tree/ead8aa898957be338908e9d80064b035530ee674",
        "stars": 2,
        "tags": [
          "devops",
          "documentation"
        ],
        "title": "Ref - up-to-date docs",
        "tools": [
          {
            "name": "ref_read_url"
          },
          {
            "name": "ref_search_documentation"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/ref.json",
        "upstream": "https://github.com/ref-tools/ref-tools-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/supadata",
    "description": "Official Supadata MCP Server - Adds powerful video \u0026 web scraping to Cursor, Claude and any other...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "ghcr.io/supadata-ai/mcp@sha256:064f49acddbaa4f86080116d6be7332de75f26a409d3e2f1954d87dca1521e2e",
        "environmentVariables": [
          {
            "name": "SUPADATA_API_KEY",
            "value": "{supadata.api_key}",
            "variables": {
              "supadata.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/supadata-ai/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-08-11T20:20:11Z",
        "githubStars": 16,
        "icon": "https://avatars.githubusercontent.com/u/194430777?s=48\u0026v=4",
        "license": "MIT License",
        "owner": "supadata-ai",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/supadata.md",
        "resources": {},
        "source": "https://github.com/supadata-ai/mcp/tree/373484ea837e6022151116499618674b761865ea",
        "tags": [
          "supadata",
          "transcript",
          "scraping",
          "youtube",
          "tiktok",
          "twitter",
          "whisper"
        ],
        "title": "Supadata",
        "tools": [
          {
            "name": "supadata_check_crawl_status"
          },
          {
            "name": "supadata_check_transcript_status"
          },
          {
            "name": "supadata_crawl"
          },
          {
            "name": "supadata_map"
          },
          {
            "name": "supadata_scrape"
          },
          {
            "name": "supadata_transcript"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/supadata.json",
        "upstream": "https://github.com/supadata-ai/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/text-to-graphql",
    "description": "Transform natural language queries into GraphQL queries using an AI agent. Provides schema manage...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/text-to-graphql@sha256:d260ee59e2fe08b444fea26fe935109cf0e6336c1677256c0274bdaa84e69997",
        "environmentVariables": [
          {
            "name": "OPENAI_API_KEY",
            "value": "{text-to-graphql.openai_api_key}",
            "variables": {
              "text-to-graphql.openai_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "GRAPHQL_ENDPOINT",
            "value": "{text-to-graphql.graphql_endpoint}",
            "variables": {
              "text-to-graphql.graphql_endpoint": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "GRAPHQL_API_KEY",
            "value": "{text-to-graphql.graphql_api_key}",
            "variables": {
              "text-to-graphql.graphql_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Arize-ai/text-to-graphql-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-07-08T13:38:25Z",
        "githubStars": 20,
        "icon": "https://upload.wikimedia.org/wikipedia/commons/1/17/GraphQL_Logo.svg",
        "license": "Other",
        "owner": "Arize-ai",
        "prompts": 0,
        "pulls": 1219,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/text-to-graphql.md",
        "resources": {},
        "source": "https://github.com/Arize-ai/text-to-graphql-mcp/tree/03a88ab0d9d99c3da110e12326803497b094fc56",
        "tags": [
          "graphql",
          "ai",
          "natural-language",
          "api",
          "query-generation"
        ],
        "title": "Text-to-GraphQL",
        "tools": [
          {
            "name": "execute_graphql_query"
          },
          {
            "name": "generate_graphql_query"
          },
          {
            "name": "get_query_examples"
          },
          {
            "name": "get_query_history"
          },
          {
            "name": "validate_graphql_query"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/text-to-graphql.json",
        "upstream": "https://github.com/Arize-ai/text-to-graphql-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/vuln-nist-mcp-server",
    "description": "This MCP server exposes tools to query the NVD/CVE REST API and return formatted text results sui...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/vuln-nist-mcp-server@sha256:e5025e66c0d28a4fb4b00f4762b91309f2538ab5ade9a9d2ea10cfacf5c04645"
      }
    ],
    "repository": {
      "url": "https://github.com/HaroldFinchIFT/vuln-nist-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-09-15T16:12:49Z",
        "githubStars": 4,
        "icon": "https://raw.githubusercontent.com/HaroldFinchIFT/vuln-nist-mcp-server/refs/heads/main/nvd_logo.png",
        "license": "MIT License",
        "owner": "HaroldFinchIFT",
        "prompts": 0,
        "pulls": 667,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/vuln-nist-mcp-server.md",
        "resources": {},
        "source": "https://github.com/HaroldFinchIFT/vuln-nist-mcp-server/tree/71a45579c7dfcbdd0e639dfb6640801371bf07b6",
        "tags": [
          "search",
          "cybersecurity",
          "vulns",
          "cves"
        ],
        "title": "Vuln nist mcp server",
        "tools": [
          {
            "name": "cve_change_history"
          },
          {
            "name": "cves_by_cpe"
          },
          {
            "name": "get_cve_by_id"
          },
          {
            "name": "get_temporal_context"
          },
          {
            "name": "kevs_between"
          },
          {
            "name": "search_cves"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/vuln-nist-mcp-server.json",
        "upstream": "https://github.com/HaroldFinchIFT/vuln-nist-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/docker",
    "description": "Use the Docker CLI.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": ""
      }
    ],
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:04:34Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/5429470?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "docker",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/docker.md",
        "resources": {},
        "source": "",
        "tags": [
          "docker"
        ],
        "title": "Docker",
        "tools": [
          {
            "name": "docker"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/docker.json",
        "upstream": ""
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/osp_marketing_tools",
    "description": "A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' co...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/osp_marketing_tools@sha256:34b72f4cc3d274a9b975bca22adb0f664055a1ca2c74a9417c8149512e772eaa"
      }
    ],
    "repository": {
      "url": "https://github.com/open-strategy-partners/osp_marketing_tools",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 247,
        "icon": "https://avatars.githubusercontent.com/u/47528973?s=200\u0026v=4",
        "license": "Creative Commons Attribution Share Alike 4.0 International",
        "owner": "open-strategy-partners",
        "prompts": 0,
        "pulls": 3770,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/osp_marketing_tools.md",
        "resources": {},
        "source": "https://github.com/open-strategy-partners/osp_marketing_tools/tree/83f55198c4d4e7b315565f00792f63373ff9cc67",
        "stars": 2,
        "tags": [
          "osp_marketing_tools",
          "devops"
        ],
        "title": "OSP Marketing Tools",
        "tools": [
          {
            "name": "get_editing_codes"
          },
          {
            "name": "get_meta_guide"
          },
          {
            "name": "get_on_page_seo_guide"
          },
          {
            "name": "get_value_map_positioning_guide"
          },
          {
            "name": "get_writing_guide"
          },
          {
            "name": "health_check"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/osp_marketing_tools.json",
        "upstream": "https://github.com/open-strategy-partners/osp_marketing_tools"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/unreal-engine-mcp-server",
    "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to control Unreal ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/unreal-engine-mcp-server@sha256:36733a308a2fda33edcea935f7436cea9abc7ffb1a7c45a699cd11cf9c1bfa7a",
        "environmentVariables": [
          {
            "name": "UE_HOST",
            "value": "{unreal-engine-mcp-server.ue_host}",
            "variables": {
              "unreal-engine-mcp-server.ue_host": {
                "format": "string",
                "description": "Unreal Engine host address. Use: host.docker.internal for local UE on Windows/Mac Docker, 127.0.0.1 for Linux without Docker, or actual IP address (e.g., 192.168.1.100) for remote UE"
              }
            }
          },
          {
            "name": "UE_RC_HTTP_PORT",
            "value": "{unreal-engine-mcp-server.ue_rc_http_port}",
            "variables": {
              "unreal-engine-mcp-server.ue_rc_http_port": {
                "format": "string",
                "description": "Remote Control HTTP port"
              }
            }
          },
          {
            "name": "UE_RC_WS_PORT",
            "value": "{unreal-engine-mcp-server.ue_rc_ws_port}",
            "variables": {
              "unreal-engine-mcp-server.ue_rc_ws_port": {
                "format": "string",
                "description": "Remote Control WebSocket port"
              }
            }
          },
          {
            "name": "LOG_LEVEL",
            "value": "{unreal-engine-mcp-server.log_level}",
            "variables": {
              "unreal-engine-mcp-server.log_level": {
                "format": "string",
                "description": "Logging level"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ChiR24/Unreal_mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "games",
        "dateAdded": "2025-09-15T16:12:49Z",
        "githubStars": 14,
        "icon": "https://raw.githubusercontent.com/ChiR24/Unreal_mcp/main/Public/icon.png",
        "license": "MIT License",
        "owner": "ChiR24",
        "prompts": 0,
        "pulls": 1424,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/unreal-engine-mcp-server.md",
        "resources": {},
        "source": "https://github.com/ChiR24/Unreal_mcp/tree/a24dafda619d7b0fb9bef37d9c715c22d1b1e899",
        "stars": 2,
        "tags": [
          "games",
          "unreal-engine",
          "game-development",
          "automation",
          "editor"
        ],
        "title": "Unreal Engine MCP Server",
        "tools": [
          {
            "name": "animation_physics"
          },
          {
            "name": "build_environment"
          },
          {
            "name": "console_command"
          },
          {
            "name": "control_actor"
          },
          {
            "name": "control_editor"
          },
          {
            "name": "create_effect"
          },
          {
            "name": "inspect"
          },
          {
            "name": "manage_asset"
          },
          {
            "name": "manage_blueprint"
          },
          {
            "name": "manage_level"
          },
          {
            "name": "manage_rc"
          },
          {
            "name": "manage_sequence"
          },
          {
            "name": "system_control"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/unreal-engine-mcp-server.json",
        "upstream": "https://github.com/ChiR24/Unreal_mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/context7",
    "description": "Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/context7@sha256:1174e6a29634a83b2be93ac1fefabf63265f498c02c72201fe3464e687dd8836",
        "environmentVariables": [
          {
            "name": "MCP_TRANSPORT",
            "value": "stdio"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/upstash/context7",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 35647,
        "icon": "https://avatars.githubusercontent.com/u/74989412?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "upstash",
        "prompts": 0,
        "pulls": 139371,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/context7.md",
        "resources": {},
        "source": "https://github.com/upstash/context7/tree/d2083b92a79ec02579e75e2fac6548c057b8c0a8",
        "stars": 15,
        "tags": [
          "context7",
          "devops"
        ],
        "title": "Context7",
        "tools": [
          {
            "name": "get-library-docs"
          },
          {
            "name": "resolve-library-id"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/context7.json",
        "upstream": "https://github.com/upstash/context7"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/perplexity-ask",
    "description": "Connector for Perplexity API, to enable real-time, web-wide research.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/perplexity-ask@sha256:7816f45a6f266ad30a21d96c69749f88dd15552c0d1db0ce38704156a49ee538",
        "environmentVariables": [
          {
            "name": "PERPLEXITY_API_KEY",
            "value": "{perplexity-ask.api_key}",
            "variables": {
              "perplexity-ask.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ppl-ai/modelcontextprotocol",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 1739,
        "icon": "https://avatars.githubusercontent.com/u/110299016?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "perplexityai",
        "prompts": 0,
        "pulls": 27732,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/perplexity-ask.md",
        "resources": {},
        "source": "https://github.com/ppl-ai/modelcontextprotocol/tree/f0a927c250e04b389ff5c34f6a2a85ad625668e8",
        "stars": 14,
        "tags": [
          "perplexity-ask",
          "devops"
        ],
        "title": "Perplexity",
        "tools": [
          {
            "name": "perplexity_ask"
          },
          {
            "name": "perplexity_reason"
          },
          {
            "name": "perplexity_research"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/perplexity-ask.json",
        "upstream": "https://github.com/ppl-ai/modelcontextprotocol"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/bitrefill",
    "description": "A Model Context Protocol Server connector for Bitrefill public API, to enable AI agents to search...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/bitrefill@sha256:612bbf82394ab4974ee0f39aba38f48aed61a9cb06adab0f3fce1b648d8ade16",
        "environmentVariables": [
          {
            "name": "BITREFILL_API_ID",
            "value": "{bitrefill.api_id}",
            "variables": {
              "bitrefill.api_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "BITREFILL_API_SECRET",
            "value": "{bitrefill.api_secret}",
            "variables": {
              "bitrefill.api_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/bitrefill/bitrefill-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 6,
        "icon": "https://avatars.githubusercontent.com/u/10897174?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "bitrefill",
        "prompts": 0,
        "pulls": 2358,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/bitrefill.md",
        "resources": {},
        "source": "https://github.com/bitrefill/bitrefill-mcp-server/tree/c7e486505ee35756f667193d2cea540d9d53bedb",
        "tags": [
          "bitrefill",
          "devops"
        ],
        "title": "Bitrefill",
        "tools": [
          {
            "name": "categories"
          },
          {
            "name": "create_invoice"
          },
          {
            "name": "detail"
          },
          {
            "name": "get_account_balance"
          },
          {
            "name": "get_invoice"
          },
          {
            "name": "get_invoices"
          },
          {
            "name": "get_order"
          },
          {
            "name": "get_orders"
          },
          {
            "name": "pay_invoice"
          },
          {
            "name": "ping"
          },
          {
            "name": "search"
          },
          {
            "name": "unseal_order"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/bitrefill.json",
        "upstream": "https://github.com/bitrefill/bitrefill-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/kong",
    "description": "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assista...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/kong@sha256:7988d6e1b0bf6af8a1062358693f6e5cd4ed5019bc4eca553753c6ab40f285c7",
        "environmentVariables": [
          {
            "name": "KONNECT_REGION",
            "value": "{kong.region}",
            "variables": {
              "kong.region": {
                "format": "string"
              }
            }
          },
          {
            "name": "KONNECT_ACCESS_TOKEN",
            "value": "{kong.access_token}",
            "variables": {
              "kong.access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Kong/mcp-konnect",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 38,
        "icon": "https://avatars.githubusercontent.com/u/962416?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "Kong",
        "prompts": 0,
        "pulls": 2475,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/kong.md",
        "resources": {},
        "source": "https://github.com/Kong/mcp-konnect/tree/1710e9d575c58b0426085756f3796fd46e9db076",
        "tags": [
          "kong",
          "devops",
          "service-mesh"
        ],
        "title": "Kong Konnect",
        "tools": [
          {
            "name": "check_control_plane_group_membership"
          },
          {
            "name": "get_consumer_requests"
          },
          {
            "name": "get_control_plane"
          },
          {
            "name": "list_consumers"
          },
          {
            "name": "list_control_plane_group_memberships"
          },
          {
            "name": "list_control_planes"
          },
          {
            "name": "list_plugins"
          },
          {
            "name": "list_routes"
          },
          {
            "name": "list_services"
          },
          {
            "name": "query_api_requests"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/kong.json",
        "upstream": "https://github.com/Kong/mcp-konnect"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/quantconnect",
    "description": "The QuantConnect MCP Server is a bridge for AIs (such as Claude and OpenAI o3 Pro) to interact wi...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/quantconnect@sha256:39b2c063f71fb391d90ed103afc4fc8c492eeb662250e22bdcd29c960d82accd",
        "environmentVariables": [
          {
            "name": "QUANTCONNECT_USER_ID",
            "value": "{quantconnect.quantconnectuserid}",
            "variables": {
              "quantconnect.quantconnectuserid": {
                "format": "string"
              }
            }
          },
          {
            "name": "QUANTCONNECT_API_TOKEN",
            "value": "{quantconnect.quantconnectapitoken}",
            "variables": {
              "quantconnect.quantconnectapitoken": {
                "format": "string"
              }
            }
          },
          {
            "name": "AGENT_NAME",
            "value": "MCP Server"
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/QuantConnect/mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "finance",
        "dateAdded": "2025-09-17T06:19:29Z",
        "githubStars": 46,
        "icon": "https://avatars.githubusercontent.com/u/3912814?v=4",
        "license": "Apache License 2.0",
        "owner": "QuantConnect",
        "prompts": 0,
        "pulls": 523,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/quantconnect.md",
        "resources": {},
        "source": "https://github.com/QuantConnect/mcp-server/tree/3a656b0897adb401fb27b0cfe6be1570da03920f",
        "stars": 1,
        "tags": [
          "finance"
        ],
        "title": "QuantConnect MCP Server",
        "tools": [
          {
            "name": "abort_optimization"
          },
          {
            "name": "authorize_connection"
          },
          {
            "name": "broadcast_live_command"
          },
          {
            "name": "check_initialization_errors"
          },
          {
            "name": "check_syntax"
          },
          {
            "name": "complete_code"
          },
          {
            "name": "create_backtest"
          },
          {
            "name": "create_compile"
          },
          {
            "name": "create_file"
          },
          {
            "name": "create_live_algorithm"
          },
          {
            "name": "create_live_command"
          },
          {
            "name": "create_optimization"
          },
          {
            "name": "create_project"
          },
          {
            "name": "create_project_collaborator"
          },
          {
            "name": "delete_backtest"
          },
          {
            "name": "delete_file"
          },
          {
            "name": "delete_object"
          },
          {
            "name": "delete_optimization"
          },
          {
            "name": "delete_project"
          },
          {
            "name": "delete_project_collaborator"
          },
          {
            "name": "enhance_error_message"
          },
          {
            "name": "estimate_optimization_time"
          },
          {
            "name": "liquidate_live_algorithm"
          },
          {
            "name": "list_backtests"
          },
          {
            "name": "list_live_algorithms"
          },
          {
            "name": "list_object_store_files"
          },
          {
            "name": "list_optimizations"
          },
          {
            "name": "list_projects"
          },
          {
            "name": "lock_project_with_collaborators"
          },
          {
            "name": "patch_file"
          },
          {
            "name": "read_account"
          },
          {
            "name": "read_backtest"
          },
          {
            "name": "read_backtest_chart"
          },
          {
            "name": "read_backtest_insights"
          },
          {
            "name": "read_backtest_orders"
          },
          {
            "name": "read_compile"
          },
          {
            "name": "read_file"
          },
          {
            "name": "read_latest_mcp_server_version"
          },
          {
            "name": "read_lean_versions"
          },
          {
            "name": "read_live_algorithm"
          },
          {
            "name": "read_live_chart"
          },
          {
            "name": "read_live_insights"
          },
          {
            "name": "read_live_logs"
          },
          {
            "name": "read_live_orders"
          },
          {
            "name": "read_live_portfolio"
          },
          {
            "name": "read_mcp_server_version"
          },
          {
            "name": "read_object_properties"
          },
          {
            "name": "read_object_store_file_download_url"
          },
          {
            "name": "read_object_store_file_job_id"
          },
          {
            "name": "read_optimization"
          },
          {
            "name": "read_project"
          },
          {
            "name": "read_project_collaborators"
          },
          {
            "name": "read_project_nodes"
          },
          {
            "name": "search_quantconnect"
          },
          {
            "name": "stop_live_algorithm"
          },
          {
            "name": "update_backtest"
          },
          {
            "name": "update_code_to_pep8"
          },
          {
            "name": "update_file_contents"
          },
          {
            "name": "update_file_name"
          },
          {
            "name": "update_optimization"
          },
          {
            "name": "update_project"
          },
          {
            "name": "update_project_collaborator"
          },
          {
            "name": "update_project_nodes"
          },
          {
            "name": "upload_object"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/quantconnect.json",
        "upstream": "https://github.com/QuantConnect/mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/securenote-link-mcp-server",
    "description": "SecureNote.link MCP Server - allowing AI agents to securely share sensitive information through e...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/securenote-link-mcp-server@sha256:b5df8f065d823407427869203386d4310b3b799d2907aa06cbabc33750aeb2fe"
      }
    ],
    "repository": {
      "url": "https://github.com/jackalterman/securenote-link-MCP-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "communication",
        "dateAdded": "2025-07-08T13:38:25Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/5723207?v=5",
        "license": "",
        "owner": "jackalterman",
        "prompts": 0,
        "pulls": 1299,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/securenote-link-mcp-server.md",
        "resources": {},
        "source": "https://github.com/jackalterman/securenote-link-MCP-server/tree/d2ed33f372e3c85047f1c9c85154d20503b1ddc7",
        "stars": 2,
        "tags": [
          "communication"
        ],
        "title": "Securenote.link mcp server",
        "tools": [
          {
            "name": "check_api_health"
          },
          {
            "name": "get_instructions"
          },
          {
            "name": "retrieve_and_decrypt_secret"
          },
          {
            "name": "send_secure_note"
          },
          {
            "name": "send_secure_note_return_api_url_and_key"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/securenote-link-mcp-server.json",
        "upstream": "https://github.com/jackalterman/securenote-link-MCP-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/sonarqube",
    "description": "Interact with SonarQube Cloud, Server and Community build over the web API. Analyze code to ident...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/sonarqube@sha256:e225d39d611fd2dac19fea2b99010ed4d9cb66a3bafad52ba592745cb00626ff",
        "environmentVariables": [
          {
            "name": "SONARQUBE_URL",
            "value": "{sonarqube.url}",
            "variables": {
              "sonarqube.url": {
                "format": "string",
                "description": "URL of the SonarQube instance, to provide only for SonarQube Server or Community Build"
              }
            }
          },
          {
            "name": "SONARQUBE_ORG",
            "value": "{sonarqube.org}",
            "variables": {
              "sonarqube.org": {
                "format": "string",
                "description": "Organization key for SonarQube Cloud, not required for SonarQube Server or Community Build"
              }
            }
          },
          {
            "name": "SONARQUBE_TOKEN",
            "value": "{sonarqube.token}",
            "variables": {
              "sonarqube.token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/SonarSource/sonarqube-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-07-01T12:14:18Z",
        "githubStars": 153,
        "icon": "https://avatars.githubusercontent.com/u/545988?s=200\u0026v=4",
        "license": "Other",
        "owner": "SonarSource",
        "prompts": 0,
        "pulls": 20538,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/sonarqube.md",
        "resources": {},
        "source": "https://github.com/SonarSource/sonarqube-mcp-server/tree/6f1cf9eebf593c01844e5fc3f04ac2de49233ab3",
        "stars": 17,
        "tags": [
          "sonarqube"
        ],
        "title": "SonarQube",
        "tools": [
          {
            "name": "analyze_code_snippet"
          },
          {
            "name": "change_sonar_issue_status"
          },
          {
            "name": "create_webhook"
          },
          {
            "name": "get_component_measures"
          },
          {
            "name": "get_project_quality_gate_status"
          },
          {
            "name": "get_raw_source"
          },
          {
            "name": "get_scm_info"
          },
          {
            "name": "get_system_health"
          },
          {
            "name": "get_system_info"
          },
          {
            "name": "get_system_logs"
          },
          {
            "name": "get_system_status"
          },
          {
            "name": "list_languages"
          },
          {
            "name": "list_portfolios"
          },
          {
            "name": "list_quality_gates"
          },
          {
            "name": "list_rule_repositories"
          },
          {
            "name": "list_webhooks"
          },
          {
            "name": "ping_system"
          },
          {
            "name": "search_dependency_risks"
          },
          {
            "name": "search_metrics"
          },
          {
            "name": "search_my_sonarqube_projects"
          },
          {
            "name": "search_sonar_issues_in_projects"
          },
          {
            "name": "show_rule"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/sonarqube.json",
        "upstream": "https://github.com/SonarSource/sonarqube-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/teamwork",
    "description": "Tools for Teamwork.com products.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/teamwork@sha256:9cdd8c596c319b75ac9cd3041ef795f02d432ba01048243b9ac8d236dfdacbfd",
        "environmentVariables": [
          {
            "name": "TW_MCP_BEARER_TOKEN",
            "value": "{teamwork.tw_mcp_bearer_token}",
            "variables": {
              "teamwork.tw_mcp_bearer_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/teamwork/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-02T20:44:02Z",
        "githubStars": 10,
        "icon": "https://avatars.githubusercontent.com/u/4037476?v=4",
        "license": "MIT License",
        "owner": "Teamwork",
        "prompts": 0,
        "pulls": 997,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/teamwork.md",
        "resources": {},
        "source": "https://github.com/teamwork/mcp/tree/84a2d50a2ecae26d7224b393b29dd3b91f46c387",
        "tags": [
          "ai",
          "artificial-intelligence",
          "teamwork"
        ],
        "title": "Teamwork",
        "tools": [
          {
            "name": "twdesk-create_company"
          },
          {
            "name": "twdesk-create_customer"
          },
          {
            "name": "twdesk-create_file"
          },
          {
            "name": "twdesk-create_message"
          },
          {
            "name": "twdesk-create_priority"
          },
          {
            "name": "twdesk-create_status"
          },
          {
            "name": "twdesk-create_tag"
          },
          {
            "name": "twdesk-create_ticket"
          },
          {
            "name": "twdesk-create_type"
          },
          {
            "name": "twdesk-get_company"
          },
          {
            "name": "twdesk-get_customer"
          },
          {
            "name": "twdesk-get_inbox"
          },
          {
            "name": "twdesk-get_priority"
          },
          {
            "name": "twdesk-get_status"
          },
          {
            "name": "twdesk-get_tag"
          },
          {
            "name": "twdesk-get_ticket"
          },
          {
            "name": "twdesk-get_type"
          },
          {
            "name": "twdesk-get_user"
          },
          {
            "name": "twdesk-list_companies"
          },
          {
            "name": "twdesk-list_customers"
          },
          {
            "name": "twdesk-list_inboxes"
          },
          {
            "name": "twdesk-list_priorities"
          },
          {
            "name": "twdesk-list_statuses"
          },
          {
            "name": "twdesk-list_tags"
          },
          {
            "name": "twdesk-list_tickets"
          },
          {
            "name": "twdesk-list_types"
          },
          {
            "name": "twdesk-list_users"
          },
          {
            "name": "twdesk-update_company"
          },
          {
            "name": "twdesk-update_customer"
          },
          {
            "name": "twdesk-update_priority"
          },
          {
            "name": "twdesk-update_status"
          },
          {
            "name": "twdesk-update_tag"
          },
          {
            "name": "twdesk-update_ticket"
          },
          {
            "name": "twdesk-update_type"
          },
          {
            "name": "twprojects-add_project_member"
          },
          {
            "name": "twprojects-complete_timer"
          },
          {
            "name": "twprojects-create_comment"
          },
          {
            "name": "twprojects-create_company"
          },
          {
            "name": "twprojects-create_milestone"
          },
          {
            "name": "twprojects-create_notebook"
          },
          {
            "name": "twprojects-create_project"
          },
          {
            "name": "twprojects-create_tag"
          },
          {
            "name": "twprojects-create_task"
          },
          {
            "name": "twprojects-create_tasklist"
          },
          {
            "name": "twprojects-create_team"
          },
          {
            "name": "twprojects-create_timelog"
          },
          {
            "name": "twprojects-create_timer"
          },
          {
            "name": "twprojects-create_user"
          },
          {
            "name": "twprojects-get_comment"
          },
          {
            "name": "twprojects-get_company"
          },
          {
            "name": "twprojects-get_milestone"
          },
          {
            "name": "twprojects-get_notebook"
          },
          {
            "name": "twprojects-get_project"
          },
          {
            "name": "twprojects-get_tag"
          },
          {
            "name": "twprojects-get_task"
          },
          {
            "name": "twprojects-get_tasklist"
          },
          {
            "name": "twprojects-get_team"
          },
          {
            "name": "twprojects-get_timelog"
          },
          {
            "name": "twprojects-get_timer"
          },
          {
            "name": "twprojects-get_user"
          },
          {
            "name": "twprojects-get_user_me"
          },
          {
            "name": "twprojects-list_activities"
          },
          {
            "name": "twprojects-list_activities_by_project"
          },
          {
            "name": "twprojects-list_comments"
          },
          {
            "name": "twprojects-list_comments_by_file_version"
          },
          {
            "name": "twprojects-list_comments_by_milestone"
          },
          {
            "name": "twprojects-list_comments_by_notebook"
          },
          {
            "name": "twprojects-list_comments_by_task"
          },
          {
            "name": "twprojects-list_companies"
          },
          {
            "name": "twprojects-list_industries"
          },
          {
            "name": "twprojects-list_milestones"
          },
          {
            "name": "twprojects-list_milestones_by_project"
          },
          {
            "name": "twprojects-list_notebooks"
          },
          {
            "name": "twprojects-list_projects"
          },
          {
            "name": "twprojects-list_tags"
          },
          {
            "name": "twprojects-list_tasklists"
          },
          {
            "name": "twprojects-list_tasklists_by_project"
          },
          {
            "name": "twprojects-list_tasks"
          },
          {
            "name": "twprojects-list_tasks_by_project"
          },
          {
            "name": "twprojects-list_tasks_by_tasklist"
          },
          {
            "name": "twprojects-list_teams"
          },
          {
            "name": "twprojects-list_teams_by_company"
          },
          {
            "name": "twprojects-list_teams_by_project"
          },
          {
            "name": "twprojects-list_timelogs"
          },
          {
            "name": "twprojects-list_timelogs_by_project"
          },
          {
            "name": "twprojects-list_timelogs_by_task"
          },
          {
            "name": "twprojects-list_timers"
          },
          {
            "name": "twprojects-list_users"
          },
          {
            "name": "twprojects-list_users_by_project"
          },
          {
            "name": "twprojects-pause_timer"
          },
          {
            "name": "twprojects-resume_timer"
          },
          {
            "name": "twprojects-update_comment"
          },
          {
            "name": "twprojects-update_company"
          },
          {
            "name": "twprojects-update_milestone"
          },
          {
            "name": "twprojects-update_notebook"
          },
          {
            "name": "twprojects-update_project"
          },
          {
            "name": "twprojects-update_tag"
          },
          {
            "name": "twprojects-update_task"
          },
          {
            "name": "twprojects-update_tasklist"
          },
          {
            "name": "twprojects-update_team"
          },
          {
            "name": "twprojects-update_timelog"
          },
          {
            "name": "twprojects-update_timer"
          },
          {
            "name": "twprojects-update_user"
          },
          {
            "name": "twprojects-users_workload"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/teamwork.json",
        "upstream": "https://github.com/teamwork/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/atlan",
    "description": "MCP server for interacting with Atlan services including asset search, updates, and lineage trave...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/atlan@sha256:b7a3400454cd1156987052372567fdecb5b98dc4f336a7fce05cba919b886dd9",
        "environmentVariables": [
          {
            "name": "ATLAN_API_KEY",
            "value": "{atlan.atlan_api_key}",
            "variables": {
              "atlan.atlan_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "ATLAN_BASE_URL",
            "value": "{atlan.atlan_base_url}",
            "variables": {
              "atlan.atlan_base_url": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/atlanhq/agent-toolkit",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-07-18T06:21:15Z",
        "githubStars": 20,
        "icon": "https://avatars.githubusercontent.com/u/47002402?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "atlanhq",
        "prompts": 0,
        "pulls": 1256,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/atlan.md",
        "resources": {},
        "source": "https://github.com/atlanhq/agent-toolkit/tree/b78a61ff5a6fd24acf8950b49cf043f33333d271/modelcontextprotocol",
        "tags": [
          "atlan",
          "metadata"
        ],
        "title": "Atlan MCP Server",
        "tools": [
          {
            "name": "create_glossaries"
          },
          {
            "name": "create_glossary_categories"
          },
          {
            "name": "create_glossary_terms"
          },
          {
            "name": "get_assets_by_dsl_tool"
          },
          {
            "name": "search_assets_tool"
          },
          {
            "name": "traverse_lineage_tool"
          },
          {
            "name": "update_assets_tool"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/atlan.json",
        "upstream": "https://github.com/atlanhq/agent-toolkit"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/markitdown",
    "description": "A lightweight MCP server for calling MarkItDown.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/markitdown@sha256:ac2cdd96f844c7535b1dd2f1b96cdc433f55a7117fb2d48f223740f5ad1db1cc",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{markitdown.paths|volume|into}",
            "variables": {
              "markitdown.paths": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/microsoft/markitdown",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-08-25T06:19:52Z",
        "githubStars": 82287,
        "icon": "https://avatars.githubusercontent.com/u/6154722?v=4",
        "license": "MIT License",
        "owner": "microsoft",
        "prompts": 0,
        "pulls": 6500,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/markitdown.md",
        "resources": {},
        "source": "https://github.com/microsoft/markitdown/tree/3d4fe3cdcced195c7f6ce6d266dbf508aa147e54/packages/markitdown-mcp",
        "tags": [
          "productivity",
          "markdown",
          "conversion",
          "pdf",
          "docx",
          "pptx",
          "xlsx",
          "html",
          "audio",
          "youtube"
        ],
        "title": "Markitdown",
        "tools": [
          {
            "name": "convert_to_markdown"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/markitdown.json",
        "upstream": "https://github.com/microsoft/markitdown"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/metabase",
    "description": "A comprehensive MCP server for Metabase with 70+ tools.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/metabase@sha256:02e633ae77a11d2f02e7ae3d52fce9abb871eab9f436010b1fee8c072cb2dd74",
        "environmentVariables": [
          {
            "name": "METABASE_URL",
            "value": "{metabase.metabaseurl}",
            "variables": {
              "metabase.metabaseurl": {
                "format": "string"
              }
            }
          },
          {
            "name": "METABASE_USERNAME",
            "value": "{metabase.metabaseusername}",
            "variables": {
              "metabase.metabaseusername": {
                "format": "string"
              }
            }
          },
          {
            "name": "METABASE_API_KEY",
            "value": "{metabase.MetaBaseAPIKey}",
            "variables": {
              "metabase.MetaBaseAPIKey": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "METABASE_PASSWORD",
            "value": "{metabase.MetaBasePassword}",
            "variables": {
              "metabase.MetaBasePassword": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/easecloudio/mcp-metabase-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "data-visualization",
        "dateAdded": "2025-07-29T14:05:27Z",
        "githubStars": 16,
        "icon": "https://avatars.githubusercontent.com/u/10520629?s=48\u0026v=4",
        "license": "MIT License",
        "owner": "easecloudio",
        "prompts": 0,
        "pulls": 1586,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/metabase.md",
        "resources": {},
        "source": "https://github.com/easecloudio/mcp-metabase-server/tree/8a4dfce8afd45ead9cc4c2764f41ace6f91adf66",
        "stars": 2,
        "tags": [
          "data-visualization"
        ],
        "title": "Metabase MCP",
        "tools": [
          {
            "name": "add_card_to_dashboard"
          },
          {
            "name": "create_card"
          },
          {
            "name": "create_collection"
          },
          {
            "name": "create_dashboard"
          },
          {
            "name": "create_database_connection"
          },
          {
            "name": "create_permission_group"
          },
          {
            "name": "create_user"
          },
          {
            "name": "delete_card"
          },
          {
            "name": "delete_dashboard"
          },
          {
            "name": "execute_card"
          },
          {
            "name": "execute_query"
          },
          {
            "name": "get_dashboard_cards"
          },
          {
            "name": "get_database_schema"
          },
          {
            "name": "get_database_sync_status"
          },
          {
            "name": "get_database_tables"
          },
          {
            "name": "list_cards"
          },
          {
            "name": "list_collections"
          },
          {
            "name": "list_dashboards"
          },
          {
            "name": "list_databases"
          },
          {
            "name": "list_permission_groups"
          },
          {
            "name": "list_users"
          },
          {
            "name": "remove_card_from_dashboard"
          },
          {
            "name": "search_content"
          },
          {
            "name": "sync_database_schema"
          },
          {
            "name": "test_database_connection"
          },
          {
            "name": "update_card"
          },
          {
            "name": "update_dashboard"
          },
          {
            "name": "update_dashboard_card"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/metabase.json",
        "upstream": "https://github.com/easecloudio/mcp-metabase-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/pomodash",
    "description": "Connect your AI assistant to PomoDash for seamless task and project management.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/pomodash@sha256:bb9539723f2ab2063fac957ad0eecb3389960052ff8c10b6ac391572af10fd93",
        "environmentVariables": [
          {
            "name": "POMODASH_API_URL",
            "value": "https://mcp.pomodash.mindsnapz.de"
          },
          {
            "name": "POMODASH_API_KEY",
            "value": "{pomodash.api_key}",
            "variables": {
              "pomodash.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/dannyytv/pomodash-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-09-08T19:03:35Z",
        "githubStars": 1,
        "icon": "https://mindsnapz.de/wp-content/uploads/2025/09/PomoDash-Logo-512-x-512-px.png",
        "license": "MIT License",
        "owner": "DannyyTv",
        "prompts": 0,
        "pulls": 356,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/pomodash.md",
        "resources": {},
        "source": "https://github.com/dannyytv/pomodash-mcp-server/tree/3c24d42aef5dda0e3b0006b2e04712843aff1d70",
        "tags": [
          "tasks",
          "productivity",
          "pomodoro",
          "notes",
          "projects",
          "planning"
        ],
        "title": "PomoDash",
        "tools": [
          {
            "name": "create_category"
          },
          {
            "name": "create_note"
          },
          {
            "name": "create_note_for_project"
          },
          {
            "name": "create_note_for_task"
          },
          {
            "name": "create_task"
          },
          {
            "name": "create_task_for_project"
          },
          {
            "name": "delete_note"
          },
          {
            "name": "delete_task"
          },
          {
            "name": "list_categories"
          },
          {
            "name": "list_note_references"
          },
          {
            "name": "list_notes"
          },
          {
            "name": "list_tasks"
          },
          {
            "name": "update_note"
          },
          {
            "name": "update_task"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/pomodash.json",
        "upstream": "https://github.com/dannyytv/pomodash-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/browserbase",
    "description": "Allow LLMs to control a browser with Browserbase and Stagehand for AI-powered web automation, int...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/browserbase@sha256:78dc0302875ae572094c826407f297e17f7790e002d15f35edbb1ee9a7d482da",
        "environmentVariables": [
          {
            "name": "BROWSERBASE_API_KEY",
            "value": "{browserbase.browserbase_api_key}",
            "variables": {
              "browserbase.browserbase_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "BROWSERBASE_PROJECT_ID",
            "value": "{browserbase.browserbase_project_id}",
            "variables": {
              "browserbase.browserbase_project_id": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "GEMINI_API_KEY",
            "value": "{browserbase.gemini_api_key}",
            "variables": {
              "browserbase.gemini_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/browserbase/mcp-server-browserbase",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-10-16T16:09:40Z",
        "githubStars": 2756,
        "icon": "https://avatars.githubusercontent.com/u/158221360?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "browserbase",
        "prompts": 0,
        "pulls": 347,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/browserbase.md",
        "resources": {},
        "source": "https://github.com/browserbase/mcp-server-browserbase/tree/b7ec6f6cf0b2224a3ca9952ac158eaa8e600f929",
        "tags": [
          "browserbase",
          "browser-automation",
          "web-scraping",
          "devops"
        ],
        "title": "Browserbase",
        "tools": [
          {
            "name": "browserbase_screenshot"
          },
          {
            "name": "browserbase_session_close"
          },
          {
            "name": "browserbase_session_create"
          },
          {
            "name": "browserbase_stagehand_act"
          },
          {
            "name": "browserbase_stagehand_extract"
          },
          {
            "name": "browserbase_stagehand_get_url"
          },
          {
            "name": "browserbase_stagehand_navigate"
          },
          {
            "name": "browserbase_stagehand_observe"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/browserbase.json",
        "upstream": "https://github.com/browserbase/mcp-server-browserbase"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/lara",
    "description": "Connect to Lara Translate API, enabling powerful translation capabilities with support for langua...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/lara@sha256:7ce7e26e018eea017437f27eec3c82c0fec11e051554aba7bba85677cf9a67f0",
        "environmentVariables": [
          {
            "name": "LARA_ACCESS_KEY_ID",
            "value": "{lara.key_id}",
            "variables": {
              "lara.key_id": {
                "format": "string"
              }
            }
          },
          {
            "name": "LARA_ACCESS_KEY_SECRET",
            "value": "{lara.key_secret}",
            "variables": {
              "lara.key_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/translated/lara-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 76,
        "icon": "https://avatars.githubusercontent.com/u/10272138?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "translated",
        "prompts": 0,
        "pulls": 2729,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/lara.md",
        "resources": {},
        "source": "https://github.com/translated/lara-mcp/tree/9e882fef0a3dba88c58686c13d27be3919d0a9e2",
        "stars": 3,
        "tags": [
          "lara",
          "devops"
        ],
        "title": "Lara Translate",
        "tools": [
          {
            "name": "add_translation"
          },
          {
            "name": "check_import_status"
          },
          {
            "name": "create_memory"
          },
          {
            "name": "delete_memory"
          },
          {
            "name": "delete_translation"
          },
          {
            "name": "import_tmx"
          },
          {
            "name": "list_languages"
          },
          {
            "name": "list_memories"
          },
          {
            "name": "translate"
          },
          {
            "name": "update_memory"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/lara.json",
        "upstream": "https://github.com/translated/lara-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/aws-terraform",
    "description": "Terraform on AWS best practices, infrastructure as code patterns, and security compliance with Ch...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/aws-terraform@sha256:2949c45e747b265f7e8609fbc0c148b22444cc5dd28b5aa1294833b1b3770e88"
      }
    ],
    "repository": {
      "url": "https://github.com/awslabs/mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-22T20:04:34Z",
        "githubStars": 6893,
        "icon": "https://avatars.githubusercontent.com/u/3299148?v=4",
        "license": "Apache License 2.0",
        "owner": "awslabs",
        "prompts": 0,
        "pulls": 13493,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/aws-terraform.md",
        "resources": {},
        "source": "https://github.com/awslabs/mcp/tree/96f3e569e2a054d31ccbc452bda89580265e8dae/src/terraform-mcp-server",
        "tags": [
          "aws",
          "terraform"
        ],
        "title": "AWS Terraform",
        "tools": [
          {
            "name": "ExecuteTerraformCommand"
          },
          {
            "name": "ExecuteTerragruntCommand"
          },
          {
            "name": "RunCheckovScan"
          },
          {
            "name": "SearchAwsProviderDocs"
          },
          {
            "name": "SearchAwsccProviderDocs"
          },
          {
            "name": "SearchSpecificAwsIaModules"
          },
          {
            "name": "SearchUserProvidedModule"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/aws-terraform.json",
        "upstream": "https://github.com/awslabs/mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/e2b",
    "description": "Giving Claude ability to run code with E2B via MCP (Model Context Protocol).",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/e2b@sha256:d7f0ece1b21f69fec668b35b43686939a222bcd91e43cb8bc26ef6144fea0be1",
        "environmentVariables": [
          {
            "name": "E2B_API_KEY",
            "value": "{e2b.api_key}",
            "variables": {
              "e2b.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/e2b-dev/mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 339,
        "icon": "https://avatars.githubusercontent.com/u/129434473?s=200\u0026v=4",
        "license": "Apache License 2.0",
        "owner": "e2b-dev",
        "prompts": 0,
        "pulls": 3468,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/e2b.md",
        "resources": {},
        "source": "https://github.com/e2b-dev/mcp-server/tree/5585fbd6554d28c724b46dbfbce0463414778dd8",
        "stars": 2,
        "tags": [
          "e2b",
          "devops"
        ],
        "title": "E2B",
        "tools": [
          {
            "name": "run_code"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/e2b.json",
        "upstream": "https://github.com/e2b-dev/mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/fetch",
    "description": "Fetches a URL from the internet and extracts its contents as markdown.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/fetch@sha256:ef9535a3f07249142f9ca5a6033d7024950afdb6dc05e98292794a23e9f5dfbe"
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 742027,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/fetch.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306/src/fetch",
        "stars": 42,
        "tags": [
          "fetch",
          "devops"
        ],
        "title": "Fetch (Reference)",
        "tools": [
          {
            "name": "fetch"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/fetch.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mcp-api-gateway",
    "description": "A universal MCP (Model Context Protocol) server to integrate any API with Claude Desktop using on...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/api-gateway@sha256:9cc67b4a037fa5657bbc7231b3b8ec8524e663125ba7c1636ef2bd892137b1da",
        "environmentVariables": [
          {
            "name": "API_1_NAME",
            "value": "{mcp-api-gateway.api_1_name}",
            "variables": {
              "mcp-api-gateway.api_1_name": {
                "format": "string"
              }
            }
          },
          {
            "name": "API_1_SWAGGER_URL",
            "value": "{mcp-api-gateway.api_1_swagger_url}",
            "variables": {
              "mcp-api-gateway.api_1_swagger_url": {
                "format": "string"
              }
            }
          },
          {
            "name": "API_1_HEADER_AUTHORIZATION",
            "value": "{mcp-api-gateway.api_1_header_authorization}",
            "variables": {
              "mcp-api-gateway.api_1_header_authorization": {
                "format": "string"
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/rflpazini/mcp-api-gateway",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-06-11T14:21:25Z",
        "githubStars": 26,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "",
        "owner": "rflpazini",
        "prompts": 0,
        "pulls": 5720,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mcp-api-gateway.md",
        "resources": {},
        "source": "https://github.com/rflpazini/mcp-api-gateway/tree/f197f8db4f4990d76148342e27f005d9022df417",
        "stars": 6,
        "tags": [
          "api-gateway",
          "devops"
        ],
        "title": "Api-gateway",
        "tools": [
          {
            "name": "execute_api"
          },
          {
            "name": "get_api_info"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mcp-api-gateway.json",
        "upstream": "https://github.com/rflpazini/mcp-api-gateway"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/mcp-python-refactoring",
    "description": "Educational Python refactoring assistant that provides guided suggestions for AI assistants.  Fea...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/mcp-python-refactoring@sha256:4cd4303da424f021f03e9fafc46187a08bcab212ead6f1e39867afee1d42cd24"
      }
    ],
    "repository": {
      "url": "https://github.com/slamer59/mcp-python-refactoring",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "development",
        "dateAdded": "2025-09-04T19:31:40Z",
        "githubStars": 7,
        "icon": "https://avatars.githubusercontent.com/u/2664231?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "slamer59",
        "prompts": 0,
        "pulls": 1862,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/mcp-python-refactoring.md",
        "resources": {},
        "source": "https://github.com/slamer59/mcp-python-refactoring/tree/b66781d58674cd066e4ed8786215ab44ecc0b14b",
        "stars": 1,
        "tags": [
          "python",
          "refactoring",
          "code-analysis",
          "education",
          "development",
          "code-quality",
          "static-analysis",
          "mentoring"
        ],
        "title": "Python Refactoring Assistant",
        "tools": [
          {
            "name": "analyze_python_file"
          },
          {
            "name": "analyze_python_package"
          },
          {
            "name": "analyze_security_and_patterns"
          },
          {
            "name": "analyze_test_coverage"
          },
          {
            "name": "find_long_functions"
          },
          {
            "name": "find_package_issues"
          },
          {
            "name": "get_extraction_guidance"
          },
          {
            "name": "get_package_metrics"
          },
          {
            "name": "tdd_refactoring_guidance"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/mcp-python-refactoring.json",
        "upstream": "https://github.com/slamer59/mcp-python-refactoring"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/pinecone",
    "description": "Pinecone Assistant MCP server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/pinecone@sha256:bec1d8853fb679c33f3115a2b0d27f5d6854e17a20cd481ce4d2cb2e8506092d",
        "environmentVariables": [
          {
            "name": "PINECONE_ASSISTANT_HOST",
            "value": "{pinecone.assistant_host}",
            "variables": {
              "pinecone.assistant_host": {
                "format": "string"
              }
            }
          },
          {
            "name": "PINECONE_API_KEY",
            "value": "{pinecone.api_key}",
            "variables": {
              "pinecone.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/pinecone-io/assistant-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-06-05T06:44:51Z",
        "githubStars": 37,
        "icon": "https://avatars.githubusercontent.com/u/54333248?v=4",
        "license": "MIT License",
        "owner": "pinecone-io",
        "prompts": 0,
        "pulls": 2154,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/pinecone.md",
        "resources": {},
        "source": "https://github.com/pinecone-io/assistant-mcp/tree/7e32e35c20fe3f79d2504d4371f28e1b1eb34009",
        "stars": 3,
        "tags": [
          "database",
          "machine-learning"
        ],
        "title": "Pinecone Assistant",
        "tools": [
          {
            "name": "assistant_context"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/pinecone.json",
        "upstream": "https://github.com/pinecone-io/assistant-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/render",
    "description": "Interact with your Render resources via LLMs.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/render@sha256:e5500a609618576dd8b09cda71587987a4404438e0220a0e50b86b69845b8043",
        "environmentVariables": [
          {
            "name": "RENDER_API_KEY",
            "value": "{render.api_key}",
            "variables": {
              "render.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/render-oss/render-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-23T20:08:35Z",
        "githubStars": 63,
        "icon": "https://avatars.githubusercontent.com/u/114033652?v=4",
        "license": "Apache License 2.0",
        "owner": "render-oss",
        "prompts": 0,
        "pulls": 2492,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/render.md",
        "resources": {},
        "source": "https://github.com/render-oss/render-mcp-server/tree/aa1ad111a4eb856988125c430634d3632a78864f",
        "stars": 1,
        "tags": [
          "render",
          "devops"
        ],
        "title": "Render",
        "tools": [
          {
            "name": "create_key_value"
          },
          {
            "name": "create_postgres"
          },
          {
            "name": "create_static_site"
          },
          {
            "name": "create_web_service"
          },
          {
            "name": "get_deploy"
          },
          {
            "name": "get_key_value"
          },
          {
            "name": "get_metrics"
          },
          {
            "name": "get_postgres"
          },
          {
            "name": "get_selected_workspace"
          },
          {
            "name": "get_service"
          },
          {
            "name": "list_deploys"
          },
          {
            "name": "list_key_value"
          },
          {
            "name": "list_log_label_values"
          },
          {
            "name": "list_logs"
          },
          {
            "name": "list_postgres_instances"
          },
          {
            "name": "list_services"
          },
          {
            "name": "list_workspaces"
          },
          {
            "name": "query_render_postgres"
          },
          {
            "name": "select_workspace"
          },
          {
            "name": "update_environment_variables"
          },
          {
            "name": "update_static_site"
          },
          {
            "name": "update_web_service"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/render.json",
        "upstream": "https://github.com/render-oss/render-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/terraform",
    "description": "The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advance...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "hashicorp/terraform-mcp-server@sha256:ea936a266f0133651acb579dd827953a3a580d2962f18be4dc23d00ed599dbce"
      }
    ],
    "repository": {
      "url": "https://github.com/hashicorp/terraform-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-20T20:08:35Z",
        "githubStars": 1028,
        "icon": "https://avatars.githubusercontent.com/u/761456?v=4",
        "license": "Mozilla Public License 2.0",
        "owner": "hashicorp",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/terraform.md",
        "resources": {},
        "source": "https://github.com/hashicorp/terraform-mcp-server/tree/3aa58e49d7e0502f28b25fe3ab12dbea9f76c115",
        "tags": [
          "hashicorp",
          "terraform"
        ],
        "title": "Hashicorp Terraform",
        "tools": [
          {
            "name": "get_latest_module_version"
          },
          {
            "name": "get_latest_provider_version"
          },
          {
            "name": "get_module_details"
          },
          {
            "name": "get_policy_details"
          },
          {
            "name": "get_provider_capabilities"
          },
          {
            "name": "get_provider_details"
          },
          {
            "name": "search_modules"
          },
          {
            "name": "search_policies"
          },
          {
            "name": "search_providers"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/terraform.json",
        "upstream": "https://github.com/hashicorp/terraform-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/zerodha-kite",
    "description": "MCP server for Zerodha Kite Connect API - India's leading stock broker trading platform. Execute ...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/zerodha-kite@sha256:0668667c6890544ed1b60ef8348b4de3882f8fb16dae61b50bc922427ebab96c",
        "environmentVariables": [
          {
            "name": "KITE_API_KEY",
            "value": "{zerodha-kite.kite_api_key}",
            "variables": {
              "zerodha-kite.kite_api_key": {
                "format": "string",
                "description": "Your Kite Connect API key from the developer console"
              }
            }
          },
          {
            "name": "KITE_ACCESS_TOKEN",
            "value": "{zerodha-kite.kite_access_token}",
            "variables": {
              "zerodha-kite.kite_access_token": {
                "format": "string",
                "description": "Access token obtained after OAuth authentication (optional - can be generated at runtime)"
              }
            }
          },
          {
            "name": "KITE_REDIRECT_URL",
            "value": "{zerodha-kite.kite_redirect_url}",
            "variables": {
              "zerodha-kite.kite_redirect_url": {
                "format": "string",
                "description": "OAuth redirect URL configured in your Kite Connect app"
              }
            }
          },
          {
            "name": "KITE_API_SECRET",
            "value": "{zerodha-kite.api_secret}",
            "variables": {
              "zerodha-kite.api_secret": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/anshuljain90/zerodha-kite-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "finance",
        "dateAdded": "2025-09-19T06:18:27Z",
        "githubStars": 0,
        "icon": "https://avatars.githubusercontent.com/u/34680622?s=300\u0026v=4",
        "license": "MIT License",
        "owner": "anshuljain90",
        "prompts": 0,
        "pulls": 336,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/zerodha-kite.md",
        "resources": {},
        "source": "https://github.com/anshuljain90/zerodha-kite-mcp/tree/3902c5283c2c98b567e1de35c86d0ca9fe0c3403",
        "tags": [
          "finance",
          "trading",
          "stocks",
          "india"
        ],
        "title": "Zerodha Kite Connect",
        "tools": [
          {
            "name": "place_order"
          },
          {
            "name": "modify_order"
          },
          {
            "name": "cancel_order"
          },
          {
            "name": "get_positions"
          },
          {
            "name": "get_holdings"
          },
          {
            "name": "get_margins"
          },
          {
            "name": "get_quote"
          },
          {
            "name": "get_historical_data"
          },
          {
            "name": "get_instruments"
          },
          {
            "name": "get_orders"
          },
          {
            "name": "get_trades"
          },
          {
            "name": "get_order_history"
          },
          {
            "name": "get_profile"
          },
          {
            "name": "get_ltp"
          },
          {
            "name": "get_market_status"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/zerodha-kite.json",
        "upstream": "https://github.com/anshuljain90/zerodha-kite-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/clickhouse",
    "description": "Official ClickHouse MCP Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/clickhouse@sha256:7daa1f28707fa5ca9b35bc4f35933e6ebcd71aefda234b4533a06980da188767",
        "environmentVariables": [
          {
            "name": "CLICKHOUSE_HOST",
            "value": "{clickhouse.host}",
            "variables": {
              "clickhouse.host": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_PORT",
            "value": "{clickhouse.port}",
            "variables": {
              "clickhouse.port": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_USER",
            "value": "{clickhouse.user}",
            "variables": {
              "clickhouse.user": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_SECURE",
            "value": "{clickhouse.secure}",
            "variables": {
              "clickhouse.secure": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_VERIFY",
            "value": "{clickhouse.verify}",
            "variables": {
              "clickhouse.verify": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_CONNECT_TIMEOUT",
            "value": "{clickhouse.connect_timeout}",
            "variables": {
              "clickhouse.connect_timeout": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_SEND_RECEIVE_TIMEOUT",
            "value": "{clickhouse.send_receive_timeout}",
            "variables": {
              "clickhouse.send_receive_timeout": {
                "format": "string"
              }
            }
          },
          {
            "name": "CLICKHOUSE_PASSWORD",
            "value": "{clickhouse.password}",
            "variables": {
              "clickhouse.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/ClickHouse/mcp-clickhouse",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-06-12T18:00:16Z",
        "githubStars": 576,
        "icon": "https://avatars.githubusercontent.com/u/54801242?v=4",
        "license": "Apache License 2.0",
        "owner": "ClickHouse",
        "prompts": 0,
        "pulls": 14707,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/clickhouse.md",
        "resources": {},
        "source": "https://github.com/ClickHouse/mcp-clickhouse/tree/21e6cb2b0758150e8fd0627b699fbfd78e31837b",
        "stars": 3,
        "tags": [
          "database",
          "clickhouse"
        ],
        "title": "Official ClickHouse MCP Server",
        "tools": [
          {
            "name": "list_databases"
          },
          {
            "name": "list_tables"
          },
          {
            "name": "run_select_query"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/clickhouse.json",
        "upstream": "https://github.com/ClickHouse/mcp-clickhouse"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/everart",
    "description": "Image generation server using EverArt's API.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/everart@sha256:98c2aa1b623196f1feaef11bbd284b69dc4aefc1822329794d5f66e388a997f9",
        "environmentVariables": [
          {
            "name": "EVERART_API_KEY",
            "value": "{everart.api_key}",
            "variables": {
              "everart.api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/modelcontextprotocol/servers",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "search",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 71602,
        "icon": "https://avatars.githubusercontent.com/u/182288589?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "modelcontextprotocol",
        "prompts": 0,
        "pulls": 2944,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/everart.md",
        "resources": {},
        "source": "https://github.com/modelcontextprotocol/servers/tree/b4ee623039a6c60053ce67269701ad9e95073306",
        "stars": 3,
        "tags": [
          "everart",
          "search"
        ],
        "title": "EverArt (Archived)",
        "tools": [
          {
            "name": "generate_image"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/everart.json",
        "upstream": "https://github.com/modelcontextprotocol/servers"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/nasdaq-data-link",
    "description": "MCP server to interact with the data feeds provided by the Nasdaq Data Link. Developed by the com...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/nasdaq-data-link@sha256:3770fbafab197d367afc8d7c718621fc37e41e956b3cb7d71eb3e0535583bb10",
        "environmentVariables": [
          {
            "name": "NASDAQ_DATA_LINK_API_KEY",
            "value": "{nasdaq_data_link_api_key}",
            "variables": {
              "nasdaq_data_link_api_key": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "finance",
        "dateAdded": "2025-07-01T14:14:18Z",
        "githubStars": 48,
        "icon": "https://raw.githubusercontent.com/stefanoamorelli/nasdaq-data-link-mcp/refs/heads/main/nasdaq-mcp-server-logo.png",
        "license": "MIT License",
        "owner": "stefanoamorelli",
        "prompts": 0,
        "pulls": 1896,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/nasdaq-data-link.md",
        "resources": {},
        "source": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp/tree/ba0f129f2ef242b7267b5d1916f373cfdd08f32c",
        "stars": 2,
        "tags": [
          "nasdaq",
          "finance",
          "data",
          "intelligence"
        ],
        "title": "Nasdaq Data Link",
        "tools": [
          {
            "name": "export_dataset"
          },
          {
            "name": "get_dataset"
          },
          {
            "name": "get_dataset_metadata"
          },
          {
            "name": "list_databases"
          },
          {
            "name": "search_datasets"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/nasdaq-data-link.json",
        "upstream": "https://github.com/stefanoamorelli/nasdaq-data-link-mcp"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/openapi-schema",
    "description": "OpenAPI Schema Model Context Protocol Server.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/openapi-schema@sha256:5da1c1870748cc3c7d9baa25549fa716a7d9dd24dbb78b73396cb2daebfbca6a",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "{openapi-schema.SchemaPath|or:[]|volume|into}",
            "variables": {
              "openapi-schema.SchemaPath": {
                "format": "string"
              }
            }
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/hannesj/mcp-openapi-schema",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 44,
        "icon": "https://avatars.githubusercontent.com/u/16343502?s=200\u0026v=4",
        "license": "",
        "owner": "hannesj",
        "prompts": 0,
        "pulls": 6587,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/openapi-schema.md",
        "resources": {},
        "source": "https://github.com/slimslenderslacks/mcp-openapi-schema/tree/6f14ab86576b7581bc83ec7721dd6d95d5e1973d",
        "stars": 7,
        "tags": [
          "openapi-schema",
          "devops"
        ],
        "title": "OpenAPI Schema",
        "tools": [
          {
            "name": "get-component"
          },
          {
            "name": "get-endpoint"
          },
          {
            "name": "get-examples"
          },
          {
            "name": "get-path-parameters"
          },
          {
            "name": "get-request-body"
          },
          {
            "name": "get-response-schema"
          },
          {
            "name": "list-components"
          },
          {
            "name": "list-endpoints"
          },
          {
            "name": "list-security-schemes"
          },
          {
            "name": "search-schema"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/openapi-schema.json",
        "upstream": "https://github.com/hannesj/mcp-openapi-schema"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/gyazo",
    "description": "Official Model Context Protocol server for Gyazo.",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/gyazo@sha256:04b6fd62cdea5e0e3f4540287b416a2482bf70842267bae4a235c7494e9a088a",
        "environmentVariables": [
          {
            "name": "GYAZO_ACCESS_TOKEN",
            "value": "{gyazo.access_token}",
            "variables": {
              "gyazo.access_token": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/nota/gyazo-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 24,
        "icon": "https://avatars.githubusercontent.com/u/113151?v=4",
        "license": "MIT License",
        "owner": "nota",
        "prompts": 0,
        "pulls": 2441,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/gyazo.md",
        "resources": {},
        "source": "https://github.com/nota/gyazo-mcp-server/tree/991e697ed1889ccf1f92051e18db277989e91120",
        "tags": [
          "gyazo",
          "devops"
        ],
        "title": "Gyazo",
        "tools": [
          {
            "name": "gyazo_image"
          },
          {
            "name": "gyazo_latest_image"
          },
          {
            "name": "gyazo_search"
          },
          {
            "name": "gyazo_upload"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/gyazo.json",
        "upstream": "https://github.com/nota/gyazo-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/task-orchestrator",
    "description": "Model Context Protocol (MCP) server for comprehensive task and feature management, providing AI a...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "ghcr.io/jpicklyk/task-orchestrator@sha256:ee90a6dffd7b0504b8395bb3020640e01e00bf6b203da630e99fbf4ffba0e040",
        "runtimeArguments": [
          {
            "type": "named",
            "name": "-v",
            "value": "mcp-task-data:/app/data"
          }
        ],
        "runtimeHint": "docker"
      }
    ],
    "repository": {
      "url": "https://github.com/jpicklyk/task-orchestrator",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "ai",
        "dateAdded": "2025-07-21T12:46:15Z",
        "githubStars": 89,
        "icon": "https://avatars.githubusercontent.com/u/5747775?v=4",
        "license": "MIT License",
        "owner": "jpicklyk",
        "prompts": 0,
        "pulls": 0,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/task-orchestrator.md",
        "resources": {},
        "source": "https://github.com/jpicklyk/task-orchestrator/tree/919f3762d13c37543a3e604d658f0e8aced8f3e8",
        "tags": [
          "tasks",
          "database"
        ],
        "title": "Task orchestrator",
        "tools": [
          {
            "name": "add_section"
          },
          {
            "name": "add_template_section"
          },
          {
            "name": "apply_template"
          },
          {
            "name": "bulk_create_sections"
          },
          {
            "name": "bulk_delete_sections"
          },
          {
            "name": "bulk_update_sections"
          },
          {
            "name": "bulk_update_tasks"
          },
          {
            "name": "create_dependency"
          },
          {
            "name": "create_feature"
          },
          {
            "name": "create_project"
          },
          {
            "name": "create_task"
          },
          {
            "name": "create_template"
          },
          {
            "name": "delete_dependency"
          },
          {
            "name": "delete_feature"
          },
          {
            "name": "delete_project"
          },
          {
            "name": "delete_section"
          },
          {
            "name": "delete_task"
          },
          {
            "name": "delete_template"
          },
          {
            "name": "disable_template"
          },
          {
            "name": "enable_template"
          },
          {
            "name": "feature_to_markdown"
          },
          {
            "name": "get_feature"
          },
          {
            "name": "get_overview"
          },
          {
            "name": "get_project"
          },
          {
            "name": "get_sections"
          },
          {
            "name": "get_task"
          },
          {
            "name": "get_task_dependencies"
          },
          {
            "name": "get_template"
          },
          {
            "name": "list_templates"
          },
          {
            "name": "project_to_markdown"
          },
          {
            "name": "reorder_sections"
          },
          {
            "name": "search_features"
          },
          {
            "name": "search_projects"
          },
          {
            "name": "search_tasks"
          },
          {
            "name": "task_to_markdown"
          },
          {
            "name": "update_feature"
          },
          {
            "name": "update_project"
          },
          {
            "name": "update_section"
          },
          {
            "name": "update_section_metadata"
          },
          {
            "name": "update_section_text"
          },
          {
            "name": "update_task"
          },
          {
            "name": "update_template_metadata"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/task-orchestrator.json",
        "upstream": "https://github.com/jpicklyk/task-orchestrator"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/cylera-mcp-server",
    "description": "Brings context about device inventory, threats, risks and utilization powered by the Cylera Partn...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/cylera-mcp-server@sha256:e9e80b0807a18bd22a734a577792b6eb9acf3b1497cf581f2cc74e4cb62f2e94",
        "environmentVariables": [
          {
            "name": "CYLERA_BASE_URL",
            "value": "{cylera-mcp-server.cylera.base_url}",
            "variables": {
              "cylera-mcp-server.cylera.base_url": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "CYLERA_USERNAME",
            "value": "{cylera-mcp-server.cylera.username}",
            "variables": {
              "cylera-mcp-server.cylera.username": {
                "isSecret": true,
                "isRequired": true
              }
            }
          },
          {
            "name": "CYLERA_PASSWORD",
            "value": "{cylera-mcp-server.cylera.password}",
            "variables": {
              "cylera-mcp-server.cylera.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/Cylera/cylera-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "productivity",
        "dateAdded": "2025-10-16T16:09:40Z",
        "githubStars": 0,
        "icon": "https://github.com/Cylera/cylera-mcp-server/blob/main/assets/cylera_logo.png?raw=true",
        "license": "MIT License",
        "owner": "Cylera",
        "prompts": 0,
        "pulls": 156,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/cylera-mcp-server.md",
        "resources": {},
        "source": "https://github.com/Cylera/cylera-mcp-server/tree/d8034893525a78d5e4bfca65dd291e7d498f8f0e",
        "tags": [
          "productivity"
        ],
        "title": "The official MCP Server for Cylera.",
        "tools": [
          {
            "name": "get_device"
          },
          {
            "name": "get_procedures"
          },
          {
            "name": "get_device_attributes"
          },
          {
            "name": "get_risk_mitigations"
          },
          {
            "name": "get_subnets"
          },
          {
            "name": "get_vulnerabilities"
          },
          {
            "name": "search_for_devices"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/cylera-mcp-server.json",
        "upstream": "https://github.com/Cylera/cylera-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/duckduckgo",
    "description": "A Model Context Protocol (MCP) server that provides web search capabilities through DuckDuckGo, w...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/duckduckgo@sha256:68eb20db6109f5c312a695fc5ec3386ad15d93ffb765a0b4eb1baf4328dec14f"
      }
    ],
    "repository": {
      "url": "https://github.com/nickclyde/duckduckgo-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "devops",
        "dateAdded": "2025-05-05T20:08:35Z",
        "githubStars": 608,
        "icon": "https://avatars.githubusercontent.com/u/342708?s=200\u0026v=4",
        "license": "MIT License",
        "owner": "nickclyde",
        "prompts": 0,
        "pulls": 131671,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/duckduckgo.md",
        "resources": {},
        "source": "https://github.com/nickclyde/duckduckgo-mcp-server/tree/d198a2f0e8bd7c862d87d8517e1518aa295f8348",
        "stars": 6,
        "tags": [
          "duckduckgo",
          "devops"
        ],
        "title": "DuckDuckGo",
        "tools": [
          {
            "name": "fetch_content"
          },
          {
            "name": "search"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/duckduckgo.json",
        "upstream": "https://github.com/nickclyde/duckduckgo-mcp-server"
      }
    }
  },
  {
    "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
    "name": "com.docker.mcp/oracle",
    "description": "Connect to Oracle databases via MCP, providing secure read-only access with support for schema ex...",
    "version": "v0.1.0",
    "packages": [
      {
        "registryType": "oci",
        "transport": {
          "type": "stdio"
        },
        "identifier": "mcp/oracle@sha256:76d733b869f424eca1715a6566f4a472aee2599308e766179ec10abdea46ad70",
        "environmentVariables": [
          {
            "name": "ORACLE_CONNECTION_STRING",
            "value": "{oracle.oracle_connection_string}",
            "variables": {
              "oracle.oracle_connection_string": {
                "format": "string"
              }
            }
          },
          {
            "name": "ORACLE_USER",
            "value": "{oracle.oracle_user}",
            "variables": {
              "oracle.oracle_user": {
                "format": "string"
              }
            }
          },
          {
            "name": "ORACLE_PASSWORD",
            "value": "{oracle.password}",
            "variables": {
              "oracle.password": {
                "isSecret": true,
                "isRequired": true
              }
            }
          }
        ]
      }
    ],
    "repository": {
      "url": "https://github.com/samscarrow/oracle-mcp-server",
      "source": "github"
    },
    "_meta": {
      "io.modelcontextprotocol.registry/publisher-provided": {
        "category": "database",
        "dateAdded": "2025-09-11T17:03:42Z",
        "githubStars": 1,
        "icon": "https://avatars.githubusercontent.com/u/93792006?v=4",
        "license": "MIT License",
        "owner": "samscarrow",
        "prompts": 0,
        "pulls": 897,
        "readme": "http://desktop.docker.com/mcp/catalog/v3/readme/oracle.md",
        "resources": {},
        "source": "https://github.com/samscarrow/oracle-mcp-server/tree/1aa0b0a2f859879495bcd11d91a5637207d72f6d",
        "tags": [
          "oracle",
          "database",
          "sql",
          "enterprise"
        ],
        "title": "Oracle Database MCP Server",
        "tools": [
          {
            "name": "describe_table"
          },
          {
            "name": "execute_query"
          },
          {
            "name": "get_table_constraints"
          },
          {
            "name": "get_table_indexes"
          },
          {
            "name": "list_schemas"
          },
          {
            "name": "list_tables"
          }
        ],
        "toolsUrl": "http://desktop.docker.com/mcp/catalog/v3/tools/oracle.json",
        "upstream": "https://github.com/samscarrow/oracle-mcp-server"
      }
    }
  }
]