[ {
  "name" : "com.docker.mcp/atlassian",
  "description" : "Tools for Atlassian products (Confluence and Jira). This integration supports both Atlassian Cloud and Jira Server/Data Center deployments.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/atlassian",
    "version" : "sha256:85b5a316edf04eeee782647ed50edb61a365a59ebe2c8f9c241834061a7d0ad6",
    "environmentVariables" : [ {
      "name" : "CONFLUENCE_API_TOKEN",
      "value" : "{atlassian.confluence.api_token}",
      "variables" : {
        "atlassian.confluence.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CONFLUENCE_PERSONAL_TOKEN",
      "value" : "{atlassian.confluence.personal_token}",
      "variables" : {
        "atlassian.confluence.personal_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "JIRA_API_TOKEN",
      "value" : "{atlassian.jira.api_token}",
      "variables" : {
        "atlassian.jira.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "JIRA_PERSONAL_TOKEN",
      "value" : "{atlassian.jira.personal_token}",
      "variables" : {
        "atlassian.jira.personal_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CONFLUENCE_URL",
      "value" : "{atlassian.confluence.url}",
      "isRepeated" : false,
      "variables" : {
        "atlassian.confluence.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CONFLUENCE_USERNAME",
      "value" : "{atlassian.confluence.username}",
      "isRepeated" : false,
      "variables" : {
        "atlassian.confluence.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "JIRA_URL",
      "value" : "{atlassian.jira.url}",
      "isRepeated" : false,
      "variables" : {
        "atlassian.jira.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "JIRA_USERNAME",
      "value" : "{atlassian.jira.username}",
      "isRepeated" : false,
      "variables" : {
        "atlassian.jira.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 24583,
      "stars" : 21,
      "githubStars" : 3145,
      "category" : "productivity",
      "tags" : [ "atlassian", "confluence", "jira" ],
      "license" : "MIT License",
      "owner" : "sooperset",
      "tools" : [ {
        "name" : "confluence_add_comment"
      }, {
        "name" : "confluence_add_label"
      }, {
        "name" : "confluence_create_page"
      }, {
        "name" : "confluence_delete_page"
      }, {
        "name" : "confluence_get_comments"
      }, {
        "name" : "confluence_get_labels"
      }, {
        "name" : "confluence_get_page"
      }, {
        "name" : "confluence_get_page_children"
      }, {
        "name" : "confluence_search"
      }, {
        "name" : "confluence_update_page"
      }, {
        "name" : "jira_add_comment"
      }, {
        "name" : "jira_add_worklog"
      }, {
        "name" : "jira_batch_create_issues"
      }, {
        "name" : "jira_batch_get_changelogs"
      }, {
        "name" : "jira_create_issue"
      }, {
        "name" : "jira_create_issue_link"
      }, {
        "name" : "jira_create_sprint"
      }, {
        "name" : "jira_delete_issue"
      }, {
        "name" : "jira_download_attachments"
      }, {
        "name" : "jira_get_agile_boards"
      }, {
        "name" : "jira_get_board_issues"
      }, {
        "name" : "jira_get_issue"
      }, {
        "name" : "jira_get_link_types"
      }, {
        "name" : "jira_get_project_issues"
      }, {
        "name" : "jira_get_project_versions"
      }, {
        "name" : "jira_get_sprint_issues"
      }, {
        "name" : "jira_get_sprints_from_board"
      }, {
        "name" : "jira_get_transitions"
      }, {
        "name" : "jira_get_user_profile"
      }, {
        "name" : "jira_get_worklog"
      }, {
        "name" : "jira_link_to_epic"
      }, {
        "name" : "jira_remove_issue_link"
      }, {
        "name" : "jira_search"
      }, {
        "name" : "jira_search_fields"
      }, {
        "name" : "jira_transition_issue"
      }, {
        "name" : "jira_update_issue"
      }, {
        "name" : "jira_update_sprint"
      } ],
      "source" : "https://github.com/sooperset/mcp-atlassian/tree/v0.11.2",
      "icon" : "https://avatars.githubusercontent.com/u/43281909?s=200&v=4",
      "prompts" : 0,
      "title" : "Atlassian",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/atlassian.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/atlassian.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/sooperset/mcp-atlassian",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f30915fc-89cc-413f-b9d5-2dfc8e4a905f",
      "versionId" : "0f2d1f0c-1906-47d7-b84c-ca63a464b509"
    }
  }
}, {
  "name" : "com.docker.mcp/couchbase",
  "description" : "Couchbase is a distributed document database with a powerful search engine and in-built operational and analytical capabilities.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/couchbase",
    "version" : "sha256:96856e24d4b5e66325f0e95fbf3783766d698e6686cb4506b5c2ec0f884de1f7",
    "environmentVariables" : [ {
      "name" : "CB_PASSWORD",
      "value" : "{couchbase.cb_password}",
      "variables" : {
        "couchbase.cb_password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CB_CONNECTION_STRING",
      "value" : "{couchbase.cb_connection_string}",
      "isRepeated" : false,
      "variables" : {
        "couchbase.cb_connection_string" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Connection string for the Couchbase cluster."
        }
      }
    }, {
      "name" : "CB_USERNAME",
      "value" : "{couchbase.cb_username}",
      "isRepeated" : false,
      "variables" : {
        "couchbase.cb_username" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Username for the Couchbase cluster with access to the bucket."
        }
      }
    }, {
      "name" : "CB_BUCKET_NAME",
      "value" : "{couchbase.cb_bucket_name}",
      "isRepeated" : false,
      "variables" : {
        "couchbase.cb_bucket_name" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Bucket in the Couchbase cluster to use for the MCP server."
        }
      }
    }, {
      "name" : "CB_MCP_READ_ONLY_QUERY_MODE",
      "value" : "{couchbase.cb_mcp_read_only_query_mode}",
      "isRepeated" : false,
      "variables" : {
        "couchbase.cb_mcp_read_only_query_mode" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Setting to \"true\" (default) enables read-only query mode while running SQL++ queries."
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1713,
      "stars" : 2,
      "githubStars" : 18,
      "category" : "database",
      "tags" : [ "couchbase", "database" ],
      "license" : "Apache License 2.0",
      "owner" : "Couchbase-Ecosystem",
      "tools" : [ {
        "name" : "delete_document_by_id"
      }, {
        "name" : "get_buckets_in_cluster"
      }, {
        "name" : "get_collections_in_scope"
      }, {
        "name" : "get_document_by_id"
      }, {
        "name" : "get_schema_for_collection"
      }, {
        "name" : "get_scopes_and_collections_in_bucket"
      }, {
        "name" : "get_scopes_in_bucket"
      }, {
        "name" : "get_server_configuration_status"
      }, {
        "name" : "run_sql_plus_plus_query"
      }, {
        "name" : "test_cluster_connection"
      }, {
        "name" : "upsert_document_by_id"
      } ],
      "source" : "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/605755?s=200&v=4",
      "prompts" : 0,
      "title" : "Couchbase",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/couchbase.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/couchbase.json",
      "dateAdded" : "2025-07-29T14:05:27Z",
      "upstream" : "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "1fbaacef-f479-48f2-b8a7-c8d8ebd97f9b",
      "versionId" : "44541ca4-781c-4f88-95f0-d17df77acf98"
    }
  }
}, {
  "name" : "com.docker.mcp/dockerhub",
  "description" : "Docker Hub official MCP server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/dockerhub",
    "version" : "sha256:6d15361c655580c7aad72b0152daef9208b466577e794361f64904aa974f5e67",
    "environmentVariables" : [ {
      "name" : "HUB_PAT_TOKEN",
      "value" : "{dockerhub.pat_token}",
      "variables" : {
        "dockerhub.pat_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "named",
      "name" : "--transport",
      "value" : "stdio"
    }, {
      "type" : "named",
      "name" : "--username",
      "value" : "{dockerhub.username}",
      "isRepeated" : false,
      "variables" : {
        "dockerhub.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 20520,
      "stars" : 5,
      "githubStars" : 65,
      "category" : "devops",
      "tags" : [ "docker", "dockerhub" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "checkRepository"
      }, {
        "name" : "checkRepositoryTag"
      }, {
        "name" : "createRepository"
      }, {
        "name" : "dockerHardenedImages"
      }, {
        "name" : "getPersonalNamespace"
      }, {
        "name" : "getRepositoryInfo"
      }, {
        "name" : "getRepositoryTag"
      }, {
        "name" : "listAllNamespacesMemberOf"
      }, {
        "name" : "listNamespaces"
      }, {
        "name" : "listRepositoriesByNamespace"
      }, {
        "name" : "listRepositoryTags"
      }, {
        "name" : "search"
      }, {
        "name" : "updateRepositoryInfo"
      } ],
      "source" : "https://github.com/docker/hub-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/5429470?s=200&v=4",
      "prompts" : 0,
      "title" : "Docker Hub",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dockerhub.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dockerhub.json",
      "dateAdded" : "2025-06-16T15:56:21Z",
      "upstream" : "https://github.com/docker/hub-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b05499da-5ebd-41bc-9301-a74ad846fef4",
      "versionId" : "1ba6b907-f46c-4670-a054-23f5e862c665"
    }
  }
}, {
  "name" : "com.docker.mcp/duckduckgo",
  "description" : "A Model Context Protocol (MCP) server that provides web search capabilities through DuckDuckGo, with additional features for content fetching and parsing.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/duckduckgo",
    "version" : "sha256:68eb20db6109f5c312a695fc5ec3386ad15d93ffb765a0b4eb1baf4328dec14f"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 70766,
      "stars" : 6,
      "githubStars" : 496,
      "category" : "devops",
      "tags" : [ "duckduckgo", "devops" ],
      "license" : "MIT License",
      "owner" : "nickclyde",
      "tools" : [ {
        "name" : "fetch_content"
      }, {
        "name" : "search"
      } ],
      "source" : "https://github.com/nickclyde/duckduckgo-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/342708?s=200&v=4",
      "prompts" : 0,
      "title" : "DuckDuckGo",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/duckduckgo.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/duckduckgo.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/nickclyde/duckduckgo-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "71c0bd7b-aece-44e2-b22b-4aa7f30e29c5",
      "versionId" : "fe8ffcfb-6751-4149-a8c1-cf3b09f8b1c2"
    }
  }
}, {
  "name" : "com.docker.mcp/elasticsearch",
  "description" : "Interact with your Elasticsearch indices through natural language conversations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/elasticsearch",
    "version" : "sha256:9c978b8277e32be0229e0c2f5c631e4106dd1c9c955ec361814588688582bcfd",
    "environmentVariables" : [ {
      "name" : "ES_API_KEY",
      "value" : "{elasticsearch.api_key}",
      "variables" : {
        "elasticsearch.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "ES_URL",
      "value" : "{elasticsearch.url}",
      "isRepeated" : false,
      "variables" : {
        "elasticsearch.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 6935,
      "stars" : 10,
      "githubStars" : 479,
      "category" : "search",
      "tags" : [ "elasticsearch", "search" ],
      "license" : "Apache License 2.0",
      "owner" : "elastic",
      "tools" : [ {
        "name" : "esql"
      }, {
        "name" : "get_mappings"
      }, {
        "name" : "get_shards"
      }, {
        "name" : "list_indices"
      }, {
        "name" : "search"
      } ],
      "source" : "https://github.com/elastic/mcp-server-elasticsearch/tree/v0.4.0",
      "icon" : "https://avatars.githubusercontent.com/u/6764390?s=200&v=4",
      "prompts" : 0,
      "title" : "Elasticsearch",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/elasticsearch.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/elasticsearch.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/elastic/mcp-server-elasticsearch",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a13cc04a-fbcb-40ed-8399-2cd2b558e1b7",
      "versionId" : "277ac535-b7a8-492b-8ee5-245e58fdc23f"
    }
  }
}, {
  "name" : "com.docker.mcp/fetch",
  "description" : "Fetches a URL from the internet and extracts its contents as markdown.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/fetch",
    "version" : "sha256:ef9535a3f07249142f9ca5a6033d7024950afdb6dc05e98292794a23e9f5dfbe"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 666337,
      "stars" : 38,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "fetch", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "fetch"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/fetch",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Fetch (Reference)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/fetch.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/fetch.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "858c21f4-ebf6-46ce-a8e5-e0c09211470a",
      "versionId" : "3c7c5413-74b6-4984-842c-a1612017369f"
    }
  }
}, {
  "name" : "com.docker.mcp/git",
  "description" : "Git repository interaction and automation.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/git",
    "version" : "sha256:ad6af958e79466a14b895891e772fdda28fdc12c06fff4a70637b66773303a2c",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{git.paths}:{git.paths}",
      "isRepeated" : true,
      "variables" : {
        "git.paths" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 36388,
      "stars" : 26,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "gitl", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "git_add"
      }, {
        "name" : "git_checkout"
      }, {
        "name" : "git_commit"
      }, {
        "name" : "git_create_branch"
      }, {
        "name" : "git_diff"
      }, {
        "name" : "git_diff_staged"
      }, {
        "name" : "git_diff_unstaged"
      }, {
        "name" : "git_init"
      }, {
        "name" : "git_log"
      }, {
        "name" : "git_reset"
      }, {
        "name" : "git_show"
      }, {
        "name" : "git_status"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/git",
      "icon" : "https://avatars.githubusercontent.com/u/18133?s=200&v=4",
      "prompts" : 0,
      "title" : "Git (Reference)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/git.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/git.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5abae01b-eb7c-485d-a171-79b8c8e37d48",
      "versionId" : "c9279c69-0ee1-4518-a85d-2131bbf6040c"
    }
  }
}, {
  "name" : "com.docker.mcp/grafana",
  "description" : "MCP server for Grafana.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/grafana",
    "version" : "sha256:e460da71009366d5095526149ef94b7506d56978941da268ed63697de8eed2a4",
    "environmentVariables" : [ {
      "name" : "GRAFANA_API_KEY",
      "value" : "{grafana.api_key}",
      "variables" : {
        "grafana.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "GRAFANA_URL",
      "value" : "{grafana.url}",
      "isRepeated" : false,
      "variables" : {
        "grafana.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "named",
      "name" : "--transport",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 76314,
      "stars" : 17,
      "githubStars" : 1615,
      "category" : "monitoring",
      "tags" : [ "grafana", "monitoring" ],
      "license" : "Apache License 2.0",
      "owner" : "grafana",
      "tools" : [ {
        "name" : "add_activity_to_incident"
      }, {
        "name" : "create_incident"
      }, {
        "name" : "fetch_pyroscope_profile"
      }, {
        "name" : "find_error_pattern_logs"
      }, {
        "name" : "find_slow_requests"
      }, {
        "name" : "generate_deeplink"
      }, {
        "name" : "get_alert_group"
      }, {
        "name" : "get_alert_rule_by_uid"
      }, {
        "name" : "get_assertions"
      }, {
        "name" : "get_current_oncall_users"
      }, {
        "name" : "get_dashboard_by_uid"
      }, {
        "name" : "get_dashboard_panel_queries"
      }, {
        "name" : "get_dashboard_property"
      }, {
        "name" : "get_dashboard_summary"
      }, {
        "name" : "get_datasource_by_name"
      }, {
        "name" : "get_datasource_by_uid"
      }, {
        "name" : "get_incident"
      }, {
        "name" : "get_oncall_shift"
      }, {
        "name" : "get_sift_analysis"
      }, {
        "name" : "get_sift_investigation"
      }, {
        "name" : "list_alert_groups"
      }, {
        "name" : "list_alert_rules"
      }, {
        "name" : "list_contact_points"
      }, {
        "name" : "list_datasources"
      }, {
        "name" : "list_incidents"
      }, {
        "name" : "list_loki_label_names"
      }, {
        "name" : "list_loki_label_values"
      }, {
        "name" : "list_oncall_schedules"
      }, {
        "name" : "list_oncall_teams"
      }, {
        "name" : "list_oncall_users"
      }, {
        "name" : "list_prometheus_label_names"
      }, {
        "name" : "list_prometheus_label_values"
      }, {
        "name" : "list_prometheus_metric_metadata"
      }, {
        "name" : "list_prometheus_metric_names"
      }, {
        "name" : "list_pyroscope_label_names"
      }, {
        "name" : "list_pyroscope_label_values"
      }, {
        "name" : "list_pyroscope_profile_types"
      }, {
        "name" : "list_sift_investigations"
      }, {
        "name" : "list_teams"
      }, {
        "name" : "list_users_by_org"
      }, {
        "name" : "query_loki_logs"
      }, {
        "name" : "query_loki_stats"
      }, {
        "name" : "query_prometheus"
      }, {
        "name" : "search_dashboards"
      }, {
        "name" : "update_dashboard"
      } ],
      "source" : "https://github.com/grafana/mcp-grafana/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/7195757?s=200&v=4",
      "prompts" : 0,
      "title" : "Grafana",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/grafana.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/grafana.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/grafana/mcp-grafana",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "34b53ab4-217f-4bae-ab96-464da42dbf15",
      "versionId" : "bf607695-b149-4dae-b830-89e1981165bc"
    }
  }
}, {
  "name" : "com.docker.mcp/heroku",
  "description" : "Heroku Platform MCP Server using the Heroku CLI.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/heroku",
    "version" : "sha256:bc972fc22f0091b9719b672613f6544f0b3752c86c27f63872a44f933f5fa8e0",
    "environmentVariables" : [ {
      "name" : "HEROKU_API_KEY",
      "value" : "{heroku.api_key}",
      "variables" : {
        "heroku.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2797,
      "stars" : 2,
      "githubStars" : 67,
      "category" : "devops",
      "tags" : [ "heroku", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "heroku",
      "tools" : [ {
        "name" : "create_addon"
      }, {
        "name" : "create_app"
      }, {
        "name" : "deploy_one_off_dyno"
      }, {
        "name" : "deploy_to_heroku"
      }, {
        "name" : "get_addon_info"
      }, {
        "name" : "get_app_info"
      }, {
        "name" : "get_app_logs"
      }, {
        "name" : "list_addon_plans"
      }, {
        "name" : "list_addon_services"
      }, {
        "name" : "list_addons"
      }, {
        "name" : "list_apps"
      }, {
        "name" : "list_private_spaces"
      }, {
        "name" : "list_teams"
      }, {
        "name" : "maintenance_off"
      }, {
        "name" : "maintenance_on"
      }, {
        "name" : "pg_backups"
      }, {
        "name" : "pg_credentials"
      }, {
        "name" : "pg_info"
      }, {
        "name" : "pg_kill"
      }, {
        "name" : "pg_locks"
      }, {
        "name" : "pg_maintenance"
      }, {
        "name" : "pg_outliers"
      }, {
        "name" : "pg_ps"
      }, {
        "name" : "pg_psql"
      }, {
        "name" : "pg_upgrade"
      }, {
        "name" : "pipelines_create"
      }, {
        "name" : "pipelines_info"
      }, {
        "name" : "pipelines_list"
      }, {
        "name" : "pipelines_promote"
      }, {
        "name" : "ps_list"
      }, {
        "name" : "ps_restart"
      }, {
        "name" : "ps_scale"
      }, {
        "name" : "rename_app"
      }, {
        "name" : "transfer_app"
      } ],
      "source" : "https://github.com/heroku/heroku-mcp-server/tree/refs/pull/24/merge",
      "icon" : "https://avatars.githubusercontent.com/u/23211?s=200&v=4",
      "prompts" : 0,
      "title" : "Heroku",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/heroku.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/heroku.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/heroku/heroku-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "515ea0cf-c24c-4fad-9955-c6ba58d3fa8e",
      "versionId" : "c9528c9c-8f02-428c-a45b-30d1f8cf1ddf"
    }
  }
}, {
  "name" : "com.docker.mcp/mongodb",
  "description" : "A Model Context Protocol server to connect to MongoDB databases and MongoDB Atlas Clusters.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mongodb",
    "version" : "sha256:1e8e02e4960d33747ad2c867f16650810172e9ea9d7a06eb9820879063808f03",
    "environmentVariables" : [ {
      "name" : "MDB_MCP_CONNECTION_STRING",
      "value" : "{mongodb.connection_string}",
      "variables" : {
        "mongodb.connection_string" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 20698,
      "stars" : 5,
      "githubStars" : 641,
      "category" : "database",
      "tags" : [ "mongodb", "database" ],
      "license" : "Apache License 2.0",
      "owner" : "mongodb-js",
      "tools" : [ {
        "name" : "aggregate"
      }, {
        "name" : "collection-indexes"
      }, {
        "name" : "collection-schema"
      }, {
        "name" : "collection-storage-size"
      }, {
        "name" : "connect"
      }, {
        "name" : "count"
      }, {
        "name" : "create-collection"
      }, {
        "name" : "create-index"
      }, {
        "name" : "db-stats"
      }, {
        "name" : "delete-many"
      }, {
        "name" : "drop-collection"
      }, {
        "name" : "drop-database"
      }, {
        "name" : "explain"
      }, {
        "name" : "export"
      }, {
        "name" : "find"
      }, {
        "name" : "insert-many"
      }, {
        "name" : "list-collections"
      }, {
        "name" : "list-databases"
      }, {
        "name" : "mongodb-logs"
      }, {
        "name" : "rename-collection"
      }, {
        "name" : "update-many"
      } ],
      "source" : "https://github.com/mongodb-js/mongodb-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/11214950?v=4",
      "prompts" : 0,
      "title" : "MongoDB",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mongodb.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mongodb.json",
      "dateAdded" : "2025-05-15T20:04:34Z",
      "upstream" : "https://github.com/mongodb-js/mongodb-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d525b4c4-7c5f-4e43-9d99-d5df439c9227",
      "versionId" : "21f7f995-6d04-4622-835f-dde2924374fb"
    }
  }
}, {
  "name" : "com.docker.mcp/neon",
  "description" : "MCP server for interacting with Neon Management API and databases.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/neon",
    "version" : "sha256:fab32eb73fb01e858b1effecc735c907488ba42536f7498e034b0567729051de",
    "environmentVariables" : [ {
      "name" : "NEON_API_KEY",
      "value" : "{neon.api_key}",
      "variables" : {
        "neon.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3847,
      "stars" : 4,
      "githubStars" : 470,
      "category" : "database",
      "tags" : [ "neon", "database" ],
      "license" : "MIT License",
      "owner" : "neondatabase",
      "tools" : [ {
        "name" : "__node_version"
      }, {
        "name" : "complete_database_migration"
      }, {
        "name" : "complete_query_tuning"
      }, {
        "name" : "create_branch"
      }, {
        "name" : "create_project"
      }, {
        "name" : "delete_branch"
      }, {
        "name" : "delete_project"
      }, {
        "name" : "describe_branch"
      }, {
        "name" : "describe_project"
      }, {
        "name" : "describe_table_schema"
      }, {
        "name" : "explain_sql_statement"
      }, {
        "name" : "get_connection_string"
      }, {
        "name" : "get_database_tables"
      }, {
        "name" : "list_projects"
      }, {
        "name" : "prepare_database_migration"
      }, {
        "name" : "prepare_query_tuning"
      }, {
        "name" : "provision_neon_auth"
      }, {
        "name" : "run_sql"
      }, {
        "name" : "run_sql_transaction"
      } ],
      "source" : "https://github.com/neondatabase-labs/mcp-server-neon/tree/dbfa184afd9fc677c0d6b007a62b33194e883821",
      "icon" : "https://avatars.githubusercontent.com/u/183852044?s=200&v=4",
      "prompts" : 0,
      "title" : "Neon",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/neon.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/neon.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/neondatabase-labs/mcp-server-neon",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d943420d-cdef-4900-a373-38825076fc58",
      "versionId" : "2a74e8ad-f8a0-45a7-b7b8-2f1f8d412569"
    }
  }
}, {
  "name" : "com.docker.mcp/notion",
  "description" : "Official Notion MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/notion",
    "version" : "sha256:27fc9ba99c6b9840c9631d2ae4cfc7665e6f2fa6607c0cee413be4d5e99aeea2",
    "environmentVariables" : [ {
      "name" : "INTERNAL_INTEGRATION_TOKEN",
      "value" : "{notion.internal_integration_token}",
      "variables" : {
        "notion.internal_integration_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "OPENAPI_MCP_HEADERS",
      "value" : "{\"Authorization\": \"Bearer $INTERNAL_INTEGRATION_TOKEN\", \"Notion-Version\": \"2022-06-28\"}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 35753,
      "stars" : 29,
      "githubStars" : 3230,
      "category" : "productivity",
      "tags" : [ "notion", "secrets" ],
      "license" : "MIT License",
      "owner" : "makenotion",
      "tools" : [ {
        "name" : "API-create-a-comment"
      }, {
        "name" : "API-create-a-database"
      }, {
        "name" : "API-delete-a-block"
      }, {
        "name" : "API-get-block-children"
      }, {
        "name" : "API-get-self"
      }, {
        "name" : "API-get-user"
      }, {
        "name" : "API-get-users"
      }, {
        "name" : "API-patch-block-children"
      }, {
        "name" : "API-patch-page"
      }, {
        "name" : "API-post-database-query"
      }, {
        "name" : "API-post-page"
      }, {
        "name" : "API-post-search"
      }, {
        "name" : "API-retrieve-a-block"
      }, {
        "name" : "API-retrieve-a-comment"
      }, {
        "name" : "API-retrieve-a-database"
      }, {
        "name" : "API-retrieve-a-page"
      }, {
        "name" : "API-retrieve-a-page-property"
      }, {
        "name" : "API-update-a-block"
      }, {
        "name" : "API-update-a-database"
      } ],
      "source" : "https://github.com/makenotion/notion-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/4792552?s=200&v=4",
      "prompts" : 0,
      "title" : "Notion",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/notion.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/notion.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/makenotion/notion-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "312e45a4-2216-4b21-b9a8-0f1a51425073",
      "versionId" : "293225e5-add7-474a-a6dd-dea8d884104c"
    }
  }
}, {
  "name" : "com.docker.mcp/pulumi",
  "description" : "Pulumi MCP server enables AI-powered coding assistants to help you codify cloud architectures and get diffs for infrastructure changes right in your development environment.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/pulumi",
    "version" : "sha256:06ba14e1f542b18d843834974b93c140a5a6b9e3afe68f5b4defc5898bcebfef",
    "environmentVariables" : [ {
      "name" : "PULUMI_ACCESS_TOKEN",
      "value" : "{pulumi.access_token}",
      "variables" : {
        "pulumi.access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 4238,
      "stars" : 3,
      "githubStars" : 66,
      "category" : "devops",
      "tags" : [ "pulumi", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "pulumi",
      "tools" : [ {
        "name" : "deploy-to-aws"
      }, {
        "name" : "neo-task-launcher"
      }, {
        "name" : "pulumi-cli-preview"
      }, {
        "name" : "pulumi-cli-refresh"
      }, {
        "name" : "pulumi-cli-stack-output"
      }, {
        "name" : "pulumi-cli-up"
      }, {
        "name" : "pulumi-registry-get-function"
      }, {
        "name" : "pulumi-registry-get-resource"
      }, {
        "name" : "pulumi-registry-get-type"
      }, {
        "name" : "pulumi-registry-list-functions"
      }, {
        "name" : "pulumi-registry-list-resources"
      }, {
        "name" : "pulumi-resource-search"
      } ],
      "source" : "https://github.com/pulumi/mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/21992475?s=200&v=4",
      "prompts" : 0,
      "title" : "Pulumi",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/pulumi.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/pulumi.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/pulumi/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "3f8bca4e-454a-4a7f-b996-c0d1c218b317",
      "versionId" : "f12d699a-75f9-47e4-a9ae-ee369d241f34"
    }
  }
}, {
  "name" : "com.docker.mcp/puppeteer",
  "description" : "Browser automation and web scraping using Puppeteer.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/puppeteer",
    "version" : "sha256:c1e2bda6d92d400e900e497b743552a670a33631799c0a6478e91096e389bd27",
    "environmentVariables" : [ {
      "name" : "DOCKER_CONTAINER",
      "value" : "true"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 86576,
      "stars" : 30,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "puppeteer", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "puppeteer_click"
      }, {
        "name" : "puppeteer_evaluate"
      }, {
        "name" : "puppeteer_fill"
      }, {
        "name" : "puppeteer_hover"
      }, {
        "name" : "puppeteer_navigate"
      }, {
        "name" : "puppeteer_screenshot"
      }, {
        "name" : "puppeteer_select"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/6906516?s=200&v=4",
      "prompts" : 0,
      "title" : "Puppeteer (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/puppeteer.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/puppeteer.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "15cb1571-360b-4617-b55e-194aed42a55b",
      "versionId" : "9a95d6ec-5102-4d6b-845a-fde7a0a6c0cc"
    }
  }
}, {
  "name" : "com.docker.mcp/stripe",
  "description" : "Interact with Stripe services over the Stripe API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/stripe",
    "version" : "sha256:a7cbb0b0095824a91eaf1a6274da47c32b181e052d8f04b676ffc2d77aa4844e",
    "environmentVariables" : [ {
      "name" : "STRIPE_SECRET_KEY",
      "value" : "{stripe.secret_key}",
      "variables" : {
        "stripe.secret_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "named",
      "name" : "--tools",
      "value" : "all"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 7055,
      "stars" : 8,
      "githubStars" : 961,
      "category" : "finance",
      "tags" : [ "stripe", "finance" ],
      "license" : "MIT License",
      "owner" : "stripe",
      "tools" : [ {
        "name" : "cancel_subscription"
      }, {
        "name" : "create_coupon"
      }, {
        "name" : "create_customer"
      }, {
        "name" : "create_invoice"
      }, {
        "name" : "create_invoice_item"
      }, {
        "name" : "create_payment_link"
      }, {
        "name" : "create_price"
      }, {
        "name" : "create_product"
      }, {
        "name" : "create_refund"
      }, {
        "name" : "finalize_invoice"
      }, {
        "name" : "list_coupons"
      }, {
        "name" : "list_customers"
      }, {
        "name" : "list_disputes"
      }, {
        "name" : "list_invoices"
      }, {
        "name" : "list_payment_intents"
      }, {
        "name" : "list_prices"
      }, {
        "name" : "list_products"
      }, {
        "name" : "list_subscriptions"
      }, {
        "name" : "retrieve_balance"
      }, {
        "name" : "search_stripe_documentation"
      }, {
        "name" : "update_dispute"
      }, {
        "name" : "update_subscription"
      } ],
      "source" : "https://github.com/stripe/agent-toolkit/tree/main/modelcontextprotocol",
      "icon" : "https://avatars.githubusercontent.com/u/856813?s=200&v=4",
      "prompts" : 0,
      "title" : "Stripe",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/stripe.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/stripe.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/stripe/agent-toolkit",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "c833e5f8-4e60-4b84-9ee1-44609973ca12",
      "versionId" : "e32799ac-77c6-4c61-9a6d-6f5391b37f53"
    }
  }
}, {
  "name" : "com.docker.mcp/airtable-mcp-server",
  "description" : "Provides AI assistants with direct access to Airtable bases, allowing them to read schemas, query records, and interact with your Airtable data. Supports listing bases, retrieving table structures, and searching through records to help automate workflows and answer questions about your organized data.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/airtable-mcp-server",
    "version" : "sha256:9f2a5f0f6887af7ca5e45b2f70cd79796fec7903207ad5122f6202e845806681",
    "environmentVariables" : [ {
      "name" : "AIRTABLE_API_KEY",
      "value" : "{airtable-mcp-server.api_key}",
      "variables" : {
        "airtable-mcp-server.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "NODE_ENV",
      "value" : "{airtable-mcp-server.nodeenv}",
      "isRepeated" : false,
      "variables" : {
        "airtable-mcp-server.nodeenv" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 374,
      "githubStars" : 307,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "license" : "MIT License",
      "owner" : "domdomegg",
      "tools" : [ {
        "name" : "create_field"
      }, {
        "name" : "create_record"
      }, {
        "name" : "create_table"
      }, {
        "name" : "delete_records"
      }, {
        "name" : "describe_table"
      }, {
        "name" : "get_record"
      }, {
        "name" : "list_bases"
      }, {
        "name" : "list_records"
      }, {
        "name" : "list_tables"
      }, {
        "name" : "search_records"
      }, {
        "name" : "update_field"
      }, {
        "name" : "update_records"
      }, {
        "name" : "update_table"
      } ],
      "source" : "https://github.com/domdomegg/airtable-mcp-server/tree/master",
      "icon" : "https://www.google.com/s2/favicons?domain=airtable.com&sz=64",
      "prompts" : 0,
      "title" : "Airtable MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/airtable-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/airtable-mcp-server.json",
      "dateAdded" : "2025-09-17T06:19:29Z",
      "upstream" : "https://github.com/domdomegg/airtable-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "79431e75-ec90-4020-a5fb-c5be81eec85d",
      "versionId" : "77f3ff26-b599-4aab-a104-3b9404a1c9a6"
    }
  }
}, {
  "name" : "com.docker.mcp/aks",
  "description" : "Azure Kubernetes Service (AKS) official MCP server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aks",
    "version" : "sha256:d2660979686ca052a67301caa408e2a8d5502feae4454a6119bc9115d73a6ff2",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-u",
      "value" : "{aks.container_user}",
      "isRepeated" : false,
      "variables" : {
        "aks.container_user" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Username or UID of the container user (format <name|uid>[:<group|gid>] e.g. 10000), ensuring correct permissions to access the Azure and kubeconfig files. Leave empty to use default user in the container."
        }
      }
    }, {
      "type" : "named",
      "name" : "-v",
      "value" : "{aks.azure_dir}:/home/mcp/.azure",
      "isRepeated" : false,
      "variables" : {
        "aks.azure_dir" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Path to the Azure configuration directory (e.g. /home/azureuser/.azure). Used for Azure CLI authentication, you should be logged in (e.g. run `az login`) on the host before starting the MCP server."
        }
      }
    }, {
      "type" : "named",
      "name" : "-v",
      "value" : "{aks.kubeconfig}:/home/mcp/.kube/config",
      "isRepeated" : false,
      "variables" : {
        "aks.kubeconfig" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Path to the kubeconfig file for the AKS cluster (e.g. /home/azureuser/.kube/config). Used to connect to the AKS cluster."
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "named",
      "name" : "--transport",
      "value" : "stdio"
    }, {
      "type" : "named",
      "name" : "--access-level",
      "value" : "{aks.access_level}",
      "isRepeated" : false,
      "variables" : {
        "aks.access_level" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Access level for the MCP server, One of [ readonly, readwrite, admin ]"
        }
      }
    }, {
      "type" : "named",
      "name" : "--allow-namespaces",
      "value" : "{aks.allow_namespaces}",
      "isRepeated" : false,
      "variables" : {
        "aks.allow_namespaces" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Comma-separated list of namespaces to allow access to. If not specified, all namespaces are allowed."
        }
      }
    }, {
      "type" : "named",
      "name" : "--additional-tools",
      "value" : "{aks.additional_tools}",
      "isRepeated" : false,
      "variables" : {
        "aks.additional_tools" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Comma-separated list of additional tools, One of [ helm, cilium ]"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1141,
      "stars" : 1,
      "githubStars" : 90,
      "category" : "devops",
      "tags" : [ "devops", "azure", "kubernetes", "aks" ],
      "license" : "MIT License",
      "owner" : "Azure",
      "tools" : [ {
        "name" : "az_advisor_recommendation"
      }, {
        "name" : "az_aks_operations"
      }, {
        "name" : "az_compute_operations"
      }, {
        "name" : "az_fleet"
      }, {
        "name" : "az_monitoring"
      }, {
        "name" : "az_network_resources"
      }, {
        "name" : "get_aks_vmss_info"
      }, {
        "name" : "inspektor_gadget_observability"
      }, {
        "name" : "kubectl_cluster"
      }, {
        "name" : "kubectl_config"
      }, {
        "name" : "kubectl_diagnostics"
      }, {
        "name" : "kubectl_resources"
      }, {
        "name" : "list_detectors"
      }, {
        "name" : "run_detector"
      }, {
        "name" : "run_detectors_by_category"
      } ],
      "source" : "https://github.com/Azure/aks-mcp/tree/main",
      "icon" : "https://raw.githubusercontent.com/Azure/AKS/master/blog/assets/images/400x400.png",
      "prompts" : 0,
      "title" : "Azure Kubernetes Service (AKS)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aks.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aks.json",
      "dateAdded" : "2025-08-20T06:26:55Z",
      "upstream" : "https://github.com/Azure/aks-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "dcfe346e-1484-4cb3-a56d-502107aaebd6",
      "versionId" : "1c665b7e-a529-4e61-af27-4762b8f866a2"
    }
  }
}, {
  "name" : "com.docker.mcp/apify",
  "description" : "Apify is the world's largest marketplace of tools for web scraping, data extraction, and web automation. You can extract structured data from social media, e-commerce, search engines, maps, travel sites, or any other website.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.apify.com",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${APIFY_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "automation",
      "tags" : [ "automation", "web-scraping", "data-extraction", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=apify.com&sz=64",
      "prompts" : 0,
      "title" : "Apify Remote MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/apify.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/apify.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "4b5ceef4-4447-4541-9071-343f74d15ec1",
      "versionId" : "b78d423b-0e02-4185-b464-b1de48ba8588"
    }
  }
}, {
  "name" : "com.docker.mcp/apify-mcp-server",
  "description" : "Apify is the world's largest marketplace of tools for web scraping, data extraction, and web automation. You can extract structured data from social media, e-commerce, search engines, maps, travel sites, or any other website.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/apify-mcp-server",
    "version" : "sha256:79b1fd3c9e9441a5891d411b685ab355295a1286dfe720cf6e40013057a73f94",
    "environmentVariables" : [ {
      "name" : "APIFY_TOKEN",
      "value" : "{apify-mcp-server.apify_token}",
      "variables" : {
        "apify-mcp-server.apify_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "TOOLS",
      "value" : "{apify-mcp-server.tools}",
      "isRepeated" : false,
      "variables" : {
        "apify-mcp-server.tools" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Comma-separated list of tools to enable. Can be either a tool category, a specific tool, or an Apify Actor. For example: \"actors,docs,apify/rag-web-browser\". For more details visit https://mcp.apify.com."
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1812,
      "githubStars" : 399,
      "category" : "productivity",
      "tags" : [ "productivity", "search", "mcp", "automation", "web scraping", "api", "data extraction" ],
      "license" : "MIT License",
      "owner" : "apify",
      "tools" : [ {
        "name" : "apify-slash-rag-web-browser"
      }, {
        "name" : "call-actor"
      }, {
        "name" : "fetch-actor-details"
      }, {
        "name" : "fetch-apify-docs"
      }, {
        "name" : "get-actor-output"
      }, {
        "name" : "search-actors"
      }, {
        "name" : "search-apify-docs"
      } ],
      "source" : "https://github.com/apify/actors-mcp-server/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/24586296?s=200&v=4",
      "prompts" : 0,
      "title" : "Apify MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/apify-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/apify-mcp-server.json",
      "dateAdded" : "2025-08-22T06:21:38Z",
      "upstream" : "https://github.com/apify/actors-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "c06e3ea0-42d4-4bd4-824e-ed2a4379c2a1",
      "versionId" : "fd4ba9e6-a9cf-46ce-917a-5c8eaf5c1204"
    }
  }
}, {
  "name" : "com.docker.mcp/arxiv-mcp-server",
  "description" : "The ArXiv MCP Server provides a comprehensive bridge between AI assistants and arXiv's research repository through the Model Context Protocol (MCP).   Features: • Search arXiv papers with advanced filtering • Download and store papers locally as markdown • Read and analyze paper content • Deep research analysis prompts • Local paper management and storage • Enhanced tool descriptions optimized for local AI models • Docker MCP Gateway compatible with detailed context  Perfect for researchers, academics, and AI assistants conducting literature reviews and research analysis.  **Recent Update**: Enhanced tool descriptions specifically designed to resolve local AI model confusion and improve Docker MCP Gateway compatibility.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/arxiv-mcp-server",
    "version" : "sha256:6dc6bba6dfed97f4ad6eb8d23a5c98ef5b7fa6184937d54b2d675801cd9dd29e",
    "environmentVariables" : [ {
      "name" : "ARXIV_STORAGE_PATH",
      "value" : "/app/papers"
    } ],
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{arxiv-mcp-server.storage_path}:/app/papers",
      "isRepeated" : false,
      "variables" : {
        "arxiv-mcp-server.storage_path" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Directory path where downloaded papers will be stored"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3209,
      "stars" : 2,
      "githubStars" : 16,
      "category" : "search",
      "tags" : [ "arxiv", "research", "academic", "papers", "search", "ai", "local-models", "docker-gateway", "enhanced-descriptions" ],
      "license" : "Apache License 2.0",
      "owner" : "jasonleinart",
      "tools" : [ {
        "name" : "download_paper"
      }, {
        "name" : "list_papers"
      }, {
        "name" : "read_paper"
      }, {
        "name" : "search_papers"
      } ],
      "source" : "https://github.com/jasonleinart/arxiv-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/15390319?v=4",
      "prompts" : 0,
      "title" : "ArXiv MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/arxiv-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/arxiv-mcp-server.json",
      "dateAdded" : "2025-07-16T06:22:24Z",
      "upstream" : "https://github.com/jasonleinart/arxiv-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5a0badaa-7fca-4e88-a51b-ecb56423d017",
      "versionId" : "74146e9a-af56-4d1e-bf15-622bd4dc1423"
    }
  }
}, {
  "name" : "com.docker.mcp/ast-grep",
  "description" : "ast-grep is a fast and polyglot tool for code structural search, lint, rewriting at large scale.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/ast-grep",
    "version" : "sha256:bdb6bdb4fb4732cece8ce45e90e352cb89eab9e5d30acf9c6317827b9383fc12",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{ast-grep.path|volume-target}:/src",
      "isRepeated" : false,
      "variables" : {
        "ast-grep.path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 622,
      "stars" : 1,
      "category" : "code",
      "tags" : [ "code", "refactoring", "grep" ],
      "license" : "Apache License 2.0",
      "owner" : "dgageot",
      "tools" : [ {
        "name" : "ast-grep"
      }, {
        "name" : "ast-grep-help"
      } ],
      "source" : "https://github.com/dgageot/mcp-ast-grep/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/114017360?s=200&v=4",
      "prompts" : 0,
      "title" : "ast-grep",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/ast-grep.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/ast-grep.json",
      "dateAdded" : "2025-09-04T06:24:28Z",
      "upstream" : "https://github.com/dgageot/mcp-ast-grep",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ba8a590c-7d18-47f1-a83d-3c781ef0c48f",
      "versionId" : "db9d572b-96ea-4667-b651-dfc7a21b8099"
    }
  }
}, {
  "name" : "com.docker.mcp/astra-db",
  "description" : "An MCP server for Astra DB workloads.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/astra-db",
    "version" : "sha256:5f80909d7182448a1f7c2a84901de61ce2832b28defb729164e591e1312a92e0",
    "environmentVariables" : [ {
      "name" : "ASTRA_DB_APPLICATION_TOKEN",
      "value" : "{astra-db.application_token}",
      "variables" : {
        "astra-db.application_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "ASTRA_DB_API_ENDPOINT",
      "value" : "{astra-db.endpoint}",
      "isRepeated" : false,
      "variables" : {
        "astra-db.endpoint" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2103,
      "githubStars" : 31,
      "category" : "database",
      "tags" : [ "astra-db", "database" ],
      "license" : "Apache License 2.0",
      "owner" : "datastax",
      "tools" : [ {
        "name" : "BulkCreateRecords"
      }, {
        "name" : "BulkDeleteRecords"
      }, {
        "name" : "BulkUpdateRecords"
      }, {
        "name" : "CreateCollection"
      }, {
        "name" : "CreateRecord"
      }, {
        "name" : "DeleteCollection"
      }, {
        "name" : "DeleteRecord"
      }, {
        "name" : "EstimateDocumentCount"
      }, {
        "name" : "FindRecord"
      }, {
        "name" : "GetCollections"
      }, {
        "name" : "GetRecord"
      }, {
        "name" : "HelpAddToClient"
      }, {
        "name" : "ListRecords"
      }, {
        "name" : "OpenBrowser"
      }, {
        "name" : "UpdateCollection"
      }, {
        "name" : "UpdateRecord"
      } ],
      "source" : "https://github.com/datastax/astra-db-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/573369?s=200&v=4",
      "prompts" : 0,
      "title" : "Astra DB",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/astra-db.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/astra-db.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/datastax/astra-db-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "97114f43-2105-4773-b0f1-5a794185b86c",
      "versionId" : "50a1a93c-602f-434a-a766-342609e7c21b"
    }
  }
}, {
  "name" : "com.docker.mcp/astro-docs",
  "description" : "Access the latest Astro web framework documentation, guides, and API references.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.docs.astro.build/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "documentation",
      "tags" : [ "documentation", "astro", "web-framework", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "search_astro_docs"
      } ],
      "source" : "",
      "icon" : "https://astro.build/favicon.svg",
      "prompts" : 0,
      "title" : "Astro Docs",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/astro-docs.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/astro-docs.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "upstream" : "https://github.com/withastro/docs-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "aea7bc2f-4860-4ed3-8856-abf711d1ff5c",
      "versionId" : "7ed8c311-7334-4203-8937-af43f879a153"
    }
  }
}, {
  "name" : "com.docker.mcp/atlan",
  "description" : "MCP server for interacting with Atlan services including asset search, updates, and lineage traversal for comprehensive data governance and discovery.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/atlan",
    "version" : "sha256:b7a3400454cd1156987052372567fdecb5b98dc4f336a7fce05cba919b886dd9",
    "environmentVariables" : [ {
      "name" : "ATLAN_API_KEY",
      "value" : "{atlan.atlan_api_key}",
      "variables" : {
        "atlan.atlan_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "ATLAN_BASE_URL",
      "value" : "{atlan.atlan_base_url}",
      "variables" : {
        "atlan.atlan_base_url" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 920,
      "githubStars" : 19,
      "category" : "database",
      "tags" : [ "atlan", "metadata" ],
      "license" : "MIT License",
      "owner" : "atlanhq",
      "tools" : [ {
        "name" : "create_glossaries"
      }, {
        "name" : "create_glossary_categories"
      }, {
        "name" : "create_glossary_terms"
      }, {
        "name" : "get_assets_by_dsl_tool"
      }, {
        "name" : "search_assets_tool"
      }, {
        "name" : "traverse_lineage_tool"
      }, {
        "name" : "update_assets_tool"
      } ],
      "source" : "https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol",
      "icon" : "https://avatars.githubusercontent.com/u/47002402?s=200&v=4",
      "prompts" : 0,
      "title" : "Atlan MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/atlan.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/atlan.json",
      "dateAdded" : "2025-07-18T06:21:15Z",
      "upstream" : "https://github.com/atlanhq/agent-toolkit",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "7fc466f6-624a-4eb5-b24f-a384c6dde96a",
      "versionId" : "f5c5cf7f-0ca7-4555-ace2-16c26f6bfaac"
    }
  }
}, {
  "name" : "com.docker.mcp/atlas-docs",
  "description" : "Provide LLMs hosted, clean markdown documentation of libraries and frameworks.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/atlas-docs",
    "version" : "sha256:4d235adb74986ea8f8ff1751a4f5d28532d0e2aa03d3c55a3fcb1c57e3917079",
    "environmentVariables" : [ {
      "name" : "ATLAS_API_URL",
      "value" : "{atlas-docs.api_url}",
      "isRepeated" : false,
      "variables" : {
        "atlas-docs.api_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3611,
      "stars" : 2,
      "githubStars" : 32,
      "category" : "devops",
      "tags" : [ "atlas-docs", "devops" ],
      "license" : "MIT License",
      "owner" : "CartographAI",
      "tools" : [ {
        "name" : "get_docs_full"
      }, {
        "name" : "get_docs_index"
      }, {
        "name" : "get_docs_page"
      }, {
        "name" : "list_docs"
      }, {
        "name" : "search_docs"
      } ],
      "source" : "https://github.com/CartographAI/atlas-docs-mcp/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/184709581?s=200&v=4",
      "prompts" : 0,
      "title" : "Atlas Docs",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/atlas-docs.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/atlas-docs.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/CartographAI/atlas-docs-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "65b89979-39dd-40c7-97d6-e22fa326e0e9",
      "versionId" : "dc269501-a171-4cf5-8f52-dfd86946422d"
    }
  }
}, {
  "name" : "com.docker.mcp/audiense-insights",
  "description" : "Audiense Insights MCP Server is a server based on the Model Context Protocol (MCP) that allows Claude and other MCP-compatible clients to interact with your Audiense Insights account.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/audiense-insights",
    "version" : "sha256:064623a07a6b1d4282a94cb338ca5872db1326dd09591f8f6b708d15326bf962",
    "environmentVariables" : [ {
      "name" : "AUDIENSE_CLIENT_SECRET",
      "value" : "{audiense-insights.client_secret}",
      "variables" : {
        "audiense-insights.client_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "TWITTER_BEARER_TOKEN",
      "value" : "{audiense-insights.twitter_bearer_token}",
      "variables" : {
        "audiense-insights.twitter_bearer_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "AUDIENSE_CLIENT_ID",
      "value" : "{audiense-insights.client_id}",
      "isRepeated" : false,
      "variables" : {
        "audiense-insights.client_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2221,
      "githubStars" : 16,
      "category" : "devops",
      "tags" : [ "audiense-insights", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "AudienseCo",
      "tools" : [ {
        "name" : "compare-audience-influencers"
      }, {
        "name" : "get-audience-content"
      }, {
        "name" : "get-audience-insights"
      }, {
        "name" : "get-baselines"
      }, {
        "name" : "get-categories"
      }, {
        "name" : "get-report-info"
      }, {
        "name" : "get-reports"
      }, {
        "name" : "report-summary"
      } ],
      "source" : "https://github.com/AudienseCo/mcp-audiense-insights/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/2454008?s=200&v=4",
      "prompts" : 0,
      "title" : "Audiense Insights",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/audiense-insights.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/audiense-insights.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/AudienseCo/mcp-audiense-insights",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5b0e3348-c942-42eb-80ef-33a6deef9050",
      "versionId" : "b23652f0-167f-46c1-8620-edb06ca72096"
    }
  }
}, {
  "name" : "com.docker.mcp/aws-cdk-mcp-server",
  "description" : "AWS Cloud Development Kit (CDK) best practices, infrastructure as code patterns, and security compliance with CDK Nag.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aws-cdk-mcp-server",
    "version" : "sha256:73b7ecb48adbc9dd3b170c859c4a11d03b6167590d4b0dee5396e6b61aa1a0eb"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 9816,
      "githubStars" : 6487,
      "category" : "devops",
      "tags" : [ "aws-cdk-mcp-server", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "awslabs",
      "tools" : [ {
        "name" : "CDKGeneralGuidance"
      }, {
        "name" : "CheckCDKNagSuppressions"
      }, {
        "name" : "ExplainCDKNagRule"
      }, {
        "name" : "GenerateBedrockAgentSchema"
      }, {
        "name" : "GetAwsSolutionsConstructPattern"
      }, {
        "name" : "LambdaLayerDocumentationProvider"
      }, {
        "name" : "SearchGenAICDKConstructs"
      } ],
      "source" : "https://github.com/awslabs/mcp/tree/main/src/cdk-mcp-server",
      "icon" : "https://avatars.githubusercontent.com/u/3299148?v=4",
      "prompts" : 0,
      "title" : "AWS CDK",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aws-cdk-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aws-cdk-mcp-server.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/awslabs/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a7e1d762-eb1f-4ddd-a1bb-14f1ffd59430",
      "versionId" : "36cd9816-06be-4754-85f4-63c0ed893c7b"
    }
  }
}, {
  "name" : "com.docker.mcp/aws-core-mcp-server",
  "description" : "Starting point for using the awslabs MCP servers.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aws-core-mcp-server",
    "version" : "sha256:8acdccef88507a6a91fe9047a645af72cdc78164328408940716195224dae49c"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 34182,
      "githubStars" : 6487,
      "category" : "devops",
      "tags" : [ "aws-core-mcp-server", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "awslabs",
      "tools" : [ {
        "name" : "prompt_understanding"
      } ],
      "source" : "https://github.com/awslabs/mcp/tree/main/src/core-mcp-server",
      "icon" : "https://avatars.githubusercontent.com/u/3299148?v=4",
      "prompts" : 0,
      "title" : "AWS Core MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aws-core-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aws-core-mcp-server.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/awslabs/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2514c3ef-77e9-4973-a9c9-a7f23f1c8df7",
      "versionId" : "97337fdf-a8a7-4804-828e-6eb65eed5db6"
    }
  }
}, {
  "name" : "com.docker.mcp/aws-diagram",
  "description" : "Seamlessly create diagrams using the Python diagrams package DSL. This server allows you to generate AWS diagrams, sequence diagrams, flow diagrams, and class diagrams using Python code.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aws-diagram",
    "version" : "sha256:9f7eac66272a36761ab1864723696f9092c822903a0cdfc6ae3d5a0325457cc9"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 12662,
      "stars" : 1,
      "githubStars" : 6487,
      "category" : "devops",
      "tags" : [ "aws-diagram", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "awslabs",
      "tools" : [ {
        "name" : "generate_diagram"
      }, {
        "name" : "get_diagram_examples"
      }, {
        "name" : "list_icons"
      } ],
      "source" : "https://github.com/awslabs/mcp/tree/main/src/aws-diagram-mcp-server",
      "icon" : "https://avatars.githubusercontent.com/u/3299148?v=4",
      "prompts" : 0,
      "title" : "AWS Diagram",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aws-diagram.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aws-diagram.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/awslabs/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5c23ec99-0e90-496b-9d17-0fac7fe9fb14",
      "versionId" : "9ff72be6-0eb3-42da-8ca5-d0f7ddbfb82e"
    }
  }
}, {
  "name" : "com.docker.mcp/aws-documentation",
  "description" : "Tools to access AWS documentation, search for content, and get recommendations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aws-documentation",
    "version" : "sha256:b468957edbab8c27ac312e4656a54ce267b3dd59f59143786c7f726a1c3cf94f"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 27043,
      "stars" : 1,
      "githubStars" : 6487,
      "category" : "devops",
      "tags" : [ "aws-documentation", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "awslabs",
      "tools" : [ {
        "name" : "read_documentation"
      }, {
        "name" : "recommend"
      }, {
        "name" : "search_documentation"
      } ],
      "source" : "https://github.com/awslabs/mcp/tree/main/src/aws-documentation-mcp-server",
      "icon" : "https://avatars.githubusercontent.com/u/3299148?v=4",
      "prompts" : 0,
      "title" : "AWS Documentation",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aws-documentation.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aws-documentation.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/awslabs/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "14c2997d-dab0-491c-b874-91fe3a6dc897",
      "versionId" : "fb9baa90-0ec1-4b43-a24d-d7a24b61151a"
    }
  }
}, {
  "name" : "com.docker.mcp/aws-kb-retrieval-server",
  "description" : "An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aws-kb-retrieval-server",
    "version" : "sha256:1522c7ffee3f84faf7a157f7c185cb0923123823f19bfd14ce26498fcd1377db",
    "environmentVariables" : [ {
      "name" : "AWS_SECRET_ACCESS_KEY",
      "value" : "{aws.secret_access_key}",
      "variables" : {
        "aws.secret_access_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "AWS_ACCESS_KEY_ID",
      "value" : "{aws-kb-retrieval-server.access_key_id}",
      "isRepeated" : false,
      "variables" : {
        "aws-kb-retrieval-server.access_key_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3453,
      "stars" : 6,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "aws", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "retrieve_from_aws_kb"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "AWS KB Retrieval (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aws-kb-retrieval-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aws-kb-retrieval-server.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a4bb7987-4446-40ba-a42a-c0b465b4196b",
      "versionId" : "8138d778-bce8-42c9-a8d4-67fb00a3ab40"
    }
  }
}, {
  "name" : "com.docker.mcp/aws-terraform",
  "description" : "Terraform on AWS best practices, infrastructure as code patterns, and security compliance with Checkov.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/aws-terraform",
    "version" : "sha256:2949c45e747b265f7e8609fbc0c148b22444cc5dd28b5aa1294833b1b3770e88"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 10388,
      "githubStars" : 6487,
      "category" : "devops",
      "tags" : [ "aws", "terraform" ],
      "license" : "Apache License 2.0",
      "owner" : "awslabs",
      "tools" : [ {
        "name" : "ExecuteTerraformCommand"
      }, {
        "name" : "ExecuteTerragruntCommand"
      }, {
        "name" : "RunCheckovScan"
      }, {
        "name" : "SearchAwsProviderDocs"
      }, {
        "name" : "SearchAwsccProviderDocs"
      }, {
        "name" : "SearchSpecificAwsIaModules"
      }, {
        "name" : "SearchUserProvidedModule"
      } ],
      "source" : "https://github.com/awslabs/mcp/tree/main/src/terraform-mcp-server",
      "icon" : "https://avatars.githubusercontent.com/u/3299148?v=4",
      "prompts" : 0,
      "title" : "AWS Terraform",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/aws-terraform.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/aws-terraform.json",
      "dateAdded" : "2025-05-22T20:04:34Z",
      "upstream" : "https://github.com/awslabs/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f3b7a9dc-33df-4275-a6a9-0813f9881476",
      "versionId" : "f65af891-861e-4a62-bf8a-c01abca92c99"
    }
  }
}, {
  "name" : "com.docker.mcp/beagle-security",
  "description" : "Connects with the Beagle Security backend using a user token to manage applications, run automated security tests, track vulnerabilities across environments, and gain intelligence from Application and API vulnerability data.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/beagle-security-mcp-server",
    "version" : "sha256:4be5e4ae43698ba5317d303052723b8201002e1237b0e515d0a5461c49c797f2",
    "environmentVariables" : [ {
      "name" : "BEAGLE_SECURITY_API_TOKEN",
      "value" : "{beagle-security.Beagle-Security-Personal-access-token}",
      "variables" : {
        "beagle-security.Beagle-Security-Personal-access-token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 761,
      "stars" : 1,
      "category" : "devops",
      "tags" : [ "devops" ],
      "license" : "MIT License",
      "owner" : "beaglesecurity",
      "tools" : [ {
        "name" : "beagle_create_application"
      }, {
        "name" : "beagle_create_project"
      }, {
        "name" : "beagle_delete_application"
      }, {
        "name" : "beagle_delete_project"
      }, {
        "name" : "beagle_get_application"
      }, {
        "name" : "beagle_get_domain_signature"
      }, {
        "name" : "beagle_get_test_result"
      }, {
        "name" : "beagle_get_test_status"
      }, {
        "name" : "beagle_list_applications"
      }, {
        "name" : "beagle_list_projects"
      }, {
        "name" : "beagle_list_running_tests"
      }, {
        "name" : "beagle_list_test_sessions"
      }, {
        "name" : "beagle_modify_application"
      }, {
        "name" : "beagle_modify_project"
      }, {
        "name" : "beagle_start_test"
      }, {
        "name" : "beagle_stop_test"
      }, {
        "name" : "beagle_verify_domain"
      } ],
      "source" : "https://github.com/beaglesecurity/beagle-security-mcp-server/tree/main",
      "icon" : "https://cdn.beaglesecurity.com/assets/brand/png/beagle-blue-icon.png",
      "prompts" : 0,
      "title" : "Beagle security MCP server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/beagle-security.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/beagle-security.json",
      "dateAdded" : "2025-07-08T13:38:25Z",
      "upstream" : "https://github.com/beaglesecurity/beagle-security-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "03387de1-fd5c-4ffb-9c79-01ac98cec2a3",
      "versionId" : "c6f2f549-b220-4cfb-a2f2-7b2c63581c43"
    }
  }
}, {
  "name" : "com.docker.mcp/bitrefill",
  "description" : "A Model Context Protocol Server connector for Bitrefill public API, to enable AI agents to search and shop on Bitrefill.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/bitrefill",
    "version" : "sha256:612bbf82394ab4974ee0f39aba38f48aed61a9cb06adab0f3fce1b648d8ade16",
    "environmentVariables" : [ {
      "name" : "BITREFILL_API_SECRET",
      "value" : "{bitrefill.api_secret}",
      "variables" : {
        "bitrefill.api_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "BITREFILL_API_ID",
      "value" : "{bitrefill.api_id}",
      "isRepeated" : false,
      "variables" : {
        "bitrefill.api_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2068,
      "githubStars" : 5,
      "category" : "devops",
      "tags" : [ "bitrefill", "devops" ],
      "license" : "MIT License",
      "owner" : "bitrefill",
      "tools" : [ {
        "name" : "categories"
      }, {
        "name" : "create_invoice"
      }, {
        "name" : "detail"
      }, {
        "name" : "get_account_balance"
      }, {
        "name" : "get_invoice"
      }, {
        "name" : "get_invoices"
      }, {
        "name" : "get_order"
      }, {
        "name" : "get_orders"
      }, {
        "name" : "pay_invoice"
      }, {
        "name" : "ping"
      }, {
        "name" : "search"
      }, {
        "name" : "unseal_order"
      } ],
      "source" : "https://github.com/bitrefill/bitrefill-mcp-server/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/10897174?s=200&v=4",
      "prompts" : 0,
      "title" : "Bitrefill",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/bitrefill.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/bitrefill.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/bitrefill/bitrefill-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "087a5d56-281f-42be-9330-14a010bd482c",
      "versionId" : "08ba2427-8173-4901-94f2-7d825e36c993"
    }
  }
}, {
  "name" : "com.docker.mcp/box",
  "description" : "An MCP server capable of interacting with the Box API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/box",
    "version" : "sha256:4db7963505c2ea80c0f8c867e7062f74d96c839687f1b79cedb3836a74498656",
    "environmentVariables" : [ {
      "name" : "BOX_CLIENT_SECRET",
      "value" : "{box.client_secret}",
      "variables" : {
        "box.client_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "BOX_CLIENT_ID",
      "value" : "{box.client_id}",
      "isRepeated" : false,
      "variables" : {
        "box.client_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2486,
      "stars" : 3,
      "category" : "devops",
      "tags" : [ "box", "devops" ],
      "owner" : "dgageot",
      "tools" : [ {
        "name" : "box_ai_extract_data"
      }, {
        "name" : "box_ask_ai_tool"
      }, {
        "name" : "box_ask_ai_tool_multi_file"
      }, {
        "name" : "box_authorize_app_tool"
      }, {
        "name" : "box_download_file_tool"
      }, {
        "name" : "box_list_folder_content_by_folder_id"
      }, {
        "name" : "box_manage_folder_tool"
      }, {
        "name" : "box_read_tool"
      }, {
        "name" : "box_search_folder_by_name"
      }, {
        "name" : "box_search_tool"
      }, {
        "name" : "box_upload_file_tool"
      }, {
        "name" : "box_who_am_i"
      } ],
      "source" : "https://github.com/dgageot/mcp-server-box/tree/dockerfile",
      "icon" : "https://avatars.githubusercontent.com/u/8659759?s=200&v=4",
      "prompts" : 0,
      "title" : "Box",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/box.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/box.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/dgageot/mcp-server-box",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e93538ea-1d5a-48fe-ab97-f5e5c9b96ba9",
      "versionId" : "63688d43-7158-49bb-a5bc-b494a10e6b11"
    }
  }
}, {
  "name" : "com.docker.mcp/brave",
  "description" : "Search the Web for pages, images, news, videos, and more using the Brave Search API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/brave-search",
    "version" : "sha256:e65021d3e07e7a1a345239d7ca08bc5666a08132170885de8f2544d4e0b79db8",
    "environmentVariables" : [ {
      "name" : "BRAVE_API_KEY",
      "value" : "{brave.api_key}",
      "variables" : {
        "brave.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "BRAVE_MCP_TRANSPORT",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 39354,
      "stars" : 20,
      "githubStars" : 203,
      "category" : "search",
      "tags" : [ "brave", "search" ],
      "license" : "MIT License",
      "owner" : "brave",
      "tools" : [ {
        "name" : "brave_image_search"
      }, {
        "name" : "brave_local_search"
      }, {
        "name" : "brave_news_search"
      }, {
        "name" : "brave_summarizer"
      }, {
        "name" : "brave_video_search"
      }, {
        "name" : "brave_web_search"
      } ],
      "source" : "https://github.com/brave/brave-search-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/12301619?s=200&v=4",
      "prompts" : 0,
      "title" : "Brave Search",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/brave.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/brave.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/brave/brave-search-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "280f25a5-dcb6-46e8-a5d3-ad42b0fa21c5",
      "versionId" : "509c0d42-068e-4b03-9173-d3ee8c8f13e5"
    }
  }
}, {
  "name" : "com.docker.mcp/buildkite",
  "description" : "Buildkite MCP lets agents interact with Buildkite Builds, Jobs, Logs, Packages and Test Suites.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/buildkite",
    "version" : "sha256:98cedcc45e1fd09bacb7d45b656c5f8eabb4f1aa3d47339d15937f72480f5502",
    "environmentVariables" : [ {
      "name" : "BUILDKITE_API_TOKEN",
      "value" : "{buildkite.api_key}",
      "variables" : {
        "buildkite.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 828,
      "githubStars" : 37,
      "category" : "devops",
      "tags" : [ "devops" ],
      "license" : "MIT License",
      "owner" : "buildkite",
      "tools" : [ {
        "name" : "access_token"
      }, {
        "name" : "create_build"
      }, {
        "name" : "create_pipeline"
      }, {
        "name" : "current_user"
      }, {
        "name" : "get_artifact"
      }, {
        "name" : "get_build"
      }, {
        "name" : "get_build_test_engine_runs"
      }, {
        "name" : "get_cluster"
      }, {
        "name" : "get_cluster_queue"
      }, {
        "name" : "get_failed_executions"
      }, {
        "name" : "get_job_logs"
      }, {
        "name" : "get_jobs"
      }, {
        "name" : "get_pipeline"
      }, {
        "name" : "get_test"
      }, {
        "name" : "get_test_run"
      }, {
        "name" : "list_annotations"
      }, {
        "name" : "list_artifacts"
      }, {
        "name" : "list_builds"
      }, {
        "name" : "list_cluster_queues"
      }, {
        "name" : "list_clusters"
      }, {
        "name" : "list_pipelines"
      }, {
        "name" : "list_test_runs"
      }, {
        "name" : "update_pipeline"
      }, {
        "name" : "user_token_organization"
      } ],
      "source" : "https://github.com/buildkite/buildkite-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/5055988?v=4",
      "prompts" : 0,
      "title" : "Buildkite",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/buildkite.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/buildkite.json",
      "dateAdded" : "2025-07-21T12:46:15Z",
      "upstream" : "https://github.com/buildkite/buildkite-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "deba525c-06d1-4f6e-889a-be9b8215080a",
      "versionId" : "f8b8f793-dc5a-4820-a947-ccf8cc4ebb27"
    }
  }
}, {
  "name" : "com.docker.mcp/camunda",
  "description" : "Tools to interact with the Camunda 7 Community Edition Engine using the Model Context Protocol (MCP). Whether you're automating workflows, querying process instances, or integrating with external systems, Camunda MCP Server is your agentic solution for seamless interaction with Camunda.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/camunda",
    "version" : "sha256:fbea3848bcb6ab4ee7ef287f31d7b14c28f081ae61c456dd3b495e15bf02b834",
    "environmentVariables" : [ {
      "name" : "CAMUNDA_HOST",
      "value" : "{camunda.camundahost}",
      "isRepeated" : false,
      "variables" : {
        "camunda.camundahost" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 284,
      "githubStars" : 4,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "license" : "MIT License",
      "owner" : "lepoco",
      "tools" : [ {
        "name" : "complete_user_task"
      }, {
        "name" : "count_incidents"
      }, {
        "name" : "count_instances"
      }, {
        "name" : "count_user_tasks"
      }, {
        "name" : "count_variables"
      }, {
        "name" : "list_definitions"
      }, {
        "name" : "list_incidents"
      }, {
        "name" : "list_instances"
      }, {
        "name" : "list_user_tasks"
      }, {
        "name" : "list_variables"
      }, {
        "name" : "resolve_incident"
      }, {
        "name" : "send_message"
      } ],
      "source" : "https://github.com/lepoco/mcp-camunda/tree/main",
      "icon" : "https://raw.githubusercontent.com/lepoco/mcp-camunda/refs/heads/main/build/icon.png",
      "prompts" : 0,
      "title" : "Camunda BPM process engine MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/camunda.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/camunda.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/lepoco/mcp-camunda",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "7f17200b-e59b-4a9f-9f90-d6b7f968aee3",
      "versionId" : "6871778d-6076-4891-b7b7-1d92a7491f9c"
    }
  }
}, {
  "name" : "com.docker.mcp/cdata-connectcloud",
  "description" : "This fully functional MCP Server allows you to connect to any data source in Connect Cloud from Claude Desktop.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/cdata-connectcloud",
    "version" : "sha256:0cf0d5812998d38966ba64e6c4dbaabd153fe20177bcd34ee28647cd7de5929e",
    "environmentVariables" : [ {
      "name" : "CDATA_PAT",
      "value" : "{cdata-connectcloud.pat}",
      "variables" : {
        "cdata-connectcloud.pat" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CDATA_USERNAME",
      "value" : "{cdata-connectcloud.username}",
      "isRepeated" : false,
      "variables" : {
        "cdata-connectcloud.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1421,
      "stars" : 3,
      "githubStars" : 2,
      "category" : "devops",
      "tags" : [ "cdata-connectcloud", "devops" ],
      "owner" : "CDataSoftware",
      "tools" : [ {
        "name" : "execData"
      }, {
        "name" : "getCatalogs"
      }, {
        "name" : "getColumns"
      }, {
        "name" : "getExportedKeys"
      }, {
        "name" : "getImportedKeys"
      }, {
        "name" : "getIndexes"
      }, {
        "name" : "getPrimaryKeys"
      }, {
        "name" : "getProcedureParameters"
      }, {
        "name" : "getProcedures"
      }, {
        "name" : "getSchemas"
      }, {
        "name" : "getTables"
      }, {
        "name" : "queryData"
      } ],
      "source" : "https://github.com/CDataSoftware/connectcloud-mcp-server/tree/00fe03b372819d143f266fd49e53d98181f4dd12",
      "icon" : "https://avatars.githubusercontent.com/u/24947354?v=4",
      "prompts" : 0,
      "title" : "CData Connect Cloud",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/cdata-connectcloud.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/cdata-connectcloud.json",
      "dateAdded" : "2025-05-15T20:08:35Z",
      "upstream" : "https://github.com/CDataSoftware/connectcloud-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ccc3153a-f2aa-4b56-9686-0460577623c3",
      "versionId" : "156b7477-7daf-488f-a641-305c07629f12"
    }
  }
}, {
  "name" : "com.docker.mcp/charmhealth-mcp-server",
  "description" : "An MCP server for CharmHealth EHR that allows LLMs and MCP clients to interact with patient records, encounters, and practice information.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/charmhealth-mcp-server",
    "version" : "sha256:55b309736e904905aa8495488587128f2ad27cbf065731f20dacf1a824afc602",
    "environmentVariables" : [ {
      "name" : "CHARMHEALTH_API_KEY",
      "value" : "{charmhealth-mcp-server.charmhealth_api_key}",
      "variables" : {
        "charmhealth-mcp-server.charmhealth_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CHARMHEALTH_REFRESH_TOKEN",
      "value" : "{charmhealth-mcp-server.charmhealth_refresh_token}",
      "variables" : {
        "charmhealth-mcp-server.charmhealth_refresh_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CHARMHEALTH_BASE_URL",
      "value" : "{charmhealth-mcp-server.charmhealth_base_url}",
      "isRepeated" : false,
      "variables" : {
        "charmhealth-mcp-server.charmhealth_base_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CHARMHEALTH_CLIENT_ID",
      "value" : "{charmhealth-mcp-server.charmhealth_client_id}",
      "isRepeated" : false,
      "variables" : {
        "charmhealth-mcp-server.charmhealth_client_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CHARMHEALTH_CLIENT_SECRET",
      "value" : "{charmhealth-mcp-server.charmhealth_client_secret}",
      "isRepeated" : false,
      "variables" : {
        "charmhealth-mcp-server.charmhealth_client_secret" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CHARMHEALTH_REDIRECT_URI",
      "value" : "{charmhealth-mcp-server.charmhealth_redirect_uri}",
      "isRepeated" : false,
      "variables" : {
        "charmhealth-mcp-server.charmhealth_redirect_uri" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CHARMHEALTH_TOKEN_URL",
      "value" : "{charmhealth-mcp-server.charmhealth_token_url}",
      "isRepeated" : false,
      "variables" : {
        "charmhealth-mcp-server.charmhealth_token_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 245,
      "githubStars" : 1,
      "category" : "productivity",
      "tags" : [ "charmhealth", "ehr", "medical", "productivity" ],
      "license" : "MIT License",
      "owner" : "CharmHealth",
      "tools" : [ {
        "name" : "findPatients"
      }, {
        "name" : "getPracticeInfo"
      }, {
        "name" : "manageAppointments"
      }, {
        "name" : "manageEncounter"
      }, {
        "name" : "managePatient"
      }, {
        "name" : "managePatientAllergies"
      }, {
        "name" : "managePatientDiagnoses"
      }, {
        "name" : "managePatientDrugs"
      }, {
        "name" : "managePatientFiles"
      }, {
        "name" : "managePatientLabs"
      }, {
        "name" : "managePatientNotes"
      }, {
        "name" : "managePatientRecalls"
      }, {
        "name" : "managePatientVitals"
      }, {
        "name" : "reviewPatientHistory"
      } ],
      "source" : "https://github.com/CharmHealth/charm-mcp-server/tree/main",
      "icon" : "https://raw.githubusercontent.com/CharmHealth/charm-mcp-server/d7928f1ed514f59656e36693749dffea52ab04c2/Charm_icon.png",
      "prompts" : 0,
      "title" : "CharmHealth MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/charmhealth-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/charmhealth-mcp-server.json",
      "dateAdded" : "2025-09-04T19:31:40Z",
      "upstream" : "https://github.com/CharmHealth/charm-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "604f1d21-a4c7-4166-b666-35b9e3321379",
      "versionId" : "4a34c6ab-7989-41df-97ad-6ddbbb4622e0"
    }
  }
}, {
  "name" : "com.docker.mcp/chroma",
  "description" : "A Model Context Protocol (MCP) server implementation that provides database capabilities for Chroma.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/chroma",
    "version" : "sha256:c050ca8e1d4e258dd66649fc91acbc77615ce4b89bbc18281a985932bd9c9874",
    "environmentVariables" : [ {
      "name" : "CHROMA_API_KEY",
      "value" : "{chroma.api_key}",
      "variables" : {
        "chroma.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 4279,
      "stars" : 5,
      "githubStars" : 367,
      "category" : "devops",
      "tags" : [ "chroma", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "chroma-core",
      "tools" : [ {
        "name" : "chroma_add_documents"
      }, {
        "name" : "chroma_create_collection"
      }, {
        "name" : "chroma_delete_collection"
      }, {
        "name" : "chroma_delete_documents"
      }, {
        "name" : "chroma_fork_collection"
      }, {
        "name" : "chroma_get_collection_count"
      }, {
        "name" : "chroma_get_collection_info"
      }, {
        "name" : "chroma_get_documents"
      }, {
        "name" : "chroma_list_collections"
      }, {
        "name" : "chroma_modify_collection"
      }, {
        "name" : "chroma_peek_collection"
      }, {
        "name" : "chroma_query_documents"
      }, {
        "name" : "chroma_update_documents"
      } ],
      "source" : "https://github.com/chroma-core/chroma-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/105881770?s=200&v=4",
      "prompts" : 0,
      "title" : "Chroma",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/chroma.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/chroma.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/chroma-core/chroma-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "66084a53-1f8e-4b09-ba6f-cfb0f8336287",
      "versionId" : "152c6380-953a-4dae-89da-789dcab10a4b"
    }
  }
}, {
  "name" : "com.docker.mcp/circleci",
  "description" : "A specialized server implementation for the Model Context Protocol (MCP) designed to integrate with CircleCI's development workflow. This project serves as a bridge between CircleCI's infrastructure and the Model Context Protocol, enabling enhanced AI-powered development experiences.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/circleci",
    "version" : "sha256:1d0029137061c3769c1ca2ef112c4c5043bf42f1565ccb004ffa4bf2cb99a431",
    "environmentVariables" : [ {
      "name" : "CIRCLECI_TOKEN",
      "value" : "{circleci.token}",
      "variables" : {
        "circleci.token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CIRCLECI_BASE_URL",
      "value" : "{circleci.url}",
      "isRepeated" : false,
      "variables" : {
        "circleci.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3044,
      "githubStars" : 64,
      "category" : "devops",
      "tags" : [ "circleci", "devops" ],
      "license" : "Other",
      "owner" : "CircleCI-Public",
      "tools" : [ {
        "name" : "analyze_diff"
      }, {
        "name" : "config_helper"
      }, {
        "name" : "create_prompt_template"
      }, {
        "name" : "find_flaky_tests"
      }, {
        "name" : "get_build_failure_logs"
      }, {
        "name" : "get_job_test_results"
      }, {
        "name" : "get_latest_pipeline_status"
      }, {
        "name" : "list_followed_projects"
      }, {
        "name" : "recommend_prompt_template_tests"
      }, {
        "name" : "rerun_workflow"
      }, {
        "name" : "run_evaluation_tests"
      }, {
        "name" : "run_pipeline"
      } ],
      "source" : "https://github.com/cmrigney/mcp-server-circleci/tree/use-cmd-docker",
      "icon" : "https://avatars.githubusercontent.com/u/26607840?s=200&v=4",
      "prompts" : 0,
      "title" : "CircleCI",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/circleci.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/circleci.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/CircleCI-Public/mcp-server-circleci",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "423e8511-7566-4cb8-a80f-1c0c1a14ff06",
      "versionId" : "92d72ba7-d516-4e0f-a302-934528b1b881"
    }
  }
}, {
  "name" : "com.docker.mcp/clickhouse",
  "description" : "Official ClickHouse MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/clickhouse",
    "version" : "sha256:146ffa1bd41f3fb32ff005c807a95f4a999a18c75ee7c5917fa933f0396b246a",
    "environmentVariables" : [ {
      "name" : "CLICKHOUSE_PASSWORD",
      "value" : "{clickhouse.password}",
      "variables" : {
        "clickhouse.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CLICKHOUSE_HOST",
      "value" : "{clickhouse.host}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CLICKHOUSE_PORT",
      "value" : "{clickhouse.port}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CLICKHOUSE_USER",
      "value" : "{clickhouse.user}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.user" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CLICKHOUSE_SECURE",
      "value" : "{clickhouse.secure}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.secure" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CLICKHOUSE_VERIFY",
      "value" : "{clickhouse.verify}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.verify" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CLICKHOUSE_CONNECT_TIMEOUT",
      "value" : "{clickhouse.connect_timeout}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.connect_timeout" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CLICKHOUSE_SEND_RECEIVE_TIMEOUT",
      "value" : "{clickhouse.send_receive_timeout}",
      "isRepeated" : false,
      "variables" : {
        "clickhouse.send_receive_timeout" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 11514,
      "stars" : 2,
      "githubStars" : 544,
      "category" : "database",
      "tags" : [ "database", "clickhouse" ],
      "license" : "Apache License 2.0",
      "owner" : "ClickHouse",
      "tools" : [ {
        "name" : "list_databases"
      }, {
        "name" : "list_tables"
      }, {
        "name" : "run_select_query"
      } ],
      "source" : "https://github.com/ClickHouse/mcp-clickhouse/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/54801242?v=4",
      "prompts" : 0,
      "title" : "Official ClickHouse MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/clickhouse.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/clickhouse.json",
      "dateAdded" : "2025-06-12T18:00:16Z",
      "upstream" : "https://github.com/ClickHouse/mcp-clickhouse",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e23de030-01e7-4fda-bfe0-954fdd98e232",
      "versionId" : "a4abf7c1-6406-4efd-8b83-7aa0acc5645c"
    }
  }
}, {
  "name" : "com.docker.mcp/close",
  "description" : "Streamline sales processes with integrated calling, email, SMS, and automated workflows for small and scaling businesses.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.close.com/mcp",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${CLOSE_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "crm",
      "tags" : [ "crm", "sales", "customer-management", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=close.com&sz=64",
      "prompts" : 0,
      "title" : "Close",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/close.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/close.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ffcfae54-0077-479a-86d5-ccce566f9b92",
      "versionId" : "bdee785f-8576-42b8-8a62-5b64df0b18a9"
    }
  }
}, {
  "name" : "com.docker.mcp/cloud-run-mcp",
  "description" : "MCP server to deploy apps to Cloud Run.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/cloud-run-mcp",
    "version" : "sha256:f403d6b0ee5fc77f7ccd2ff1ced4f1719963e2a364d2aa770d6aa021c4c378c8",
    "environmentVariables" : [ {
      "name" : "GOOGLE_APPLICATION_CREDENTIALS",
      "value" : "/app/.config/gcloud/application_default_credentials.json"
    } ],
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{cloud-run-mcp.credentials_path}:/app/.config/gcloud/application_default_credentials.json",
      "isRepeated" : false,
      "variables" : {
        "cloud-run-mcp.credentials_path" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "path to application-default credentials (eg $HOME/.config/gcloud/application_default_credentials.json )"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2789,
      "githubStars" : 383,
      "category" : "devops",
      "tags" : [ "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "GoogleCloudPlatform",
      "tools" : [ {
        "name" : "create_project"
      }, {
        "name" : "deploy_container_image"
      }, {
        "name" : "deploy_file_contents"
      }, {
        "name" : "deploy_local_folder"
      }, {
        "name" : "get_service"
      }, {
        "name" : "get_service_log"
      }, {
        "name" : "list_projects"
      }, {
        "name" : "list_services"
      } ],
      "source" : "https://github.com/GoogleCloudPlatform/cloud-run-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/2810941?v=4",
      "prompts" : 0,
      "title" : "Cloud Run MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/cloud-run-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/cloud-run-mcp.json",
      "dateAdded" : "2025-08-08T16:55:52Z",
      "upstream" : "https://github.com/GoogleCloudPlatform/cloud-run-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "4b23d2e6-5e79-4190-8632-ba2e29aabe65",
      "versionId" : "c4a4f1a4-7647-46c4-ae40-b7363ec44e0b"
    }
  }
}, {
  "name" : "com.docker.mcp/cloudflare-docs",
  "description" : "Access the latest documentation on Cloudflare products such as Workers, Pages, R2, D1, KV.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "sse",
    "url" : "https://docs.mcp.cloudflare.com/sse"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "documentation",
      "tags" : [ "documentation", "cloudflare", "cloud", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "search_cloudflare_documentation"
      }, {
        "name" : "migrate_pages_to_workers_guide"
      } ],
      "source" : "",
      "icon" : "https://www.cloudflare.com/favicon.ico",
      "prompts" : 0,
      "title" : "Cloudflare Docs",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/cloudflare-docs.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/cloudflare-docs.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f2aef310-93e1-41a9-aa36-a0d37fa56aa8",
      "versionId" : "d83581fa-4dca-4e8d-8a7f-d30d28533c92"
    }
  }
}, {
  "name" : "com.docker.mcp/cockroachdb",
  "description" : "Enable AI agents to manage, monitor, and query CockroachDB using natural language. Perform complex database operations, cluster management, and query execution seamlessly through AI-driven workflows. Integrate effortlessly with MCP clients for scalable and high-performance data operations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/cockroachdb",
    "version" : "sha256:4863594a246c6f86a5c4c87383a679353e9a6b4d85c3327c48464669cd236b1e",
    "environmentVariables" : [ {
      "name" : "CRDB_PWD",
      "value" : "{cockroachdb.password}",
      "variables" : {
        "cockroachdb.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "CRDB_HOST",
      "value" : "{cockroachdb.host}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_PORT",
      "value" : "{cockroachdb.port}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_DATABASE",
      "value" : "{cockroachdb.database}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.database" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_USERNAME",
      "value" : "{cockroachdb.username}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_SSL_MODE",
      "value" : "{cockroachdb.ssl_mode}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.ssl_mode" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_SSL_CA_PATH",
      "value" : "{cockroachdb.ca_path}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.ca_path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_SSL_KEYFILE",
      "value" : "{cockroachdb.ssl_keyfile}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.ssl_keyfile" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "CRDB_SSL_CERTFILE",
      "value" : "{cockroachdb.ssl_certfile}",
      "isRepeated" : false,
      "variables" : {
        "cockroachdb.ssl_certfile" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 818,
      "githubStars" : 4,
      "category" : "database",
      "tags" : [ "cockroachdb", "database" ],
      "license" : "MIT License",
      "owner" : "amineelkouhen",
      "tools" : [ {
        "name" : "analyze_performance"
      }, {
        "name" : "analyze_schema"
      }, {
        "name" : "bulk_import"
      }, {
        "name" : "connect"
      }, {
        "name" : "connect_database"
      }, {
        "name" : "create_database"
      }, {
        "name" : "create_index"
      }, {
        "name" : "create_table"
      }, {
        "name" : "create_view"
      }, {
        "name" : "describe_table"
      }, {
        "name" : "drop_database"
      }, {
        "name" : "drop_index"
      }, {
        "name" : "drop_table"
      }, {
        "name" : "drop_view"
      }, {
        "name" : "execute_query"
      }, {
        "name" : "execute_transaction"
      }, {
        "name" : "explain_query"
      }, {
        "name" : "get_active_connections"
      }, {
        "name" : "get_cluster_status"
      }, {
        "name" : "get_connection_status"
      }, {
        "name" : "get_database_settings"
      }, {
        "name" : "get_query_history"
      }, {
        "name" : "get_replication_status"
      }, {
        "name" : "get_table_relationships"
      }, {
        "name" : "list_databases"
      }, {
        "name" : "list_tables"
      }, {
        "name" : "list_views"
      }, {
        "name" : "show_running_queries"
      }, {
        "name" : "switch_database"
      } ],
      "source" : "https://github.com/amineelkouhen/mcp-cockroachdb/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/6748139?v=4",
      "prompts" : 0,
      "title" : "CockroachDB",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/cockroachdb.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/cockroachdb.json",
      "dateAdded" : "2025-07-16T06:22:24Z",
      "upstream" : "https://github.com/amineelkouhen/mcp-cockroachdb",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "28284435-26c0-44be-8929-20498b341819",
      "versionId" : "019f3e29-1e3e-4e41-a08b-d95d05735685"
    }
  }
}, {
  "name" : "com.docker.mcp/context7",
  "description" : "Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/context7",
    "version" : "sha256:1174e6a29634a83b2be93ac1fefabf63265f498c02c72201fe3464e687dd8836",
    "environmentVariables" : [ {
      "name" : "MCP_TRANSPORT",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 100812,
      "stars" : 15,
      "githubStars" : 31413,
      "category" : "devops",
      "tags" : [ "context7", "devops" ],
      "license" : "MIT License",
      "owner" : "upstash",
      "tools" : [ {
        "name" : "get-library-docs"
      }, {
        "name" : "resolve-library-id"
      } ],
      "source" : "https://github.com/upstash/context7/tree/v1.0.14",
      "icon" : "https://avatars.githubusercontent.com/u/74989412?s=200&v=4",
      "prompts" : 0,
      "title" : "Context7",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/context7.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/context7.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/upstash/context7",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0ca66462-fb14-4ea1-8324-be6967b9e26a",
      "versionId" : "adcd6f0e-25e5-45fe-8400-ee58d8bee64a"
    }
  }
}, {
  "name" : "com.docker.mcp/cyreslab-ai-shodan",
  "description" : "A Model Context Protocol server that provides access to Shodan API functionality.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/cyreslab-ai-shodan",
    "version" : "sha256:f99f2d2d69555aafcc67229ea7b757db57073d501ed1d60beb47049d3f60e08c",
    "environmentVariables" : [ {
      "name" : "SHODAN_API_KEY",
      "value" : "{cyreslab-ai-shodan.api_key}",
      "variables" : {
        "cyreslab-ai-shodan.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3132,
      "stars" : 7,
      "githubStars" : 29,
      "category" : "devops",
      "tags" : [ "cyreslab-ai-shodan", "devops" ],
      "license" : "MIT License",
      "owner" : "Cyreslab-AI",
      "tools" : [ {
        "name" : "get_host_info"
      }, {
        "name" : "get_ssl_info"
      }, {
        "name" : "scan_network_range"
      }, {
        "name" : "search_iot_devices"
      }, {
        "name" : "search_shodan"
      } ],
      "source" : "https://github.com/Cyreslab-AI/shodan-mcp-server/tree/935f7044f60570cf2d094d94596eeea7872fb6be",
      "icon" : "https://avatars.githubusercontent.com/u/178556137?s=200&v=4",
      "prompts" : 0,
      "title" : "Shodan",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/cyreslab-ai-shodan.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/cyreslab-ai-shodan.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Cyreslab-AI/shodan-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b722a39f-507b-41db-9b4e-6a537f5aa4ed",
      "versionId" : "c4b4ee58-1510-41a0-b4b8-efd037b6df0d"
    }
  }
}, {
  "name" : "com.docker.mcp/dappier",
  "description" : "Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/dappier",
    "version" : "sha256:ba9b2d17fc77406a7b8b54c29ee6915a4f8e6be88542f1c06316c589b7b5b7b6",
    "environmentVariables" : [ {
      "name" : "DAPPIER_API_KEY",
      "value" : "{dappier.api_key}",
      "variables" : {
        "dappier.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2231,
      "stars" : 2,
      "githubStars" : 29,
      "category" : "devops",
      "tags" : [ "dappier", "devops" ],
      "license" : "MIT License",
      "owner" : "DappierAI",
      "tools" : [ {
        "name" : "dappier_ai_recommendations"
      }, {
        "name" : "dappier_real_time_search"
      } ],
      "source" : "https://github.com/dappierai/dappier-mcp/tree/staging",
      "icon" : "https://avatars.githubusercontent.com/u/152645347?s=200&v=4",
      "prompts" : 0,
      "title" : "Dappier",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dappier.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dappier.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/dappierai/dappier-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e939487f-c465-4fe8-91c8-3d6a81daa0a6",
      "versionId" : "4b35e894-7780-4a8d-a598-c2cd312d253b"
    }
  }
}, {
  "name" : "com.docker.mcp/dappier-remote",
  "description" : "Enable fast, free real-time web search and access premium data from trusted media brands—news, financial markets, sports, entertainment, weather, and more. Build powerful AI agents with Dappier.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.dappier.com/mcp",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${DAPPIER_REMOTE_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "ai",
      "tags" : [ "ai", "rag", "knowledge-base", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://avatars.githubusercontent.com/u/152645347?s=200&v=4",
      "prompts" : 0,
      "title" : "Dappier Remote MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dappier-remote.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dappier-remote.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "4e882813-e571-4ae2-96a5-a9bd089d5205",
      "versionId" : "802b50c6-ad45-4afd-9034-bb54bd9e8882"
    }
  }
}, {
  "name" : "com.docker.mcp/dart",
  "description" : "Dart AI Model Context Protocol (MCP) server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/dart",
    "version" : "sha256:4f659b1a51ca3367c42022d179c303770525d4aa8027165c9bd1154f274751c6",
    "environmentVariables" : [ {
      "name" : "DART_TOKEN",
      "value" : "{dart.token}",
      "variables" : {
        "dart.token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DART_HOST",
      "value" : "{dart.host}",
      "isRepeated" : false,
      "variables" : {
        "dart.host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3367,
      "stars" : 1,
      "githubStars" : 117,
      "category" : "devops",
      "tags" : [ "dart", "devops" ],
      "license" : "MIT License",
      "owner" : "its-dart",
      "tools" : [ {
        "name" : "add_task_comment"
      }, {
        "name" : "create_doc"
      }, {
        "name" : "create_task"
      }, {
        "name" : "delete_doc"
      }, {
        "name" : "delete_task"
      }, {
        "name" : "get_config"
      }, {
        "name" : "get_dartboard"
      }, {
        "name" : "get_doc"
      }, {
        "name" : "get_folder"
      }, {
        "name" : "get_task"
      }, {
        "name" : "get_view"
      }, {
        "name" : "list_docs"
      }, {
        "name" : "list_task_comments"
      }, {
        "name" : "list_tasks"
      }, {
        "name" : "update_doc"
      }, {
        "name" : "update_task"
      } ],
      "source" : "https://github.com/its-dart/dart-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/92822028?s=200&v=4",
      "prompts" : 0,
      "title" : "Dart AI",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dart.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dart.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/its-dart/dart-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b34a1be0-0d1e-45b8-9c20-aa2c1b887545",
      "versionId" : "68f2d920-c99e-450b-aecd-20279d906832"
    }
  }
}, {
  "name" : "com.docker.mcp/databutton",
  "description" : "Databutton MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/databutton",
    "version" : "sha256:17928fc93e10ce510703a5aa0d123e1135ddd35ac7fbb20f59bfecacb9b06362"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3800,
      "stars" : 1,
      "githubStars" : 26,
      "category" : "devops",
      "tags" : [ "databutton", "devops" ],
      "license" : "MIT License",
      "owner" : "databutton",
      "tools" : [ {
        "name" : "submit_app_requirements"
      } ],
      "source" : "https://github.com/databutton/databutton-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Databutton",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/databutton.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/databutton.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/databutton/databutton-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ef32a6af-78bc-4480-9682-1e422e724ed8",
      "versionId" : "5ded6048-7646-4f66-afe4-a4eebb35b2c7"
    }
  }
}, {
  "name" : "com.docker.mcp/deepwiki",
  "description" : "Tools for fetching and asking questions about GitHub repositories.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "sse",
    "url" : "https://mcp.deepwiki.com/sse"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "knowledge",
      "tags" : [ "knowledge", "wiki", "documentation", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "read_wiki_structure"
      }, {
        "name" : "read_wiki_contents"
      }, {
        "name" : "ask_question"
      } ],
      "source" : "",
      "icon" : "https://devin.ai/apple-icon.png",
      "prompts" : 0,
      "title" : "DeepWiki",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/deepwiki.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/deepwiki.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "be5184a6-b399-4b69-a74d-6273799d6a05",
      "versionId" : "c9a69137-1ddf-40d5-837f-9d1fc7d3ff5d"
    }
  }
}, {
  "name" : "com.docker.mcp/descope",
  "description" : "The Descope Model Context Protocol (MCP) server provides an interface to interact with Descope's Management APIs, enabling the search and retrieval of project-related information.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/descope",
    "version" : "sha256:554b2b490c18c44556b734b34068d6c754657977fd343a1ec047ce977e44ad87",
    "environmentVariables" : [ {
      "name" : "DESCOPE_MANAGEMENT_KEY",
      "value" : "{descope.management_key}",
      "variables" : {
        "descope.management_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DESCOPE_PROJECT_ID",
      "value" : "{descope.project_id}",
      "isRepeated" : false,
      "variables" : {
        "descope.project_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1989,
      "githubStars" : 25,
      "category" : "devops",
      "tags" : [ "descope", "devops" ],
      "license" : "MIT License",
      "owner" : "descope-sample-apps",
      "tools" : [ {
        "name" : "create-user"
      }, {
        "name" : "invite-user"
      }, {
        "name" : "search-audits"
      }, {
        "name" : "search-users"
      } ],
      "source" : "https://github.com/descope-sample-apps/descope-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/119703169?s=200&v=4",
      "prompts" : 0,
      "title" : "Descope",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/descope.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/descope.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/descope-sample-apps/descope-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "1b0a0f4c-32db-4ca1-8d4e-bc3c7e0ca888",
      "versionId" : "d3d00805-ba23-499b-997d-a7a5317e275b"
    }
  }
}, {
  "name" : "com.docker.mcp/desktop-commander",
  "description" : "Search, update, manage files and run terminal commands with AI.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/desktop-commander",
    "version" : "sha256:264d5d29d76062bd8da3c1e9c217c780ce8e2d0d0d1e9547d955502964acfc06",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{desktop-commander.paths}:{desktop-commander.paths}",
      "isRepeated" : true,
      "variables" : {
        "desktop-commander.paths" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "List of directories that Desktop Commander can access"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "npm"
    }, {
      "type" : "positional",
      "value" : "run"
    }, {
      "type" : "positional",
      "value" : "start"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 57312,
      "stars" : 20,
      "githubStars" : 4532,
      "category" : "devops",
      "tags" : [ "desktop-commander", "devops", "filesystem", "terminal", "automation", "file-management", "productivity", "local-system", "tools", "ai" ],
      "license" : "MIT License",
      "owner" : "wonderwhy-er",
      "tools" : [ {
        "name" : "create_directory"
      }, {
        "name" : "edit_block"
      }, {
        "name" : "force_terminate"
      }, {
        "name" : "get_config"
      }, {
        "name" : "get_file_info"
      }, {
        "name" : "get_more_search_results"
      }, {
        "name" : "get_prompts"
      }, {
        "name" : "get_usage_stats"
      }, {
        "name" : "give_feedback_to_desktop_commander"
      }, {
        "name" : "interact_with_process"
      }, {
        "name" : "kill_process"
      }, {
        "name" : "list_directory"
      }, {
        "name" : "list_processes"
      }, {
        "name" : "list_searches"
      }, {
        "name" : "list_sessions"
      }, {
        "name" : "move_file"
      }, {
        "name" : "read_file"
      }, {
        "name" : "read_multiple_files"
      }, {
        "name" : "read_process_output"
      }, {
        "name" : "set_config_value"
      }, {
        "name" : "start_process"
      }, {
        "name" : "start_search"
      }, {
        "name" : "stop_search"
      }, {
        "name" : "write_file"
      } ],
      "source" : "https://github.com/wonderwhy-er/DesktopCommanderMCP/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Desktop Commander",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/desktop-commander.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/desktop-commander.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/wonderwhy-er/DesktopCommanderMCP",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "fb26d6f4-f21f-44af-bafe-3b5651720190",
      "versionId" : "a2b7643f-8cb2-4174-98b7-2f1acdffb645"
    }
  }
}, {
  "name" : "com.docker.mcp/devhub-cms",
  "description" : "DevHub CMS LLM integration through the Model Context Protocol.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/devhub-cms",
    "version" : "sha256:d09cf1f01b09b4ae67ceecf9f2bf61bbfc59304dee0b5aaa666922c2346cb610",
    "environmentVariables" : [ {
      "name" : "DEVHUB_API_KEY",
      "value" : "{devhub-cms.api_key}",
      "variables" : {
        "devhub-cms.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DEVHUB_API_SECRET",
      "value" : "{devhub-cms.api_secret}",
      "variables" : {
        "devhub-cms.api_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DEVHUB_BASE_URL",
      "value" : "{devhub-cms.url}",
      "isRepeated" : false,
      "variables" : {
        "devhub-cms.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2121,
      "githubStars" : 6,
      "category" : "devops",
      "tags" : [ "devhub-cms", "devops" ],
      "owner" : "devhub",
      "tools" : [ {
        "name" : "create_blog_post"
      }, {
        "name" : "get_blog_post"
      }, {
        "name" : "get_businesses"
      }, {
        "name" : "get_hours_of_operation"
      }, {
        "name" : "get_locations"
      }, {
        "name" : "get_nearest_location"
      }, {
        "name" : "site_from_url"
      }, {
        "name" : "update_blog_post"
      }, {
        "name" : "update_hours"
      }, {
        "name" : "upload_image"
      } ],
      "source" : "https://github.com/devhub/devhub-cms-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/602719?s=200&v=4",
      "prompts" : 0,
      "title" : "DevHub CMS",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/devhub-cms.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/devhub-cms.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/devhub/devhub-cms-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "6e4eeb8c-fca0-48a1-9335-f61d9c8fb4e0",
      "versionId" : "bf29e28a-add5-4d0e-b78b-ad2155d93d7e"
    }
  }
}, {
  "name" : "com.docker.mcp/dodo-payments",
  "description" : "Tools for cross-border payments, taxes, and compliance.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "sse",
    "url" : "https://mcp.dodopayments.com/sse",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${DODO_PAYMENTS_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "payments",
      "tags" : [ "payments", "finance", "transactions", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=dodopayments.com&sz=64",
      "prompts" : 0,
      "title" : "Dodo Payments",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dodo-payments.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dodo-payments.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0cffb6c4-33aa-4b2f-889f-dddbdb028320",
      "versionId" : "eb8e2d70-0a37-4086-b96d-1b3e4c2de681"
    }
  }
}, {
  "name" : "com.docker.mcp/dreamfactory-mcp",
  "description" : "DreamFactory is a REST API generation platform with support for hundreds of data sources, including Microsoft SQL Server, MySQL, PostgreSQL, and MongoDB. The DreamFactory MCP Server makes it easy for users to securely interact with their data sources via an MCP client.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/df-mcp",
    "version" : "sha256:c71c0564003a8dc4409aedd54a0e5bb4a0cd26ff91de849b46526aadb90f3aa8",
    "environmentVariables" : [ {
      "name" : "DREAMFACTORY_URL",
      "value" : "{dreamfactory-mcp.dreamfactoryurl}",
      "isRepeated" : false,
      "variables" : {
        "dreamfactory-mcp.dreamfactoryurl" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "DREAMFACTORY_API_KEY",
      "value" : "{dreamfactory-mcp.dreamfactoryapikey}",
      "isRepeated" : false,
      "variables" : {
        "dreamfactory-mcp.dreamfactoryapikey" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 107,
      "githubStars" : 3,
      "category" : "database",
      "tags" : [ "database" ],
      "license" : "Apache License 2.0",
      "owner" : "dreamfactorysoftware",
      "tools" : [ {
        "name" : "call-stored-function"
      }, {
        "name" : "call-stored-procedure"
      }, {
        "name" : "get-stored-functions"
      }, {
        "name" : "get-stored-procedures"
      }, {
        "name" : "get-table-data"
      }, {
        "name" : "get-table-schema"
      }, {
        "name" : "get-tables"
      }, {
        "name" : "list-tools"
      } ],
      "source" : "https://github.com/dreamfactorysoftware/df-mcp/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/2593688?v=4",
      "prompts" : 0,
      "title" : "DreamFactory MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dreamfactory-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dreamfactory-mcp.json",
      "dateAdded" : "2025-09-17T06:19:29Z",
      "upstream" : "https://github.com/dreamfactorysoftware/df-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "98d06e4e-18d4-4865-b37e-0e22a628898d",
      "versionId" : "37133757-f6f1-44e5-8346-9a5a8e3d3ac8"
    }
  }
}, {
  "name" : "com.docker.mcp/dynatrace-mcp-server",
  "description" : "This MCP Server allows interaction with the Dynatrace observability platform, brining real-time observability data directly into your development workflow.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/dynatrace-mcp-server",
    "version" : "sha256:101536db9b2538162dbb1566b96b10bbb513b70442785a97155d5376344de0ec",
    "environmentVariables" : [ {
      "name" : "OAUTH_CLIENT_ID",
      "value" : "{dynatrace-mcp-server.oauth_client_id}",
      "variables" : {
        "dynatrace-mcp-server.oauth_client_id" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "OAUTH_CLIENT_SECRET",
      "value" : "{dynatrace-mcp-server.oauth_client_secret}",
      "variables" : {
        "dynatrace-mcp-server.oauth_client_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DT_ENVIRONMENT",
      "value" : "{dynatrace-mcp-server.url}",
      "isRepeated" : false,
      "variables" : {
        "dynatrace-mcp-server.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1091,
      "githubStars" : 146,
      "category" : "monitoring",
      "tags" : [ "Dynatrace", "Observability", "Monitoring" ],
      "license" : "MIT License",
      "owner" : "dynatrace-oss",
      "tools" : [ {
        "name" : "chat_with_davis_copilot"
      }, {
        "name" : "create_workflow_for_notification"
      }, {
        "name" : "execute_dql"
      }, {
        "name" : "explain_dql_in_natural_language"
      }, {
        "name" : "find_entity_by_name"
      }, {
        "name" : "generate_dql_from_natural_language"
      }, {
        "name" : "get_entity_details"
      }, {
        "name" : "get_environment_info"
      }, {
        "name" : "get_kubernetes_events"
      }, {
        "name" : "get_logs_for_entity"
      }, {
        "name" : "get_ownership"
      }, {
        "name" : "list_problems"
      }, {
        "name" : "list_vulnerabilities"
      }, {
        "name" : "make_workflow_public"
      }, {
        "name" : "send_slack_message"
      }, {
        "name" : "verify_dql"
      } ],
      "source" : "https://github.com/dynatrace-oss/dynatrace-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/58178984?s=200&v=4",
      "prompts" : 0,
      "title" : "Dynatrace MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/dynatrace-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/dynatrace-mcp-server.json",
      "dateAdded" : "2025-08-11T20:20:11Z",
      "upstream" : "https://github.com/dynatrace-oss/dynatrace-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "317c38f9-2976-4d33-bb27-e8ffc41f6ba2",
      "versionId" : "c60f4559-5350-475f-8065-58680ed0b536"
    }
  }
}, {
  "name" : "com.docker.mcp/e2b",
  "description" : "Giving Claude ability to run code with E2B via MCP (Model Context Protocol).",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/e2b",
    "version" : "sha256:d7f0ece1b21f69fec668b35b43686939a222bcd91e43cb8bc26ef6144fea0be1",
    "environmentVariables" : [ {
      "name" : "E2B_API_KEY",
      "value" : "{e2b.api_key}",
      "variables" : {
        "e2b.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2877,
      "stars" : 2,
      "githubStars" : 329,
      "category" : "devops",
      "tags" : [ "e2b", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "e2b-dev",
      "tools" : [ {
        "name" : "run_code"
      } ],
      "source" : "https://github.com/e2b-dev/mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/129434473?s=200&v=4",
      "prompts" : 0,
      "title" : "E2B",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/e2b.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/e2b.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/e2b-dev/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5131a55a-ebb2-45e8-a605-59c82b099589",
      "versionId" : "efd2bd47-774f-45be-9ce1-96d7a1a5dbec"
    }
  }
}, {
  "name" : "com.docker.mcp/edubase",
  "description" : "The EduBase MCP server enables Claude and other LLMs to interact with EduBase's comprehensive e-learning platform through the Model Context Protocol (MCP).",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/edubase",
    "version" : "sha256:7498d77b4363bcba703edf2c748487ed29f762102c1e68db563bebd63a056e42",
    "environmentVariables" : [ {
      "name" : "EDUBASE_API_KEY",
      "value" : "{edubase.api_key}",
      "variables" : {
        "edubase.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "EDUBASE_API_APP",
      "value" : "{edubase.app}",
      "isRepeated" : false,
      "variables" : {
        "edubase.app" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "EDUBASE_API_URL",
      "value" : "{edubase.url}",
      "isRepeated" : false,
      "variables" : {
        "edubase.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2298,
      "stars" : 1,
      "githubStars" : 20,
      "category" : "devops",
      "tags" : [ "edubase", "devops" ],
      "license" : "MIT License",
      "owner" : "EduBase",
      "tools" : [ {
        "name" : "edubase_delete_class_members"
      }, {
        "name" : "edubase_delete_class_permission"
      }, {
        "name" : "edubase_delete_class_tag"
      }, {
        "name" : "edubase_delete_course_permission"
      }, {
        "name" : "edubase_delete_course_tag"
      }, {
        "name" : "edubase_delete_course_transfer"
      }, {
        "name" : "edubase_delete_event_permission"
      }, {
        "name" : "edubase_delete_event_tag"
      }, {
        "name" : "edubase_delete_exam"
      }, {
        "name" : "edubase_delete_exam_permission"
      }, {
        "name" : "edubase_delete_exam_tag"
      }, {
        "name" : "edubase_delete_exam_users"
      }, {
        "name" : "edubase_delete_integration"
      }, {
        "name" : "edubase_delete_integration_permission"
      }, {
        "name" : "edubase_delete_integration_tag"
      }, {
        "name" : "edubase_delete_organization"
      }, {
        "name" : "edubase_delete_organization_members"
      }, {
        "name" : "edubase_delete_organization_permission"
      }, {
        "name" : "edubase_delete_organization_tag"
      }, {
        "name" : "edubase_delete_organization_webhook"
      }, {
        "name" : "edubase_delete_question"
      }, {
        "name" : "edubase_delete_quiz"
      }, {
        "name" : "edubase_delete_quiz_permission"
      }, {
        "name" : "edubase_delete_quiz_questions"
      }, {
        "name" : "edubase_delete_quiz_tag"
      }, {
        "name" : "edubase_delete_scorm_permission"
      }, {
        "name" : "edubase_delete_scorm_tag"
      }, {
        "name" : "edubase_delete_tag_permission"
      }, {
        "name" : "edubase_delete_user"
      }, {
        "name" : "edubase_delete_user_assume"
      }, {
        "name" : "edubase_delete_user_classes"
      }, {
        "name" : "edubase_delete_user_login"
      }, {
        "name" : "edubase_delete_user_organizations"
      }, {
        "name" : "edubase_delete_video_permission"
      }, {
        "name" : "edubase_delete_video_tag"
      }, {
        "name" : "edubase_get_class"
      }, {
        "name" : "edubase_get_class_assignments"
      }, {
        "name" : "edubase_get_class_members"
      }, {
        "name" : "edubase_get_class_permission"
      }, {
        "name" : "edubase_get_class_tag"
      }, {
        "name" : "edubase_get_class_tags"
      }, {
        "name" : "edubase_get_classes"
      }, {
        "name" : "edubase_get_course_permission"
      }, {
        "name" : "edubase_get_course_tag"
      }, {
        "name" : "edubase_get_course_tags"
      }, {
        "name" : "edubase_get_event_permission"
      }, {
        "name" : "edubase_get_event_tag"
      }, {
        "name" : "edubase_get_event_tags"
      }, {
        "name" : "edubase_get_exam"
      }, {
        "name" : "edubase_get_exam_certificates_user"
      }, {
        "name" : "edubase_get_exam_permission"
      }, {
        "name" : "edubase_get_exam_results_raw"
      }, {
        "name" : "edubase_get_exam_results_user"
      }, {
        "name" : "edubase_get_exam_tag"
      }, {
        "name" : "edubase_get_exam_tags"
      }, {
        "name" : "edubase_get_exam_users"
      }, {
        "name" : "edubase_get_exams"
      }, {
        "name" : "edubase_get_integration"
      }, {
        "name" : "edubase_get_integration_keys"
      }, {
        "name" : "edubase_get_integration_permission"
      }, {
        "name" : "edubase_get_integration_tag"
      }, {
        "name" : "edubase_get_integration_tags"
      }, {
        "name" : "edubase_get_integrations"
      }, {
        "name" : "edubase_get_organization"
      }, {
        "name" : "edubase_get_organization_members"
      }, {
        "name" : "edubase_get_organization_permission"
      }, {
        "name" : "edubase_get_organization_tag"
      }, {
        "name" : "edubase_get_organization_tags"
      }, {
        "name" : "edubase_get_organization_webhook"
      }, {
        "name" : "edubase_get_organizations"
      }, {
        "name" : "edubase_get_question"
      }, {
        "name" : "edubase_get_question_id"
      }, {
        "name" : "edubase_get_questions"
      }, {
        "name" : "edubase_get_quiz"
      }, {
        "name" : "edubase_get_quiz_permission"
      }, {
        "name" : "edubase_get_quiz_play_results"
      }, {
        "name" : "edubase_get_quiz_questions"
      }, {
        "name" : "edubase_get_quiz_results_user"
      }, {
        "name" : "edubase_get_quiz_tag"
      }, {
        "name" : "edubase_get_quiz_tags"
      }, {
        "name" : "edubase_get_quizes"
      }, {
        "name" : "edubase_get_scorm_permission"
      }, {
        "name" : "edubase_get_scorm_tag"
      }, {
        "name" : "edubase_get_scorm_tags"
      }, {
        "name" : "edubase_get_tag"
      }, {
        "name" : "edubase_get_tag_permission"
      }, {
        "name" : "edubase_get_tags"
      }, {
        "name" : "edubase_get_user"
      }, {
        "name" : "edubase_get_user_classes"
      }, {
        "name" : "edubase_get_user_group"
      }, {
        "name" : "edubase_get_user_login"
      }, {
        "name" : "edubase_get_user_name"
      }, {
        "name" : "edubase_get_user_organizations"
      }, {
        "name" : "edubase_get_user_search"
      }, {
        "name" : "edubase_get_users"
      }, {
        "name" : "edubase_get_video_permission"
      }, {
        "name" : "edubase_get_video_tag"
      }, {
        "name" : "edubase_get_video_tags"
      }, {
        "name" : "edubase_patch_integration"
      }, {
        "name" : "edubase_patch_organization"
      }, {
        "name" : "edubase_patch_organization_webhook"
      }, {
        "name" : "edubase_patch_user"
      }, {
        "name" : "edubase_post_class_members"
      }, {
        "name" : "edubase_post_class_permission"
      }, {
        "name" : "edubase_post_class_tag"
      }, {
        "name" : "edubase_post_class_transfer"
      }, {
        "name" : "edubase_post_classes_members"
      }, {
        "name" : "edubase_post_course_permission"
      }, {
        "name" : "edubase_post_course_tag"
      }, {
        "name" : "edubase_post_custom_metric"
      }, {
        "name" : "edubase_post_event_permission"
      }, {
        "name" : "edubase_post_event_tag"
      }, {
        "name" : "edubase_post_event_transfer"
      }, {
        "name" : "edubase_post_exam"
      }, {
        "name" : "edubase_post_exam_certificates_user_download"
      }, {
        "name" : "edubase_post_exam_permission"
      }, {
        "name" : "edubase_post_exam_summary"
      }, {
        "name" : "edubase_post_exam_tag"
      }, {
        "name" : "edubase_post_exam_transfer"
      }, {
        "name" : "edubase_post_exam_users"
      }, {
        "name" : "edubase_post_integration"
      }, {
        "name" : "edubase_post_integration_keys"
      }, {
        "name" : "edubase_post_integration_permission"
      }, {
        "name" : "edubase_post_integration_tag"
      }, {
        "name" : "edubase_post_integration_transfer"
      }, {
        "name" : "edubase_post_organization"
      }, {
        "name" : "edubase_post_organization_members"
      }, {
        "name" : "edubase_post_organization_permission"
      }, {
        "name" : "edubase_post_organization_tag"
      }, {
        "name" : "edubase_post_organization_transfer"
      }, {
        "name" : "edubase_post_organization_webhook"
      }, {
        "name" : "edubase_post_organization_webhook_trigger"
      }, {
        "name" : "edubase_post_organizations_members"
      }, {
        "name" : "edubase_post_question"
      }, {
        "name" : "edubase_post_question_export"
      }, {
        "name" : "edubase_post_question_id"
      }, {
        "name" : "edubase_post_quiz"
      }, {
        "name" : "edubase_post_quiz_permission"
      }, {
        "name" : "edubase_post_quiz_questions"
      }, {
        "name" : "edubase_post_quiz_tag"
      }, {
        "name" : "edubase_post_quiz_transfer"
      }, {
        "name" : "edubase_post_scorm_permission"
      }, {
        "name" : "edubase_post_scorm_tag"
      }, {
        "name" : "edubase_post_scorm_transfer"
      }, {
        "name" : "edubase_post_tag_permission"
      }, {
        "name" : "edubase_post_tag_transfer"
      }, {
        "name" : "edubase_post_user"
      }, {
        "name" : "edubase_post_user_assume"
      }, {
        "name" : "edubase_post_user_classes"
      }, {
        "name" : "edubase_post_user_group"
      }, {
        "name" : "edubase_post_user_login"
      }, {
        "name" : "edubase_post_user_name"
      }, {
        "name" : "edubase_post_user_organizations"
      }, {
        "name" : "edubase_post_video_permission"
      }, {
        "name" : "edubase_post_video_tag"
      }, {
        "name" : "edubase_post_video_transfer"
      } ],
      "source" : "https://github.com/EduBase/MCP/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/33938028?s=200&v=4",
      "prompts" : 0,
      "title" : "EduBase",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/edubase.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/edubase.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/EduBase/MCP",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "30a36262-2722-4dd1-8258-523c3cb7eea6",
      "versionId" : "2817e79c-57a6-49d2-87d8-c91bd3892917"
    }
  }
}, {
  "name" : "com.docker.mcp/effect-mcp",
  "description" : "Tools and resources for writing Effect code in Typescript.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/effect-mcp",
    "version" : "sha256:446da71b58f947b0942fc371e2493ccb38bab8f96a6554c02a52c715cfd3925a"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 594,
      "githubStars" : 181,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "license" : "MIT License",
      "owner" : "tim-smart",
      "tools" : [ {
        "name" : "effect_doc_search"
      }, {
        "name" : "get_effect_doc"
      } ],
      "source" : "https://github.com/tim-smart/effect-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/77678942?v=4",
      "prompts" : 0,
      "title" : "Effect MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/effect-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/effect-mcp.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/tim-smart/effect-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "3942b771-c72d-4f84-bae3-fd81be29ab0d",
      "versionId" : "9df47a91-5912-426b-9b5c-c9adccd5119f"
    }
  }
}, {
  "name" : "com.docker.mcp/elevenlabs",
  "description" : "Official ElevenLabs Model Context Protocol (MCP) server that enables interaction with powerful Text to Speech and audio processing APIs.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/elevenlabs",
    "version" : "sha256:7bea19b12e1bf05a2afc2f77edcd8d39684284095719e6ab27410aeab3107956",
    "environmentVariables" : [ {
      "name" : "ELEVENLABS_API_KEY",
      "value" : "{elevenlabs.api_key}",
      "variables" : {
        "elevenlabs.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ],
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{elevenlabs.data}:/root/Desktop",
      "isRepeated" : false,
      "variables" : {
        "elevenlabs.data" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 6894,
      "stars" : 6,
      "githubStars" : 984,
      "category" : "ai",
      "tags" : [ "elevenlabs", "elevenlabs-api" ],
      "license" : "MIT License",
      "owner" : "elevenlabs",
      "tools" : [ {
        "name" : "add_knowledge_base_to_agent"
      }, {
        "name" : "check_subscription"
      }, {
        "name" : "compose_music"
      }, {
        "name" : "create_agent"
      }, {
        "name" : "create_composition_plan"
      }, {
        "name" : "create_voice_from_preview"
      }, {
        "name" : "get_agent"
      }, {
        "name" : "get_conversation"
      }, {
        "name" : "get_voice"
      }, {
        "name" : "isolate_audio"
      }, {
        "name" : "list_agents"
      }, {
        "name" : "list_conversations"
      }, {
        "name" : "list_models"
      }, {
        "name" : "list_phone_numbers"
      }, {
        "name" : "make_outbound_call"
      }, {
        "name" : "play_audio"
      }, {
        "name" : "search_voice_library"
      }, {
        "name" : "search_voices"
      }, {
        "name" : "speech_to_speech"
      }, {
        "name" : "speech_to_text"
      }, {
        "name" : "text_to_sound_effects"
      }, {
        "name" : "text_to_speech"
      }, {
        "name" : "text_to_voice"
      }, {
        "name" : "voice_clone"
      } ],
      "source" : "https://github.com/elevenlabs/elevenlabs-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/94471909?v=4",
      "prompts" : 0,
      "title" : "Elevenlabs MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/elevenlabs.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/elevenlabs.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/elevenlabs/elevenlabs-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "9c3871c9-0d36-4ff9-89cc-766fe08c0e10",
      "versionId" : "7a2eaba4-10a4-4ace-b7c0-3ecfad19de70"
    }
  }
}, {
  "name" : "com.docker.mcp/everart",
  "description" : "Image generation server using EverArt's API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/everart",
    "version" : "sha256:98c2aa1b623196f1feaef11bbd284b69dc4aefc1822329794d5f66e388a997f9",
    "environmentVariables" : [ {
      "name" : "EVERART_API_KEY",
      "value" : "{everart.api_key}",
      "variables" : {
        "everart.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2622,
      "stars" : 3,
      "githubStars" : 68780,
      "category" : "search",
      "tags" : [ "everart", "search" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "generate_image"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "EverArt (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/everart.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/everart.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5b9e96eb-22dc-4e47-b59a-9a3eb807ff21",
      "versionId" : "c156e38e-dd7f-4d4e-a5a9-5185c0a76af1"
    }
  }
}, {
  "name" : "com.docker.mcp/exa",
  "description" : "Exa MCP for web search and web crawling!.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/exa",
    "version" : "sha256:61f88e24df5bc379133f97feb7d5865c2531c56759c8a34f8cd88e02bf33867d",
    "environmentVariables" : [ {
      "name" : "EXA_API_KEY",
      "value" : "{exa.api_key}",
      "variables" : {
        "exa.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 4366,
      "stars" : 4,
      "githubStars" : 2270,
      "category" : "search",
      "tags" : [ "exa", "devops", "search" ],
      "license" : "MIT License",
      "owner" : "exa-labs",
      "tools" : [ {
        "name" : "web_search_exa"
      } ],
      "source" : "https://github.com/exa-labs/exa-mcp-server/tree/6ebf32f550168af016837efe31960c6548c831aa",
      "icon" : "https://avatars.githubusercontent.com/u/77906174?s=200&v=4",
      "prompts" : 0,
      "title" : "Exa",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/exa.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/exa.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/exa-labs/exa-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "72996d51-defc-49a2-a7b2-02149c3e6199",
      "versionId" : "c2c3df60-9cf6-47d8-857e-9af67209412d"
    }
  }
}, {
  "name" : "com.docker.mcp/explorium",
  "description" : "Discover companies, contacts, and business insights—powered by dozens of trusted external data sources.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/explorium",
    "version" : "sha256:6454e9a8eabc7d889cebbf81a6b3747bf1fd3653d0eaf8e10c4444ebdcbf47ba",
    "environmentVariables" : [ {
      "name" : "API_ACCESS_TOKEN",
      "value" : "{explorium.api_key}",
      "variables" : {
        "explorium.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 78,
      "githubStars" : 16,
      "category" : "search",
      "tags" : [ "search", "explorium", "b2b-data", "business", "prospecting", "emails", "phone-numbers", "sales" ],
      "license" : "MIT License",
      "owner" : "explorium-ai",
      "tools" : [ {
        "name" : "match-business"
      }, {
        "name" : "fetch-businesses"
      }, {
        "name" : "fetch-businesses-statistics"
      }, {
        "name" : "fetch-businesses-events"
      }, {
        "name" : "enrich-business"
      }, {
        "name" : "match-prospects"
      }, {
        "name" : "fetch-prospects"
      }, {
        "name" : "fetch-prospects-events"
      }, {
        "name" : "fetch-prospects-statistics"
      }, {
        "name" : "enrich-prospects"
      }, {
        "name" : "autocomplete"
      }, {
        "name" : "web-search"
      } ],
      "source" : "https://github.com/explorium-ai/mcp-explorium/tree/main",
      "icon" : "https://marketing-public-links.s3.us-east-1.amazonaws.com/Brand/Logo-dark.png",
      "prompts" : 0,
      "title" : "Explorium B2B Data",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/explorium.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/explorium.json",
      "dateAdded" : "2025-09-19T18:59:08Z",
      "upstream" : "https://github.com/explorium-ai/mcp-explorium",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ff65449a-0140-4978-9df3-c3185b7d0abc",
      "versionId" : "b4368286-5d75-444a-ac61-ca18e967c706"
    }
  }
}, {
  "name" : "com.docker.mcp/filesystem",
  "description" : "Local filesystem access with configurable allowed paths.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/filesystem",
    "version" : "sha256:35fcf0217ca0d5bf7b0a5bd68fb3b89e08174676c0e0b4f431604512cf7b3f67",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{filesystem.paths}:{filesystem.paths}",
      "isRepeated" : true,
      "variables" : {
        "filesystem.paths" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "{filesystem.paths|volume-target|into}",
      "isRepeated" : true,
      "variables" : {
        "filesystem.paths" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 50863,
      "stars" : 26,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "filesystem", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "create_directory"
      }, {
        "name" : "directory_tree"
      }, {
        "name" : "edit_file"
      }, {
        "name" : "get_file_info"
      }, {
        "name" : "list_allowed_directories"
      }, {
        "name" : "list_directory"
      }, {
        "name" : "move_file"
      }, {
        "name" : "read_file"
      }, {
        "name" : "read_multiple_files"
      }, {
        "name" : "search_files"
      }, {
        "name" : "write_file"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Filesystem (Reference)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/filesystem.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/filesystem.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f0e96481-83cb-4047-a545-ac35b09b3aa2",
      "versionId" : "0251b4a9-8341-4850-a6c8-7cc519fe5490"
    }
  }
}, {
  "name" : "com.docker.mcp/find-a-domain",
  "description" : "Tools for finding domain names.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://api.findadomain.dev/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "tools",
      "tags" : [ "tools", "domain", "productivity", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "check_domain"
      }, {
        "name" : "list_tlds"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=findadomain.dev&sz=64",
      "prompts" : 0,
      "title" : "Find-A-Domain",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/find-a-domain.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/find-a-domain.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "82ea817e-699b-442e-b916-7ad908e1e33d",
      "versionId" : "4d148674-c28c-4d59-913c-ed1625512c4f"
    }
  }
}, {
  "name" : "com.docker.mcp/firecrawl",
  "description" : "🔥 Official Firecrawl MCP Server - Adds powerful web scraping and search to Cursor, Claude and any other LLM clients.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/firecrawl",
    "version" : "sha256:e554df39694e3d777f26ef51d13beff5ed626e761408fb1b9c1a17f929a9de55",
    "environmentVariables" : [ {
      "name" : "FIRECRAWL_API_KEY",
      "value" : "{firecrawl.api_key}",
      "variables" : {
        "firecrawl.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "FIRECRAWL_API_URL",
      "value" : "{firecrawl.url}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "FIRECRAWL_RETRY_MAX_ATTEMPTS",
      "value" : "{firecrawl.retry_max}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.retry_max" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "FIRECRAWL_RETRY_INITIAL_DELAY",
      "value" : "{firecrawl.retry_delay}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.retry_delay" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "FIRECRAWL_RETRY_MAX_DELAY",
      "value" : "{firecrawl.retry_max_delay}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.retry_max_delay" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "FIRECRAWL_RETRY_BACKOFF_FACTOR",
      "value" : "{firecrawl.retry_backoff_factor}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.retry_backoff_factor" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "FIRECRAWL_CREDIT_WARNING_THRESHOLD",
      "value" : "{firecrawl.credit_warning_threshold}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.credit_warning_threshold" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "FIRECRAWL_CREDIT_CRITICAL_THRESHOLD",
      "value" : "{firecrawl.credit_critical_threshold}",
      "isRepeated" : false,
      "variables" : {
        "firecrawl.credit_critical_threshold" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 34628,
      "stars" : 14,
      "githubStars" : 4598,
      "category" : "search",
      "tags" : [ "firecrawl", "search", "scraping" ],
      "license" : "MIT License",
      "owner" : "firecrawl",
      "tools" : [ {
        "name" : "firecrawl_check_crawl_status"
      }, {
        "name" : "firecrawl_crawl"
      }, {
        "name" : "firecrawl_extract"
      }, {
        "name" : "firecrawl_map"
      }, {
        "name" : "firecrawl_scrape"
      }, {
        "name" : "firecrawl_search"
      } ],
      "source" : "https://github.com/mendableai/firecrawl-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/135057108?s=200&v=4",
      "prompts" : 0,
      "title" : "Firecrawl",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/firecrawl.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/firecrawl.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/mendableai/firecrawl-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f8feba0d-c230-4087-884d-fe7aea78fbc0",
      "versionId" : "5b68897a-eb80-40d3-bee5-8a3a2b4f1c53"
    }
  }
}, {
  "name" : "com.docker.mcp/firewalla-mcp-server",
  "description" : "Real-time network monitoring, security analysis, and firewall management through 28 specialized tools. Access security alerts, network flows, device status, and firewall rules directly from your Firewalla device.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/firewalla-mcp-server",
    "version" : "sha256:af186f868759476978d884704a2736dd070c207424f23fe3f7d46a8bd385c2ed",
    "environmentVariables" : [ {
      "name" : "FIREWALLA_MSP_TOKEN",
      "value" : "{firewalla-mcp-server.msp_token}",
      "variables" : {
        "firewalla-mcp-server.msp_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "FIREWALLA_MSP_ID",
      "value" : "{firewalla-mcp-server.msp_id}",
      "isRepeated" : false,
      "variables" : {
        "firewalla-mcp-server.msp_id" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Your Firewalla MSP domain (e.g., yourdomain.firewalla.net)"
        }
      }
    }, {
      "name" : "FIREWALLA_BOX_ID",
      "value" : "{firewalla-mcp-server.box_id}",
      "isRepeated" : false,
      "variables" : {
        "firewalla-mcp-server.box_id" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Your Firewalla Box Global ID"
        }
      }
    }, {
      "name" : "MCP_WAVE0_ENABLED",
      "value" : "true"
    }, {
      "name" : "MCP_READ_ONLY_MODE",
      "value" : "false"
    }, {
      "name" : "MCP_CACHE_ENABLED",
      "value" : "true"
    }, {
      "name" : "MCP_DEBUG_MODE",
      "value" : "false"
    }, {
      "name" : "NODE_ENV",
      "value" : "production"
    }, {
      "name" : "LOG_LEVEL",
      "value" : "info"
    }, {
      "name" : "MCP_CACHE_TTL",
      "value" : "300"
    }, {
      "name" : "MCP_RATE_LIMIT_WINDOW",
      "value" : "60000"
    }, {
      "name" : "MCP_RATE_LIMIT_MAX_REQUESTS",
      "value" : "100"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 761,
      "githubStars" : 6,
      "category" : "security",
      "tags" : [ "firewall", "security", "monitoring", "network", "threat-detection" ],
      "license" : "MIT License",
      "owner" : "amittell",
      "tools" : [ {
        "name" : "create_target_list"
      }, {
        "name" : "delete_target_list"
      }, {
        "name" : "get_active_alarms"
      }, {
        "name" : "get_alarm_trends"
      }, {
        "name" : "get_bandwidth_usage"
      }, {
        "name" : "get_boxes"
      }, {
        "name" : "get_device_status"
      }, {
        "name" : "get_flow_data"
      }, {
        "name" : "get_flow_insights"
      }, {
        "name" : "get_network_rules"
      }, {
        "name" : "get_network_rules_summary"
      }, {
        "name" : "get_offline_devices"
      }, {
        "name" : "get_recent_flow_activity"
      }, {
        "name" : "get_rule_trends"
      }, {
        "name" : "get_simple_statistics"
      }, {
        "name" : "get_specific_alarm"
      }, {
        "name" : "get_specific_target_list"
      }, {
        "name" : "get_statistics_by_box"
      }, {
        "name" : "get_statistics_by_region"
      }, {
        "name" : "get_target_lists"
      }, {
        "name" : "pause_rule"
      }, {
        "name" : "resume_rule"
      }, {
        "name" : "search_alarms"
      }, {
        "name" : "search_devices"
      }, {
        "name" : "search_flows"
      }, {
        "name" : "search_rules"
      }, {
        "name" : "search_target_lists"
      }, {
        "name" : "update_target_list"
      } ],
      "source" : "https://github.com/amittell/firewalla-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/16805913?s=200&v=4",
      "prompts" : 0,
      "title" : "Firewalla MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/firewalla-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/firewalla-mcp-server.json",
      "dateAdded" : "2025-07-29T14:05:27Z",
      "upstream" : "https://github.com/amittell/firewalla-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0c3213de-d5c2-432a-81a1-affbb9500b47",
      "versionId" : "b57fc722-5cbf-4a34-8146-4d6f73509af0"
    }
  }
}, {
  "name" : "com.docker.mcp/flexprice",
  "description" : "Official flexprice MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/flexprice",
    "version" : "sha256:70c2126ddacdc4f8f3c003d59327288c050802cab6ce6b779821bc2af384a65c",
    "environmentVariables" : [ {
      "name" : "API_KEY",
      "value" : "{flexprice.api_key}",
      "variables" : {
        "flexprice.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "BASE_URL",
      "value" : "{flexprice.base_url}",
      "isRepeated" : false,
      "variables" : {
        "flexprice.base_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1663,
      "stars" : 1,
      "githubStars" : 4,
      "category" : "devops",
      "tags" : [ "flexprice", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "flexprice",
      "tools" : [ {
        "name" : "getCustomerById"
      }, {
        "name" : "getCustomerByLookupKey"
      }, {
        "name" : "getCustomerEntitlements"
      }, {
        "name" : "getCustomerSubscriptions"
      }, {
        "name" : "getCustomerUsageSummary"
      }, {
        "name" : "getCustomers"
      }, {
        "name" : "getEventsByCustomer"
      }, {
        "name" : "getInvoiceById"
      }, {
        "name" : "getInvoiceByNumber"
      }, {
        "name" : "getInvoices"
      }, {
        "name" : "getInvoicesByCustomerId"
      }, {
        "name" : "getPaymentById"
      }, {
        "name" : "getPayments"
      }, {
        "name" : "getPlanById"
      }, {
        "name" : "getPlans"
      }, {
        "name" : "getPriceById"
      }, {
        "name" : "getPrices"
      }, {
        "name" : "getSubscriptionById"
      }, {
        "name" : "getSubscriptionPauses"
      }, {
        "name" : "getSubscriptionUsage"
      }, {
        "name" : "getSubscriptions"
      }, {
        "name" : "getWalletBalance"
      }, {
        "name" : "getWalletById"
      }, {
        "name" : "getWalletTransactions"
      }, {
        "name" : "getWalletsByCustomerId"
      } ],
      "source" : "https://github.com/flexprice/mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/168305045?v=4",
      "prompts" : 0,
      "title" : "FlexPrice",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/flexprice.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/flexprice.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/flexprice/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "1060c532-773c-40c0-bf69-f1849fd28273",
      "versionId" : "eb2c7fbd-52b8-47bd-ae17-bcc7deb848a1"
    }
  }
}, {
  "name" : "com.docker.mcp/github",
  "description" : "Tools for interacting with the GitHub API, enabling file operations, repository management, search functionality, and more.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/github",
    "version" : "sha256:89fd71b6f2dd098de0d7517c1899b7fe90590d3193e253991d61a800b041bfd4",
    "environmentVariables" : [ {
      "name" : "GITHUB_PERSONAL_ACCESS_TOKEN",
      "value" : "{github.personal_access_token}",
      "variables" : {
        "github.personal_access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 52906,
      "stars" : 20,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "github", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "add_issue_comment"
      }, {
        "name" : "create_branch"
      }, {
        "name" : "create_issue"
      }, {
        "name" : "create_or_update_file"
      }, {
        "name" : "create_pull_request"
      }, {
        "name" : "create_pull_request_review"
      }, {
        "name" : "create_repository"
      }, {
        "name" : "fork_repository"
      }, {
        "name" : "get_file_contents"
      }, {
        "name" : "get_issue"
      }, {
        "name" : "get_pull_request"
      }, {
        "name" : "get_pull_request_comments"
      }, {
        "name" : "get_pull_request_files"
      }, {
        "name" : "get_pull_request_reviews"
      }, {
        "name" : "get_pull_request_status"
      }, {
        "name" : "list_commits"
      }, {
        "name" : "list_issues"
      }, {
        "name" : "list_pull_requests"
      }, {
        "name" : "merge_pull_request"
      }, {
        "name" : "push_files"
      }, {
        "name" : "search_code"
      }, {
        "name" : "search_issues"
      }, {
        "name" : "search_repositories"
      }, {
        "name" : "search_users"
      }, {
        "name" : "update_issue"
      }, {
        "name" : "update_pull_request_branch"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "GitHub (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/github.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/github.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "65b07759-fc63-46f0-9a3f-573c465c5c56",
      "versionId" : "50c9e8c7-e46f-4093-953a-181686c51c28"
    }
  }
}, {
  "name" : "com.docker.mcp/github-chat",
  "description" : "A Model Context Protocol (MCP) for analyzing and querying GitHub repositories using the GitHub Chat API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/github-chat",
    "version" : "sha256:c9b12a1664919c8dbae726ef3f36761ee42b1a729ae17b820f73e6c59063047b",
    "environmentVariables" : [ {
      "name" : "GITHUB_API_KEY",
      "value" : "{github-chat.api_key}",
      "variables" : {
        "github-chat.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3464,
      "stars" : 4,
      "githubStars" : 63,
      "category" : "devops",
      "tags" : [ "github-chat", "devops" ],
      "license" : "MIT License",
      "owner" : "AsyncFuncAI",
      "tools" : [ {
        "name" : "index_repository"
      }, {
        "name" : "query_repository"
      } ],
      "source" : "https://github.com/AsyncFuncAI/github-chat-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/194295535?s=200&v=4",
      "prompts" : 0,
      "title" : "GitHub Chat",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/github-chat.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/github-chat.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/AsyncFuncAI/github-chat-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "73640683-bb07-4f80-81f7-3092870d46a2",
      "versionId" : "4f22c892-0505-4e0d-a592-b4d81f3eb2c8"
    }
  }
}, {
  "name" : "com.docker.mcp/gitlab",
  "description" : "MCP Server for the GitLab API, enabling project management, file operations, and more.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/gitlab",
    "version" : "sha256:a1b8571a210a3c8b17b288498d287cd1c3512c10519330ea71ca48e559e78917",
    "environmentVariables" : [ {
      "name" : "GITLAB_PERSONAL_ACCESS_TOKEN",
      "value" : "{gitlab.personal_access_token}",
      "variables" : {
        "gitlab.personal_access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "GITLAB_API_URL",
      "value" : "{gitlab.url}",
      "isRepeated" : false,
      "variables" : {
        "gitlab.url" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "api url - optional for self-hosted instances"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 16711,
      "stars" : 20,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "gitlab", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "create_branch"
      }, {
        "name" : "create_issue"
      }, {
        "name" : "create_merge_request"
      }, {
        "name" : "create_or_update_file"
      }, {
        "name" : "create_repository"
      }, {
        "name" : "fork_repository"
      }, {
        "name" : "get_file_contents"
      }, {
        "name" : "push_files"
      }, {
        "name" : "search_repositories"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/1086321?s=200&v=4",
      "prompts" : 0,
      "title" : "GitLab (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/gitlab.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/gitlab.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "592b18db-4215-4574-bf23-40c28034bc83",
      "versionId" : "9d4c8d45-8ed0-40fe-bfc9-960cdc186481"
    }
  }
}, {
  "name" : "com.docker.mcp/gitmcp",
  "description" : "Tools for interacting with Git repositories.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://gitmcp.io/docs"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "development",
      "tags" : [ "git", "version-control", "development", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "match_common_libs_owner_repo_mapping"
      }, {
        "name" : "fetch_generic_documentation"
      }, {
        "name" : "search_generic_documentation"
      }, {
        "name" : "search_generic_code"
      }, {
        "name" : "fetch_generic_url_content"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=gitmcp.io&sz=64",
      "prompts" : 0,
      "title" : "GitMCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/gitmcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/gitmcp.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ef560f1c-83fd-4a63-a4d3-c9cade823a99",
      "versionId" : "37e57c20-7e5e-4771-826a-0515ae885e63"
    }
  }
}, {
  "name" : "com.docker.mcp/glif",
  "description" : "Easily run glif.app AI workflows inside your LLM: image generators, memes, selfies, and more. Glif supports all major multimedia AI models inside one app.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/glif",
    "version" : "sha256:5db922ddab6a29554a3fcc107abfca68b513c3eb34300c8779d156f57f68cb0c",
    "environmentVariables" : [ {
      "name" : "GLIF_API_TOKEN",
      "value" : "{glif.api_token}",
      "variables" : {
        "glif.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "GLIF_IDS",
      "value" : "{glif.ids}",
      "isRepeated" : false,
      "variables" : {
        "glif.ids" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "IGNORE_SAVED_GLIFS",
      "value" : "{glif.ignored_saved}",
      "isRepeated" : false,
      "variables" : {
        "glif.ignored_saved" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3000,
      "stars" : 2,
      "githubStars" : 26,
      "category" : "devops",
      "tags" : [ "glif", "devops" ],
      "license" : "MIT License",
      "owner" : "glifxyz",
      "tools" : [ {
        "name" : "glif_info"
      }, {
        "name" : "list_featured_glifs"
      }, {
        "name" : "list_saved_glif_tools"
      }, {
        "name" : "my_glif_user_info"
      }, {
        "name" : "my_glifs"
      }, {
        "name" : "remove_all_glif_tools"
      }, {
        "name" : "remove_glif_tool"
      }, {
        "name" : "run_glif"
      }, {
        "name" : "save_glif_as_tool"
      }, {
        "name" : "search_glifs"
      } ],
      "source" : "https://github.com/glifxyz/glif-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/119348676?s=200&v=4",
      "prompts" : 0,
      "title" : "glif.app",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/glif.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/glif.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/glifxyz/glif-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "825e9b03-715c-4b99-acda-4c6719aae464",
      "versionId" : "acfa1c58-ab13-41b8-ad79-c710024b099b"
    }
  }
}, {
  "name" : "com.docker.mcp/google-maps",
  "description" : "Tools for interacting with the Google Maps API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/google-maps",
    "version" : "sha256:d8652c8c9c52ac9d82e9cadd1dc0468ade7a4f8c53e102e641eb4248894aa914",
    "environmentVariables" : [ {
      "name" : "GOOGLE_MAPS_API_KEY",
      "value" : "{google-maps.api_key}",
      "variables" : {
        "google-maps.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 36292,
      "stars" : 15,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "google-maps", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "maps_directions"
      }, {
        "name" : "maps_distance_matrix"
      }, {
        "name" : "maps_elevation"
      }, {
        "name" : "maps_geocode"
      }, {
        "name" : "maps_place_details"
      }, {
        "name" : "maps_reverse_geocode"
      }, {
        "name" : "maps_search_places"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.6",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Google Maps (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/google-maps.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/google-maps.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b701a6ff-31f0-4f7f-b310-ef52ba3c1f49",
      "versionId" : "9ad1c02a-915c-42d7-a2c2-e9fb352db047"
    }
  }
}, {
  "name" : "com.docker.mcp/google-maps-comprehensive",
  "description" : "Complete Google Maps integration with 8 tools including geocoding, places search, directions, elevation data, and more using Google's latest APIs.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/google-maps-comprehensive",
    "version" : "sha256:c01e5c437a9c5334ca7c2b20e733ed0844e679b101741a2a45c6072657fd2e14",
    "environmentVariables" : [ {
      "name" : "GOOGLE_MAPS_API_KEY",
      "value" : "{google-maps-comprehensive.api_key}",
      "variables" : {
        "google-maps-comprehensive.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 41,
      "githubStars" : 1,
      "category" : "devops",
      "tags" : [ "google-maps", "maps", "geocoding", "directions", "places", "elevation", "location", "devops" ],
      "owner" : "vicpeacock",
      "tools" : [ {
        "name" : "maps_directions"
      }, {
        "name" : "maps_distance_matrix"
      }, {
        "name" : "maps_elevation"
      }, {
        "name" : "maps_geocode"
      }, {
        "name" : "maps_ping"
      }, {
        "name" : "maps_place_details"
      }, {
        "name" : "maps_reverse_geocode"
      }, {
        "name" : "maps_search_places"
      } ],
      "source" : "https://github.com/vicpeacock/google-maps-comprehensive-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Google Maps Comprehensive MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/google-maps-comprehensive.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/google-maps-comprehensive.json",
      "dateAdded" : "2025-09-24T20:01:26Z",
      "upstream" : "https://github.com/vicpeacock/google-maps-comprehensive-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "90f39c58-c531-44ff-8b75-9d14d2317eed",
      "versionId" : "a28651bb-6ddb-4420-8e05-8046137dc4fd"
    }
  }
}, {
  "name" : "com.docker.mcp/gyazo",
  "description" : "Official Model Context Protocol server for Gyazo.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/gyazo",
    "version" : "sha256:f85108362eaa179e2f7272b2b14ff9a61d6a24c538ba2f270fe0e48ea7a4366f",
    "environmentVariables" : [ {
      "name" : "GYAZO_ACCESS_TOKEN",
      "value" : "{gyazo.access_token}",
      "variables" : {
        "gyazo.access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2113,
      "githubStars" : 24,
      "category" : "devops",
      "tags" : [ "gyazo", "devops" ],
      "license" : "MIT License",
      "owner" : "nota",
      "tools" : [ {
        "name" : "gyazo_image"
      }, {
        "name" : "gyazo_latest_image"
      }, {
        "name" : "gyazo_search"
      }, {
        "name" : "gyazo_upload"
      } ],
      "source" : "https://github.com/nota/gyazo-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/113151?v=4",
      "prompts" : 0,
      "title" : "Gyazo",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/gyazo.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/gyazo.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/nota/gyazo-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ec5b414f-b3aa-419b-9f15-041af7b085d4",
      "versionId" : "63ee49ba-0d01-4cc7-8ff7-c5ae39f53754"
    }
  }
}, {
  "name" : "com.docker.mcp/hackle",
  "description" : "Model Context Protocol server for Hackle.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/hackle",
    "version" : "sha256:03e3a8a3e3b7b9cdc172a34f5aed26e19ab7f7c865d4b991c8dc7f4e309deadb",
    "environmentVariables" : [ {
      "name" : "API_KEY",
      "value" : "{hackle.api_key}",
      "variables" : {
        "hackle.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1711,
      "githubStars" : 2,
      "category" : "devops",
      "tags" : [ "hackle", "devops" ],
      "license" : "MIT License",
      "owner" : "hackle-io",
      "tools" : [ {
        "name" : "active-user-series"
      }, {
        "name" : "analytics-chart-detail"
      }, {
        "name" : "analytics-chart-list"
      }, {
        "name" : "data-report-detail"
      }, {
        "name" : "data-report-list"
      }, {
        "name" : "experiment-detail"
      }, {
        "name" : "experiment-list"
      }, {
        "name" : "in-app-message-detail"
      }, {
        "name" : "in-app-message-list"
      }, {
        "name" : "push-message-detail"
      }, {
        "name" : "push-message-list"
      }, {
        "name" : "remote-config-create"
      }, {
        "name" : "remote-config-detail"
      }, {
        "name" : "remote-config-list"
      }, {
        "name" : "remote-config-update"
      }, {
        "name" : "remote-config-update-description"
      }, {
        "name" : "remote-config-update-user-identifier-criteria"
      }, {
        "name" : "retention-series"
      }, {
        "name" : "stickiness-series"
      } ],
      "source" : "https://github.com/hackle-io/hackle-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/65485327?v=4",
      "prompts" : 0,
      "title" : "Hackle",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hackle.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hackle.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/hackle-io/hackle-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ffd57015-8163-4cd1-a66c-700e8ab5fd05",
      "versionId" : "767ea102-60b9-4b45-94c1-f5bad3e2996d"
    }
  }
}, {
  "name" : "com.docker.mcp/handwriting-ocr",
  "description" : "Model Context Protocol (MCP) Server for Handwriting OCR.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/handwriting-ocr",
    "version" : "sha256:141e2e00e706ab0fcf27973175e3bb68efdc99dd93d170e23eabf9cb96fa52e9",
    "environmentVariables" : [ {
      "name" : "API_TOKEN",
      "value" : "{handwriting-ocr.api_token}",
      "variables" : {
        "handwriting-ocr.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2299,
      "stars" : 2,
      "githubStars" : 9,
      "category" : "devops",
      "tags" : [ "handwriting-ocr", "devops" ],
      "owner" : "Handwriting-OCR",
      "tools" : [ {
        "name" : "check_status"
      }, {
        "name" : "get_text"
      }, {
        "name" : "upload_document"
      } ],
      "source" : "https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/202432073?s=200&v=4",
      "prompts" : 0,
      "title" : "Handwriting OCR",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/handwriting-ocr.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/handwriting-ocr.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Handwriting-OCR/handwriting-ocr-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "c618f415-8219-4777-85d1-e86353c111c8",
      "versionId" : "7a75c15d-a289-4d50-9215-0f9957e79d1a"
    }
  }
}, {
  "name" : "com.docker.mcp/hdx",
  "description" : "HDX MCP Server provides access to humanitarian data through the Humanitarian Data Exchange (HDX) API - https://data.humdata.org/hapi. This server offers 33 specialized tools for retrieving humanitarian information including affected populations (refugees, IDPs, returnees), baseline demographics, food security indicators, conflict data, funding information, and operational presence across hundreds of countries and territories. See repository for instructions on getting a free HDX_APP_INDENTIFIER for access.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/hdx",
    "version" : "sha256:4fc4363ac4076d16cc8774467d64d0e489902c6ae50f1e9332ccf1bf4c21141c",
    "environmentVariables" : [ {
      "name" : "HDX_APP_IDENTIFIER",
      "value" : "{hdx.HDX_APP_IDENTIFIER}",
      "variables" : {
        "hdx.HDX_APP_IDENTIFIER" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 308,
      "githubStars" : 2,
      "category" : "search",
      "tags" : [ "search" ],
      "license" : "MIT License",
      "owner" : "dividor",
      "tools" : [ {
        "name" : "affected_people_humanitarian_needs_get"
      }, {
        "name" : "affected_people_idps_get"
      }, {
        "name" : "affected_people_refugees_get"
      }, {
        "name" : "affected_people_returnees_get"
      }, {
        "name" : "baseline_population_get"
      }, {
        "name" : "climate_rainfall_get"
      }, {
        "name" : "coordination_conflict_events_get"
      }, {
        "name" : "coordination_funding_get"
      }, {
        "name" : "coordination_national_risk_get"
      }, {
        "name" : "coordination_operational_presence_get"
      }, {
        "name" : "food_prices_get"
      }, {
        "name" : "food_security_get"
      }, {
        "name" : "hdx_get_dataset_info"
      }, {
        "name" : "hdx_search_locations"
      }, {
        "name" : "hdx_server_info"
      }, {
        "name" : "metadata_admin1_get"
      }, {
        "name" : "metadata_admin2_get"
      }, {
        "name" : "metadata_currency_get"
      }, {
        "name" : "metadata_data_availability_get"
      }, {
        "name" : "metadata_dataset_get"
      }, {
        "name" : "metadata_location_get"
      }, {
        "name" : "metadata_org_get"
      }, {
        "name" : "metadata_org_type_get"
      }, {
        "name" : "metadata_resource_get"
      }, {
        "name" : "metadata_sector_get"
      }, {
        "name" : "metadata_wfp_commodity_get"
      }, {
        "name" : "metadata_wfp_market_get"
      }, {
        "name" : "poverty_rate_get"
      }, {
        "name" : "util_version_get"
      } ],
      "source" : "https://github.com/dividor/hdx-mcp/tree/main",
      "icon" : "https://raw.githubusercontent.com/dividor/hdx-mcp/main/assets/hdx_mcp_icon_transparent_512.png",
      "prompts" : 0,
      "title" : "Humanitarian Data Exchange MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hdx.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hdx.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/dividor/hdx-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "dee88ab0-4d33-4c90-9c1a-81782d0638fb",
      "versionId" : "1ed16ff2-44b1-4341-a211-64e74358472c"
    }
  }
}, {
  "name" : "com.docker.mcp/hostinger-mcp-server",
  "description" : "Interact with Hostinger services over the Hostinger API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/api-mcp-server",
    "version" : "sha256:85bb632733ce0cf9651510cc50ee004d07a774d51a3fc7b8d0a83acd16e3714f",
    "environmentVariables" : [ {
      "name" : "APITOKEN",
      "value" : "{hostinger-mcp-server.api_token}",
      "variables" : {
        "hostinger-mcp-server.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1223,
      "githubStars" : 35,
      "category" : "devops",
      "tags" : [ "devops" ],
      "license" : "MIT License",
      "owner" : "hostinger",
      "tools" : [ {
        "name" : "DNS_deleteDNSRecordsV1"
      }, {
        "name" : "DNS_getDNSRecordsV1"
      }, {
        "name" : "DNS_getDNSSnapshotListV1"
      }, {
        "name" : "DNS_getDNSSnapshotV1"
      }, {
        "name" : "DNS_resetDNSRecordsV1"
      }, {
        "name" : "DNS_restoreDNSSnapshotV1"
      }, {
        "name" : "DNS_updateDNSRecordsV1"
      }, {
        "name" : "DNS_validateDNSRecordsV1"
      }, {
        "name" : "VPS_activateFirewallV1"
      }, {
        "name" : "VPS_attachPublicKeyV1"
      }, {
        "name" : "VPS_createFirewallRuleV1"
      }, {
        "name" : "VPS_createNewFirewallV1"
      }, {
        "name" : "VPS_createNewProjectV1"
      }, {
        "name" : "VPS_createPTRRecordV1"
      }, {
        "name" : "VPS_createPostInstallScriptV1"
      }, {
        "name" : "VPS_createPublicKeyV1"
      }, {
        "name" : "VPS_createSnapshotV1"
      }, {
        "name" : "VPS_deactivateFirewallV1"
      }, {
        "name" : "VPS_deleteFirewallRuleV1"
      }, {
        "name" : "VPS_deleteFirewallV1"
      }, {
        "name" : "VPS_deletePTRRecordV1"
      }, {
        "name" : "VPS_deletePostInstallScriptV1"
      }, {
        "name" : "VPS_deleteProjectV1"
      }, {
        "name" : "VPS_deletePublicKeyV1"
      }, {
        "name" : "VPS_deleteSnapshotV1"
      }, {
        "name" : "VPS_getActionDetailsV1"
      }, {
        "name" : "VPS_getActionsV1"
      }, {
        "name" : "VPS_getAttachedPublicKeysV1"
      }, {
        "name" : "VPS_getBackupsV1"
      }, {
        "name" : "VPS_getDataCenterListV1"
      }, {
        "name" : "VPS_getFirewallDetailsV1"
      }, {
        "name" : "VPS_getFirewallListV1"
      }, {
        "name" : "VPS_getMetricsV1"
      }, {
        "name" : "VPS_getPostInstallScriptV1"
      }, {
        "name" : "VPS_getPostInstallScriptsV1"
      }, {
        "name" : "VPS_getProjectContainersV1"
      }, {
        "name" : "VPS_getProjectContentsV1"
      }, {
        "name" : "VPS_getProjectListV1"
      }, {
        "name" : "VPS_getProjectLogsV1"
      }, {
        "name" : "VPS_getPublicKeysV1"
      }, {
        "name" : "VPS_getScanMetricsV1"
      }, {
        "name" : "VPS_getSnapshotV1"
      }, {
        "name" : "VPS_getTemplateDetailsV1"
      }, {
        "name" : "VPS_getTemplatesV1"
      }, {
        "name" : "VPS_getVirtualMachineDetailsV1"
      }, {
        "name" : "VPS_getVirtualMachinesV1"
      }, {
        "name" : "VPS_installMonarxV1"
      }, {
        "name" : "VPS_purchaseNewVirtualMachineV1"
      }, {
        "name" : "VPS_recreateVirtualMachineV1"
      }, {
        "name" : "VPS_resetHostnameV1"
      }, {
        "name" : "VPS_restartProjectV1"
      }, {
        "name" : "VPS_restartVirtualMachineV1"
      }, {
        "name" : "VPS_restoreBackupV1"
      }, {
        "name" : "VPS_restoreSnapshotV1"
      }, {
        "name" : "VPS_setHostnameV1"
      }, {
        "name" : "VPS_setNameserversV1"
      }, {
        "name" : "VPS_setPanelPasswordV1"
      }, {
        "name" : "VPS_setRootPasswordV1"
      }, {
        "name" : "VPS_setupPurchasedVirtualMachineV1"
      }, {
        "name" : "VPS_startProjectV1"
      }, {
        "name" : "VPS_startRecoveryModeV1"
      }, {
        "name" : "VPS_startVirtualMachineV1"
      }, {
        "name" : "VPS_stopProjectV1"
      }, {
        "name" : "VPS_stopRecoveryModeV1"
      }, {
        "name" : "VPS_stopVirtualMachineV1"
      }, {
        "name" : "VPS_syncFirewallV1"
      }, {
        "name" : "VPS_uninstallMonarxV1"
      }, {
        "name" : "VPS_updateFirewallRuleV1"
      }, {
        "name" : "VPS_updatePostInstallScriptV1"
      }, {
        "name" : "VPS_updateProjectV1"
      }, {
        "name" : "billing_cancelSubscriptionV1"
      }, {
        "name" : "billing_createServiceOrderV1"
      }, {
        "name" : "billing_deletePaymentMethodV1"
      }, {
        "name" : "billing_getCatalogItemListV1"
      }, {
        "name" : "billing_getPaymentMethodListV1"
      }, {
        "name" : "billing_getSubscriptionListV1"
      }, {
        "name" : "billing_setDefaultPaymentMethodV1"
      }, {
        "name" : "domains_checkDomainAvailabilityV1"
      }, {
        "name" : "domains_createDomainForwardingV1"
      }, {
        "name" : "domains_createWHOISProfileV1"
      }, {
        "name" : "domains_deleteDomainForwardingV1"
      }, {
        "name" : "domains_deleteWHOISProfileV1"
      }, {
        "name" : "domains_disableDomainLockV1"
      }, {
        "name" : "domains_disablePrivacyProtectionV1"
      }, {
        "name" : "domains_enableDomainLockV1"
      }, {
        "name" : "domains_enablePrivacyProtectionV1"
      }, {
        "name" : "domains_getDomainDetailsV1"
      }, {
        "name" : "domains_getDomainForwardingV1"
      }, {
        "name" : "domains_getDomainListV1"
      }, {
        "name" : "domains_getWHOISProfileListV1"
      }, {
        "name" : "domains_getWHOISProfileUsageV1"
      }, {
        "name" : "domains_getWHOISProfileV1"
      }, {
        "name" : "domains_purchaseNewDomainV1"
      }, {
        "name" : "domains_updateDomainNameserversV1"
      }, {
        "name" : "reach_createANewContactV1"
      }, {
        "name" : "reach_deleteAContactV1"
      }, {
        "name" : "reach_listContactGroupsV1"
      }, {
        "name" : "reach_listContactsV1"
      } ],
      "source" : "https://github.com/hostinger/api-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/2630767?v=4",
      "prompts" : 0,
      "title" : "Hostinger API MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hostinger-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hostinger-mcp-server.json",
      "dateAdded" : "2025-08-05T16:31:03Z",
      "upstream" : "https://github.com/hostinger/api-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "67e2eceb-8ebf-4ffa-b738-16470c51497c",
      "versionId" : "b271aab6-9401-444e-ac9b-c6875689eff6"
    }
  }
}, {
  "name" : "com.docker.mcp/hubspot",
  "description" : "Unite marketing, sales, and customer service with AI-powered automation, lead management, and comprehensive analytics.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://app.hubspot.com/mcp/v1/http",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${HUBSPOT_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "crm",
      "tags" : [ "crm", "marketing", "sales", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=hubspot.com&sz=64",
      "prompts" : 0,
      "title" : "HubSpot",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hubspot.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hubspot.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "45327ad3-6cde-4ef6-9bd6-90cb3f6767dd",
      "versionId" : "7827bef2-713b-4946-aae2-b8d555d1b893"
    }
  }
}, {
  "name" : "com.docker.mcp/hugging-face",
  "description" : "Tools for interacting with Hugging Face models, datasets, research papers, and more.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://huggingface.co/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "ai",
      "tags" : [ "ai", "machine-learning", "models", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "hf_whoami"
      }, {
        "name" : "space_search"
      }, {
        "name" : "model_search"
      }, {
        "name" : "paper_search"
      }, {
        "name" : "dataset_search"
      }, {
        "name" : "hub_repo_details"
      }, {
        "name" : "hf_doc_search"
      }, {
        "name" : "hf_doc_fetch"
      }, {
        "name" : "gr1_flux1_schnell_infer"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=hf.co&sz=64",
      "prompts" : 0,
      "title" : "Hugging Face",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hugging-face.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hugging-face.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0155394b-ab6c-4659-a8d5-bc29908c06c8",
      "versionId" : "25305758-8094-418a-9768-cd0a22c0050c"
    }
  }
}, {
  "name" : "com.docker.mcp/husqvarna-automower",
  "description" : "MCP Server for huqsvarna automower.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/husqvarna-automower",
    "version" : "sha256:05efbdf5e90f0b65f841dd8b3c735b48ccf21a60c410fc49b3e7551a2d7c583b",
    "environmentVariables" : [ {
      "name" : "HUSQVARNA_CLIENT_SECRET",
      "value" : "{husqvarna.client.secret}",
      "variables" : {
        "husqvarna.client.secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "HUSQVARNA_CLIENT_ID",
      "value" : "{husqvarna-automower.client_id}",
      "isRepeated" : false,
      "variables" : {
        "husqvarna-automower.client_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1417,
      "githubStars" : 1,
      "category" : "devops",
      "tags" : [ "husqvarna-automower", "devops" ],
      "owner" : "jeanlaurent",
      "tools" : [ {
        "name" : "Husqvarna Automowers Status"
      } ],
      "source" : "https://github.com/jeanlaurent/mcp-husqvarna-automower/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/17142631?v=4",
      "prompts" : 0,
      "title" : "Husqvarna Automower",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/husqvarna-automower.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/husqvarna-automower.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/jeanlaurent/mcp-husqvarna-automower",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2993671e-1d09-4cd6-b2db-59ddd9fba50e",
      "versionId" : "5c14680a-2923-4f3c-a976-de1cae0e927f"
    }
  }
}, {
  "name" : "com.docker.mcp/hyperbrowser",
  "description" : "A MCP server implementation for hyperbrowser.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/hyperbrowser",
    "version" : "sha256:11ed80138c334c419249c79e5f5acda3f4e7052c04f62f54548f00a3b9815140",
    "environmentVariables" : [ {
      "name" : "HYPERBROWSER_API_KEY",
      "value" : "{hyperbrowser.api_key}",
      "variables" : {
        "hyperbrowser.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2951,
      "stars" : 3,
      "githubStars" : 615,
      "category" : "devops",
      "tags" : [ "hyperbrowser", "devops" ],
      "license" : "MIT License",
      "owner" : "hyperbrowserai",
      "tools" : [ {
        "name" : "browser_use_agent"
      }, {
        "name" : "claude_computer_use_agent"
      }, {
        "name" : "crawl_webpages"
      }, {
        "name" : "create_profile"
      }, {
        "name" : "delete_profile"
      }, {
        "name" : "extract_structured_data"
      }, {
        "name" : "list_profiles"
      }, {
        "name" : "openai_computer_use_agent"
      }, {
        "name" : "scrape_webpage"
      }, {
        "name" : "search_with_bing"
      } ],
      "source" : "https://github.com/hyperbrowserai/mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/189776885?s=200&v=4",
      "prompts" : 0,
      "title" : "Hyperbrowser",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hyperbrowser.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hyperbrowser.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/hyperbrowserai/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "3ca542b7-c273-4f23-95eb-495747f9cc24",
      "versionId" : "b57233e6-454d-489b-8966-7d05a3630dcb"
    }
  }
}, {
  "name" : "com.docker.mcp/hyperspell",
  "description" : "Hyperspell MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/hyperspell",
    "version" : "sha256:659fcccbb147478329b45737757c1a889d06c051a93f008534bb1c185a6638ce",
    "environmentVariables" : [ {
      "name" : "HYPERSPELL_TOKEN",
      "value" : "{hyperspell.token}",
      "variables" : {
        "hyperspell.token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "USE_RESOURCES",
      "value" : "{hyperspell.use_resources}",
      "isRepeated" : false,
      "variables" : {
        "hyperspell.use_resources" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "HYPERSPELL_COLLECTION",
      "value" : "{hyperspell.collection}",
      "isRepeated" : false,
      "variables" : {
        "hyperspell.collection" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2039,
      "githubStars" : 1,
      "category" : "devops",
      "tags" : [ "hyperspell", "devops" ],
      "owner" : "hyperspell",
      "tools" : [ {
        "name" : "Add File"
      }, {
        "name" : "Add Memory"
      }, {
        "name" : "Search Hyperspell"
      } ],
      "source" : "https://github.com/hyperspell/hyperspell-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/170754924?s=200&v=4",
      "prompts" : 0,
      "title" : "Hyperspell",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/hyperspell.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/hyperspell.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/hyperspell/hyperspell-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "212bdef8-f16a-4857-8347-2ecd9ef5ea32",
      "versionId" : "0ada2460-e635-4c4a-bbce-df1e6e5b565c"
    }
  }
}, {
  "name" : "com.docker.mcp/iaptic",
  "description" : "Model Context Protocol server for interacting with iaptic.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/iaptic",
    "version" : "sha256:ed978fc5847131aca695a3dc65f25ed397acdeffc19aa5e3bc53163d2c75f2fd",
    "environmentVariables" : [ {
      "name" : "IAPTIC_API_KEY",
      "value" : "{iaptic.api_key}",
      "variables" : {
        "iaptic.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "IAPTIC_APP_NAME",
      "value" : "{iaptic.app_name}",
      "isRepeated" : false,
      "variables" : {
        "iaptic.app_name" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1850,
      "githubStars" : 4,
      "category" : "devops",
      "tags" : [ "iaptic", "devops" ],
      "license" : "MIT License",
      "owner" : "iaptic",
      "tools" : [ {
        "name" : "customer_add_purchase"
      }, {
        "name" : "customer_get"
      }, {
        "name" : "customer_list"
      }, {
        "name" : "customer_subscription"
      }, {
        "name" : "customer_transactions"
      }, {
        "name" : "event_list"
      }, {
        "name" : "iaptic_current_app"
      }, {
        "name" : "iaptic_reset_app"
      }, {
        "name" : "iaptic_switch_app"
      }, {
        "name" : "purchase_get"
      }, {
        "name" : "purchase_list"
      }, {
        "name" : "stats_app"
      }, {
        "name" : "stats_get"
      }, {
        "name" : "stripe_prices"
      }, {
        "name" : "transaction_get"
      }, {
        "name" : "transaction_list"
      } ],
      "source" : "https://github.com/iaptic/mcp-server-iaptic/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/72789805?s=200&v=4",
      "prompts" : 0,
      "title" : "Iaptic",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/iaptic.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/iaptic.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/iaptic/mcp-server-iaptic",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "3f18e34f-5606-4d75-845b-5d33c2c8e747",
      "versionId" : "902f049b-1ac3-44b4-8492-d61f18e37bec"
    }
  }
}, {
  "name" : "com.docker.mcp/inspektor-gadget",
  "description" : "AI interface to troubleshoot and observe Kubernetes/Container workloads.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/inspektor-gadget",
    "version" : "sha256:961c9132aaa3e17d480d515b74af1e039c725cab55e8cdf27d24385f918aa372",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{inspektor-gadget.kubeconfig}:/kubeconfig",
      "isRepeated" : false,
      "variables" : {
        "inspektor-gadget.kubeconfig" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Path to the kubeconfig file for accessing Kubernetes clusters"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "named",
      "name" : "-gadget-discoverer",
      "value" : "artifacthub"
    }, {
      "type" : "named",
      "name" : "-gadget-images",
      "value" : "{inspektor-gadget.gadget-images}",
      "isRepeated" : false,
      "variables" : {
        "inspektor-gadget.gadget-images" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Comma-separated list of gadget images (trace_dns, trace_tcp, etc) to use, allowing control over which gadgets are available as MCP tools"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 817,
      "stars" : 2,
      "githubStars" : 14,
      "category" : "monitoring",
      "tags" : [ "inspektor-gadget", "kubernetes", "monitoring", "ebpf" ],
      "license" : "Apache License 2.0",
      "owner" : "inspektor-gadget",
      "tools" : [ {
        "name" : "gadget_advise_networkpolicy"
      }, {
        "name" : "gadget_advise_seccomp"
      }, {
        "name" : "gadget_audit_seccomp"
      }, {
        "name" : "gadget_bpfstats"
      }, {
        "name" : "gadget_deadlock"
      }, {
        "name" : "gadget_fdpass"
      }, {
        "name" : "gadget_fsnotify"
      }, {
        "name" : "gadget_profile_blockio"
      }, {
        "name" : "gadget_profile_cpu"
      }, {
        "name" : "gadget_profile_qdisc_latency"
      }, {
        "name" : "gadget_profile_tcprtt"
      }, {
        "name" : "gadget_snapshot_process"
      }, {
        "name" : "gadget_snapshot_socket"
      }, {
        "name" : "gadget_top_blockio"
      }, {
        "name" : "gadget_top_file"
      }, {
        "name" : "gadget_top_process"
      }, {
        "name" : "gadget_top_tcp"
      }, {
        "name" : "gadget_trace_bind"
      }, {
        "name" : "gadget_trace_capabilities"
      }, {
        "name" : "gadget_trace_dns"
      }, {
        "name" : "gadget_trace_exec"
      }, {
        "name" : "gadget_trace_fsslower"
      }, {
        "name" : "gadget_trace_lsm"
      }, {
        "name" : "gadget_trace_malloc"
      }, {
        "name" : "gadget_trace_mount"
      }, {
        "name" : "gadget_trace_oomkill"
      }, {
        "name" : "gadget_trace_open"
      }, {
        "name" : "gadget_trace_signal"
      }, {
        "name" : "gadget_trace_sni"
      }, {
        "name" : "gadget_trace_ssl"
      }, {
        "name" : "gadget_trace_tcp"
      }, {
        "name" : "gadget_trace_tcpdrop"
      }, {
        "name" : "gadget_trace_tcpretrans"
      }, {
        "name" : "gadget_traceloop"
      }, {
        "name" : "ig_deploy"
      }, {
        "name" : "ig_gadgets"
      } ],
      "source" : "https://github.com/inspektor-gadget/ig-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/111520143?s=200&v=4",
      "prompts" : 0,
      "title" : "Inspektor Gadget",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/inspektor-gadget.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/inspektor-gadget.json",
      "dateAdded" : "2025-07-29T14:05:27Z",
      "upstream" : "https://github.com/inspektor-gadget/ig-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "761d5694-d841-48ce-9f8d-2184c5e7d5b8",
      "versionId" : "9fcfa196-e6dd-4c48-80ad-45e5d4d99159"
    }
  }
}, {
  "name" : "com.docker.mcp/javadocs",
  "description" : "Access to Java, Kotlin, and Scala library documentation.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://www.javadocs.dev/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "documentation",
      "tags" : [ "documentation", "java", "api", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "get_latest_version"
      }, {
        "name" : "get_javadoc_content_list"
      }, {
        "name" : "get_javadoc_symbol_contents"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=javadocs.dev&sz=64",
      "prompts" : 0,
      "title" : "Javadocs",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/javadocs.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/javadocs.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "68e26de8-0e6f-4e93-ae6b-319f10f1a95b",
      "versionId" : "64005b2e-30f1-4721-8c04-4b0b02e3d08c"
    }
  }
}, {
  "name" : "com.docker.mcp/jetbrains",
  "description" : "A model context protocol server to work with JetBrains IDEs: IntelliJ, PyCharm, WebStorm, etc. Also, works with Android Studio.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/jetbrains",
    "version" : "sha256:a662cac15c5d318e3519af2700c8b3455dfd7225b47c4d331c0c306255f6fd5b",
    "environmentVariables" : [ {
      "name" : "IDE_PORT",
      "value" : "{jetbrains.port}",
      "isRepeated" : false,
      "variables" : {
        "jetbrains.port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 6396,
      "stars" : 2,
      "githubStars" : 3,
      "category" : "devops",
      "tags" : [ "jetbrains", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "GannaChernyshova",
      "tools" : [ {
        "name" : "create_new_file_with_text"
      }, {
        "name" : "execute_action_by_id"
      }, {
        "name" : "execute_terminal_command"
      }, {
        "name" : "find_commit_by_message"
      }, {
        "name" : "find_files_by_name_substring"
      }, {
        "name" : "get_all_open_file_paths"
      }, {
        "name" : "get_all_open_file_texts"
      }, {
        "name" : "get_debugger_breakpoints"
      }, {
        "name" : "get_file_text_by_path"
      }, {
        "name" : "get_open_in_editor_file_path"
      }, {
        "name" : "get_open_in_editor_file_text"
      }, {
        "name" : "get_progress_indicators"
      }, {
        "name" : "get_project_dependencies"
      }, {
        "name" : "get_project_modules"
      }, {
        "name" : "get_project_vcs_status"
      }, {
        "name" : "get_run_configurations"
      }, {
        "name" : "get_selected_in_editor_text"
      }, {
        "name" : "get_terminal_text"
      }, {
        "name" : "list_available_actions"
      }, {
        "name" : "list_directory_tree_in_folder"
      }, {
        "name" : "list_files_in_folder"
      }, {
        "name" : "open_file_in_editor"
      }, {
        "name" : "replace_current_file_text"
      }, {
        "name" : "replace_file_text_by_path"
      }, {
        "name" : "replace_selected_text"
      }, {
        "name" : "replace_specific_text"
      }, {
        "name" : "run_configuration"
      }, {
        "name" : "search_in_files_content"
      }, {
        "name" : "toggle_debugger_breakpoint"
      }, {
        "name" : "wait"
      } ],
      "source" : "https://github.com/GannaChernyshova/mcp-jetbrains/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/878437?s=200&v=4",
      "prompts" : 0,
      "title" : "JetBrains",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/jetbrains.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/jetbrains.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/GannaChernyshova/mcp-jetbrains",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d96de8d4-aba8-460a-90d1-c8701f5cd593",
      "versionId" : "fd33e657-f89a-4541-90d0-0b53a8d465f3"
    }
  }
}, {
  "name" : "com.docker.mcp/kagisearch",
  "description" : "The Official Model Context Protocol (MCP) server for Kagi search & other tools.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/kagisearch",
    "version" : "sha256:a04696f75f842225462060a8b5f4207e6ca086e59dc38c3fb52ae02d36d41403",
    "environmentVariables" : [ {
      "name" : "KAGI_API_KEY",
      "value" : "{kagisearch.api_key}",
      "variables" : {
        "kagisearch.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "KAGI_SUMMARIZER_ENGINE",
      "value" : "{kagisearch.engine}",
      "isRepeated" : false,
      "variables" : {
        "kagisearch.engine" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2258,
      "stars" : 1,
      "githubStars" : 189,
      "category" : "devops",
      "tags" : [ "kagisearch", "devops" ],
      "license" : "MIT License",
      "owner" : "kagisearch",
      "tools" : [ {
        "name" : "kagi_search_fetch"
      }, {
        "name" : "kagi_summarizer"
      } ],
      "source" : "https://github.com/kagisearch/kagimcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/92134518?s=200&v=4",
      "prompts" : 0,
      "title" : "Kagi search",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/kagisearch.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/kagisearch.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/kagisearch/kagimcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e09cf13f-0797-4928-81b5-e484d0ab6299",
      "versionId" : "4ea69323-5ef8-4e3a-94b4-954d675eb540"
    }
  }
}, {
  "name" : "com.docker.mcp/keboola-mcp",
  "description" : "Keboola MCP Server is an open-source bridge between your Keboola project and modern AI tools.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/keboola-mcp",
    "version" : "sha256:033110d3083b9986cdb531860730ec4adc2bd417a4efc2f74a8dd95c8b31a6f0",
    "environmentVariables" : [ {
      "name" : "KBC_STORAGE_TOKEN",
      "value" : "{keboola-mcp.kbc_storage_token}",
      "variables" : {
        "keboola-mcp.kbc_storage_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "KBC_WORKSPACE_SCHEMA",
      "value" : "{keboola-mcp.kbc_workspace_schema}",
      "isRepeated" : false,
      "variables" : {
        "keboola-mcp.kbc_workspace_schema" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1501,
      "githubStars" : 68,
      "category" : "devops",
      "tags" : [ "data-platform", "etl-pipeline", "storage" ],
      "license" : "MIT License",
      "owner" : "keboola",
      "tools" : [ {
        "name" : "add_config_row"
      }, {
        "name" : "create_config"
      }, {
        "name" : "create_flow"
      }, {
        "name" : "create_oauth_url"
      }, {
        "name" : "create_sql_transformation"
      }, {
        "name" : "docs_query"
      }, {
        "name" : "find_component_id"
      }, {
        "name" : "get_bucket"
      }, {
        "name" : "get_component"
      }, {
        "name" : "get_config"
      }, {
        "name" : "get_config_examples"
      }, {
        "name" : "get_flow"
      }, {
        "name" : "get_flow_schema"
      }, {
        "name" : "get_job"
      }, {
        "name" : "get_project_info"
      }, {
        "name" : "get_sql_dialect"
      }, {
        "name" : "get_table"
      }, {
        "name" : "list_buckets"
      }, {
        "name" : "list_configs"
      }, {
        "name" : "list_flows"
      }, {
        "name" : "list_jobs"
      }, {
        "name" : "list_tables"
      }, {
        "name" : "list_transformations"
      }, {
        "name" : "query_data"
      }, {
        "name" : "run_job"
      }, {
        "name" : "search"
      }, {
        "name" : "update_bucket_description"
      }, {
        "name" : "update_column_description"
      }, {
        "name" : "update_config"
      }, {
        "name" : "update_config_row"
      }, {
        "name" : "update_flow"
      }, {
        "name" : "update_sql_transformation"
      }, {
        "name" : "update_table_description"
      } ],
      "source" : "https://github.com/keboola/mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/1424387?v=4",
      "prompts" : 0,
      "title" : "Keboola MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/keboola-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/keboola-mcp.json",
      "dateAdded" : "2025-06-16T10:10:08Z",
      "upstream" : "https://github.com/keboola/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "333da861-3985-49b1-9b9f-a6483e0d205c",
      "versionId" : "2ceca5af-bba0-4b64-9fe3-441d3369cc01"
    }
  }
}, {
  "name" : "com.docker.mcp/kong",
  "description" : "A Model Context Protocol (MCP) server for interacting with Kong Konnect APIs, allowing AI assistants to query and analyze Kong Gateway configurations, traffic, and analytics.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/kong",
    "version" : "sha256:7988d6e1b0bf6af8a1062358693f6e5cd4ed5019bc4eca553753c6ab40f285c7",
    "environmentVariables" : [ {
      "name" : "KONNECT_ACCESS_TOKEN",
      "value" : "{kong.access_token}",
      "variables" : {
        "kong.access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "KONNECT_REGION",
      "value" : "{kong.region}",
      "isRepeated" : false,
      "variables" : {
        "kong.region" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2133,
      "githubStars" : 35,
      "category" : "devops",
      "tags" : [ "kong", "devops", "service-mesh" ],
      "license" : "Apache License 2.0",
      "owner" : "Kong",
      "tools" : [ {
        "name" : "check_control_plane_group_membership"
      }, {
        "name" : "get_consumer_requests"
      }, {
        "name" : "get_control_plane"
      }, {
        "name" : "list_consumers"
      }, {
        "name" : "list_control_plane_group_memberships"
      }, {
        "name" : "list_control_planes"
      }, {
        "name" : "list_plugins"
      }, {
        "name" : "list_routes"
      }, {
        "name" : "list_services"
      }, {
        "name" : "query_api_requests"
      } ],
      "source" : "https://github.com/Kong/mcp-konnect/tree/refs/pull/7/merge",
      "icon" : "https://avatars.githubusercontent.com/u/962416?s=200&v=4",
      "prompts" : 0,
      "title" : "Kong Konnect",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/kong.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/kong.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Kong/mcp-konnect",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "88a9dc50-2665-47e2-a838-dbe93290a0bc",
      "versionId" : "eaae940b-6ecf-4781-915f-3b1571dedb06"
    }
  }
}, {
  "name" : "com.docker.mcp/kubectl-mcp-server",
  "description" : "MCP Server that enables AI assistants to interact with Kubernetes clusters via kubectl operations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/kubectl-mcp-server",
    "version" : "sha256:29bf6aef7a69f8ce7927106f1bd7eb3977c11422bacb20c5d1389d3d50f1c8d6",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{kubectl-mcp-server.kubeconfig}:/root/.kube",
      "isRepeated" : false,
      "variables" : {
        "kubectl-mcp-server.kubeconfig" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 357,
      "githubStars" : 721,
      "category" : "devops",
      "tags" : [ "kubectl-mcp-server", "kubernetes", "kubectl", "devops" ],
      "license" : "MIT License",
      "owner" : "rohitg00",
      "tools" : [ {
        "name" : "check_pod_health"
      }, {
        "name" : "create_deployment"
      }, {
        "name" : "delete_resource"
      }, {
        "name" : "get_api_resources"
      }, {
        "name" : "get_cluster_roles"
      }, {
        "name" : "get_configmaps"
      }, {
        "name" : "get_current_context"
      }, {
        "name" : "get_deployments"
      }, {
        "name" : "get_events"
      }, {
        "name" : "get_logs"
      }, {
        "name" : "get_namespaces"
      }, {
        "name" : "get_nodes"
      }, {
        "name" : "get_pod_events"
      }, {
        "name" : "get_pods"
      }, {
        "name" : "get_rbac_roles"
      }, {
        "name" : "get_resource_usage"
      }, {
        "name" : "get_secrets"
      }, {
        "name" : "get_services"
      }, {
        "name" : "health_check"
      }, {
        "name" : "install_helm_chart"
      }, {
        "name" : "kubectl_explain"
      }, {
        "name" : "port_forward"
      }, {
        "name" : "scale_deployment"
      }, {
        "name" : "switch_context"
      }, {
        "name" : "uninstall_helm_chart"
      }, {
        "name" : "upgrade_helm_chart"
      } ],
      "source" : "https://github.com/rohitg00/kubectl-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/13629408?s=200&v=4",
      "prompts" : 0,
      "title" : "Kubectl MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/kubectl-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/kubectl-mcp-server.json",
      "dateAdded" : "2025-09-16T14:38:22Z",
      "upstream" : "https://github.com/rohitg00/kubectl-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e1dc8cfc-532f-414a-8187-9f8e72f93c8c",
      "versionId" : "9ed983cf-69e3-4d8c-ab7a-c5ebaadd859c"
    }
  }
}, {
  "name" : "com.docker.mcp/kubernetes",
  "description" : "Connect to a Kubernetes cluster and manage it.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/kubernetes",
    "version" : "sha256:a05a51035eb3ad3311df3290f048aaffec09a5cc84d71342f8369752b4d0de3c",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{kubernetes.config_path}:/home/appuser/.kube/config",
      "isRepeated" : false,
      "variables" : {
        "kubernetes.config_path" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "the path to the host .kube/config"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 22382,
      "stars" : 14,
      "githubStars" : 1086,
      "category" : "devops",
      "tags" : [ "kubernetes", "devops" ],
      "license" : "MIT License",
      "owner" : "Flux159",
      "tools" : [ {
        "name" : "cleanup"
      }, {
        "name" : "exec_in_pod"
      }, {
        "name" : "explain_resource"
      }, {
        "name" : "install_helm_chart"
      }, {
        "name" : "kubectl_apply"
      }, {
        "name" : "kubectl_context"
      }, {
        "name" : "kubectl_create"
      }, {
        "name" : "kubectl_delete"
      }, {
        "name" : "kubectl_describe"
      }, {
        "name" : "kubectl_generic"
      }, {
        "name" : "kubectl_get"
      }, {
        "name" : "kubectl_logs"
      }, {
        "name" : "kubectl_patch"
      }, {
        "name" : "kubectl_rollout"
      }, {
        "name" : "kubectl_scale"
      }, {
        "name" : "list_api_resources"
      }, {
        "name" : "node_management"
      }, {
        "name" : "ping"
      }, {
        "name" : "port_forward"
      }, {
        "name" : "stop_port_forward"
      }, {
        "name" : "uninstall_helm_chart"
      }, {
        "name" : "upgrade_helm_chart"
      } ],
      "source" : "https://github.com/Flux159/mcp-server-kubernetes/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/13629408?s=200&v=4",
      "prompts" : 0,
      "title" : "Kubernetes",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/kubernetes.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/kubernetes.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Flux159/mcp-server-kubernetes",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b6dfc688-8002-42f3-82a4-4267f93c3ead",
      "versionId" : "cdfc7bc5-6a59-4eea-9006-9023ac642e71"
    }
  }
}, {
  "name" : "com.docker.mcp/lara",
  "description" : "Connect to Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/lara",
    "version" : "sha256:2e2b67bde40751712c6c73f08afc200ce29d316d5ddd5be3f284f0414212b1b2",
    "environmentVariables" : [ {
      "name" : "LARA_ACCESS_KEY_SECRET",
      "value" : "{lara.key_secret}",
      "variables" : {
        "lara.key_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "LARA_ACCESS_KEY_ID",
      "value" : "{lara.key_id}",
      "isRepeated" : false,
      "variables" : {
        "lara.key_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2322,
      "stars" : 3,
      "githubStars" : 71,
      "category" : "devops",
      "tags" : [ "lara", "devops" ],
      "license" : "MIT License",
      "owner" : "translated",
      "tools" : [ {
        "name" : "add_translation"
      }, {
        "name" : "check_import_status"
      }, {
        "name" : "create_memory"
      }, {
        "name" : "delete_memory"
      }, {
        "name" : "delete_translation"
      }, {
        "name" : "import_tmx"
      }, {
        "name" : "list_languages"
      }, {
        "name" : "list_memories"
      }, {
        "name" : "translate"
      }, {
        "name" : "update_memory"
      } ],
      "source" : "https://github.com/translated/lara-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/10272138?s=200&v=4",
      "prompts" : 0,
      "title" : "Lara Translate",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/lara.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/lara.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/translated/lara-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0abb15e4-e283-4f9b-91f8-348d1b83bed1",
      "versionId" : "2d485080-81df-4bc7-8873-21255733c154"
    }
  }
}, {
  "name" : "com.docker.mcp/line",
  "description" : "MCP server that integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/line",
    "version" : "sha256:b0df1e7ff1d79510cd23abbb6a0dacb697e96a4d4f85d9a9f8c625bdf838cd49",
    "environmentVariables" : [ {
      "name" : "CHANNEL_ACCESS_TOKEN",
      "value" : "{line.access_token}",
      "variables" : {
        "line.access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DESTINATION_USER_ID",
      "value" : "{line.user_id}",
      "isRepeated" : false,
      "variables" : {
        "line.user_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 5200,
      "githubStars" : 461,
      "category" : "devops",
      "tags" : [ "line", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "line",
      "tools" : [ {
        "name" : "broadcast_flex_message"
      }, {
        "name" : "broadcast_text_message"
      }, {
        "name" : "cancel_rich_menu_default"
      }, {
        "name" : "delete_rich_menu"
      }, {
        "name" : "get_message_quota"
      }, {
        "name" : "get_profile"
      }, {
        "name" : "get_rich_menu_list"
      }, {
        "name" : "push_flex_message"
      }, {
        "name" : "push_text_message"
      }, {
        "name" : "set_rich_menu_default"
      } ],
      "source" : "https://github.com/line/line-bot-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/13128444?v=4",
      "prompts" : 0,
      "title" : "LINE",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/line.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/line.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/line/line-bot-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "bbf80bdc-8eb0-4f03-8545-3bd466a5fa87",
      "versionId" : "28eb3425-ecae-483d-b77a-5413b153a169"
    }
  }
}, {
  "name" : "com.docker.mcp/llmtxt",
  "description" : "Discovers and retrieves llms.txt from websites.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "sse",
    "url" : "https://mcp.llmtxt.dev/sse"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "ai",
      "tags" : [ "ai", "llm", "text-processing", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "llms.txt-file"
      }, {
        "name" : "git"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=llmtxt.dev&sz=64",
      "prompts" : 0,
      "title" : "LLM Text",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/llmtxt.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/llmtxt.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "5ef161c5-8047-4a1c-adc8-4226ba9a1791",
      "versionId" : "37e8c13f-b714-4b25-9004-8afe3c407ee2"
    }
  }
}, {
  "name" : "com.docker.mcp/maestro-mcp-server",
  "description" : "A Model Context Protocol (MCP) server exposing Bitcoin blockchain data through the Maestro API platform. Provides tools to explore blocks, transactions, addresses, inscriptions, runes, and other metaprotocol data.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/maestro-mcp-server",
    "version" : "sha256:f59151e2a665580f0fd7064112d5bac378f46179462bfe02307e016f98e2cd96",
    "environmentVariables" : [ {
      "name" : "API_KEY_API_KEY",
      "value" : "{maestro-mcp-server.API_KEY_API_KEY}",
      "variables" : {
        "maestro-mcp-server.API_KEY_API_KEY" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 62,
      "githubStars" : 18,
      "category" : "monitoring",
      "tags" : [ "monitoring", "blockchain", "bitcoin", "rpc" ],
      "license" : "Apache License 2.0",
      "owner" : "maestro-org",
      "tools" : [ {
        "name" : "get_address_activity"
      }, {
        "name" : "get_address_balance"
      }, {
        "name" : "get_address_balance_historical"
      }, {
        "name" : "get_address_brc20"
      }, {
        "name" : "get_address_brc20_transfer_inscriptions"
      }, {
        "name" : "get_address_inscriptions"
      }, {
        "name" : "get_address_inscription_activity"
      }, {
        "name" : "get_address_runes"
      }, {
        "name" : "get_address_rune_activity"
      }, {
        "name" : "get_address_rune_utxos"
      }, {
        "name" : "get_address_statistics"
      }, {
        "name" : "get_address_txs"
      }, {
        "name" : "get_address_utxos"
      }, {
        "name" : "get_mempool_address_balance"
      }, {
        "name" : "get_mempool_address_runes"
      }, {
        "name" : "list_brc20_assets"
      }, {
        "name" : "get_brc20_info"
      }, {
        "name" : "list_supported_dexs"
      }, {
        "name" : "get_dex_ohlc"
      }, {
        "name" : "get_btc_price_by_timestamp"
      }, {
        "name" : "get_rune_price_by_timestamp"
      }, {
        "name" : "rpc_chain_info"
      }, {
        "name" : "rpc_mempool_info"
      }, {
        "name" : "rpc_mempool_transactions"
      }, {
        "name" : "rpc_block_miner_info"
      }, {
        "name" : "rpc_block_volume"
      }, {
        "name" : "event_healthcheck"
      }, {
        "name" : "event_list_logs"
      }, {
        "name" : "event_get_log"
      }, {
        "name" : "event_list_triggers"
      }, {
        "name" : "event_create_trigger"
      }, {
        "name" : "event_get_trigger"
      }, {
        "name" : "event_update_trigger"
      }, {
        "name" : "event_delete_trigger"
      }, {
        "name" : "event_list_trigger_condition_options"
      } ],
      "source" : "https://github.com/maestro-org/maestro-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/84299480?s=200&v=4",
      "prompts" : 0,
      "title" : "Maestro MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/maestro-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/maestro-mcp-server.json",
      "dateAdded" : "2025-09-19T18:59:08Z",
      "upstream" : "https://github.com/maestro-org/maestro-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "30aafd9f-627f-487b-9916-70a8716c33d2",
      "versionId" : "edc47a45-9fbf-493b-abad-4fb22602b19f"
    }
  }
}, {
  "name" : "com.docker.mcp/manifold",
  "description" : "Tools for accessing the Manifold Markets online prediction market platform.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://api.manifold.markets/v0/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "analytics",
      "tags" : [ "analytics", "forecasting", "prediction-markets", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "search-markets"
      }, {
        "name" : "get-market"
      }, {
        "name" : "get-user"
      }, {
        "name" : "get-bets"
      }, {
        "name" : "search-users"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=manifold.markets&sz=64",
      "prompts" : 0,
      "title" : "Manifold",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/manifold.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/manifold.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "66b730fb-768e-4305-beee-77e60b9d6375",
      "versionId" : "39f826d8-2d8a-4700-aced-df3ab24d92ac"
    }
  }
}, {
  "name" : "com.docker.mcp/mapbox",
  "description" : "Transform any AI agent into a geospatially-aware system with Mapbox APIs. Provides geocoding, POI search, routing, travel time matrices, isochrones, and static map generation.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mapbox",
    "version" : "sha256:5d3e688b0bafc79287bf6b56f27bbe56505ff7c9541631f49076029fc4b109f3",
    "environmentVariables" : [ {
      "name" : "MAPBOX_ACCESS_TOKEN",
      "value" : "{mapbox.access_token}",
      "variables" : {
        "mapbox.access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 683,
      "githubStars" : 264,
      "category" : "maps",
      "tags" : [ "mapbox", "maps", "geospatial", "navigation", "geocoding" ],
      "license" : "MIT License",
      "owner" : "mapbox",
      "tools" : [ {
        "name" : "category_list_tool"
      }, {
        "name" : "category_search_tool"
      }, {
        "name" : "directions_tool"
      }, {
        "name" : "isochrone_tool"
      }, {
        "name" : "matrix_tool"
      }, {
        "name" : "reverse_geocode_tool"
      }, {
        "name" : "search_and_geocode_tool"
      }, {
        "name" : "static_map_image_tool"
      }, {
        "name" : "version_tool"
      } ],
      "source" : "https://github.com/mapbox/mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/600935?s=200&v=4",
      "prompts" : 0,
      "title" : "Mapbox MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mapbox.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mapbox.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/mapbox/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "c89d51ca-7742-458f-9ceb-cccd704e1db1",
      "versionId" : "c16e9aff-4441-410a-b656-2ddcc071988e"
    }
  }
}, {
  "name" : "com.docker.mcp/mapbox-devkit",
  "description" : "Direct access to Mapbox developer APIs for AI assistants. Enables style management, token management, GeoJSON preview, and other developer tools for building Mapbox applications.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mapbox-devkit",
    "version" : "sha256:fa4467bd64a1776d3535b37c5f0806c332b0b3858d3719c7e9625cd0a8d78bef",
    "environmentVariables" : [ {
      "name" : "MAPBOX_ACCESS_TOKEN",
      "value" : "{mapbox-devkit.access_token}",
      "variables" : {
        "mapbox-devkit.access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 574,
      "githubStars" : 16,
      "category" : "devops",
      "tags" : [ "mapbox", "development", "devtools", "api", "styles" ],
      "license" : "MIT License",
      "owner" : "mapbox",
      "tools" : [ {
        "name" : "bounding_box_tool"
      }, {
        "name" : "coordinate_conversion_tool"
      }, {
        "name" : "country_bounding_box_tool"
      }, {
        "name" : "create_style_tool"
      }, {
        "name" : "create_token_tool"
      }, {
        "name" : "delete_style_tool"
      }, {
        "name" : "geojson_preview_tool"
      }, {
        "name" : "get_latest_mapbox_docs_tool"
      }, {
        "name" : "list_styles_tool"
      }, {
        "name" : "list_tokens_tool"
      }, {
        "name" : "preview_style_tool"
      }, {
        "name" : "retrieve_style_tool"
      }, {
        "name" : "style_builder_tool"
      }, {
        "name" : "style_comparison_tool"
      }, {
        "name" : "tilequery_tool"
      }, {
        "name" : "update_style_tool"
      } ],
      "source" : "https://github.com/mapbox/mcp-devkit-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/600935?s=200&v=4",
      "prompts" : 0,
      "title" : "Mapbox Developer MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mapbox-devkit.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mapbox-devkit.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/mapbox/mcp-devkit-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "45554887-2586-4fc1-9554-3719f7318329",
      "versionId" : "ea9b1131-696a-44d5-9fee-71ae1ecf31f5"
    }
  }
}, {
  "name" : "com.docker.mcp/markdownify",
  "description" : "A Model Context Protocol server for converting almost anything to Markdown.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/markdownify",
    "version" : "sha256:310ee6fb7120f9da1318e58addf888686d816e255e2a8c43996f35e494812a6c",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{markdownify.paths}:{markdownify.paths}",
      "isRepeated" : true,
      "variables" : {
        "markdownify.paths" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1612,
      "stars" : 1,
      "githubStars" : 2144,
      "category" : "productivity",
      "tags" : [ "productivity", "markdown", "conversion", "pdf", "docx", "pptx", "xlsx", "html", "audio", "youtube" ],
      "license" : "MIT License",
      "owner" : "zcaceres",
      "tools" : [ {
        "name" : "audio-to-markdown"
      }, {
        "name" : "bing-search-to-markdown"
      }, {
        "name" : "docx-to-markdown"
      }, {
        "name" : "get-markdown-file"
      }, {
        "name" : "image-to-markdown"
      }, {
        "name" : "pdf-to-markdown"
      }, {
        "name" : "pptx-to-markdown"
      }, {
        "name" : "webpage-to-markdown"
      }, {
        "name" : "xlsx-to-markdown"
      }, {
        "name" : "youtube-to-markdown"
      } ],
      "source" : "https://github.com/zcaceres/markdownify-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Markdownify",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/markdownify.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/markdownify.json",
      "dateAdded" : "2025-08-25T06:19:52Z",
      "upstream" : "https://github.com/zcaceres/markdownify-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "bc97d142-c1ae-40f6-81d5-02772e333db4",
      "versionId" : "55dc402d-3b61-4a7b-8243-f32fb4d2a7ca"
    }
  }
}, {
  "name" : "com.docker.mcp/markitdown",
  "description" : "A lightweight MCP server for calling MarkItDown.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/markitdown",
    "version" : "sha256:ac2cdd96f844c7535b1dd2f1b96cdc433f55a7117fb2d48f223740f5ad1db1cc",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{markitdown.paths}:{markitdown.paths}",
      "isRepeated" : true,
      "variables" : {
        "markitdown.paths" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2241,
      "githubStars" : 79994,
      "category" : "productivity",
      "tags" : [ "productivity", "markdown", "conversion", "pdf", "docx", "pptx", "xlsx", "html", "audio", "youtube" ],
      "license" : "MIT License",
      "owner" : "microsoft",
      "tools" : [ {
        "name" : "convert_to_markdown"
      } ],
      "source" : "https://github.com/microsoft/markitdown/tree/main/packages/markitdown-mcp",
      "icon" : "https://avatars.githubusercontent.com/u/6154722?v=4",
      "prompts" : 0,
      "title" : "Markitdown",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/markitdown.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/markitdown.json",
      "dateAdded" : "2025-08-25T06:19:52Z",
      "upstream" : "https://github.com/microsoft/markitdown",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a430c994-b628-40ea-ade0-bf50a4271cdb",
      "versionId" : "d69f8fbc-bf62-4082-9176-c4a526406e5a"
    }
  }
}, {
  "name" : "com.docker.mcp/mcp-api-gateway",
  "description" : "A universal MCP (Model Context Protocol) server to integrate any API with Claude Desktop using only Docker configurations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/api-gateway",
    "version" : "sha256:9cc67b4a037fa5657bbc7231b3b8ec8524e663125ba7c1636ef2bd892137b1da",
    "environmentVariables" : [ {
      "name" : "API_1_NAME",
      "value" : "{mcp-api-gateway.api_1_name}",
      "isRepeated" : false,
      "variables" : {
        "mcp-api-gateway.api_1_name" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "API_1_SWAGGER_URL",
      "value" : "{mcp-api-gateway.api_1_swagger_url}",
      "isRepeated" : false,
      "variables" : {
        "mcp-api-gateway.api_1_swagger_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "API_1_HEADER_AUTHORIZATION",
      "value" : "{mcp-api-gateway.api_1_header_authorization}",
      "isRepeated" : false,
      "variables" : {
        "mcp-api-gateway.api_1_header_authorization" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3913,
      "stars" : 6,
      "githubStars" : 22,
      "category" : "devops",
      "tags" : [ "api-gateway", "devops" ],
      "owner" : "rflpazini",
      "tools" : [ {
        "name" : "execute_api"
      }, {
        "name" : "get_api_info"
      } ],
      "source" : "https://github.com/rflpazini/mcp-api-gateway/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Api-gateway",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mcp-api-gateway.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mcp-api-gateway.json",
      "dateAdded" : "2025-06-11T14:21:25Z",
      "upstream" : "https://github.com/rflpazini/mcp-api-gateway",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "4465616f-ff83-4df2-932f-646aa7b76de6",
      "versionId" : "123405d8-784a-40f3-8c23-ac9a4d0614c5"
    }
  }
}, {
  "name" : "com.docker.mcp/mcp-code-interpreter",
  "description" : "A Python-based execution tool that mimics a Jupyter notebook environment. It accepts code snippets, executes them, and maintains state across sessions — preserving variables, imports, and past results. Ideal for iterative development, debugging, or code execution.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mcp-code-interpreter",
    "version" : "sha256:d6ce03d191c78b8e1b76eb861759c005469fc05606c7d8cc4fe64355a24550a9",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "notebooks:/app/notebooks"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1155,
      "stars" : 2,
      "githubStars" : 4,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "license" : "MIT License",
      "owner" : "akuadane",
      "tools" : [ {
        "name" : "execute_code"
      } ],
      "source" : "https://github.com/akuadane/mcp-code-interpreter/tree/main",
      "icon" : "https://raw.githubusercontent.com/akuadane/mcp-code-interpreter/refs/heads/main/asset/logo.png",
      "prompts" : 0,
      "title" : "Python Interpreter",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mcp-code-interpreter.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mcp-code-interpreter.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/akuadane/mcp-code-interpreter",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "8e4654cd-85ec-4e8e-9583-c0a8ef5bbdca",
      "versionId" : "49819d23-f267-4ae8-b83e-861e041b2ddd"
    }
  }
}, {
  "name" : "com.docker.mcp/mcp-discord",
  "description" : "Interact with the Discord platform.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mcp-discord",
    "version" : "sha256:a9f146c6e7cc88bca04aee004c24d98d050fc01c54a9cc03731484754a401282",
    "environmentVariables" : [ {
      "name" : "DISCORD_TOKEN",
      "value" : "{discord.token}",
      "variables" : {
        "discord.token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 4292,
      "stars" : 15,
      "githubStars" : 8,
      "category" : "devops",
      "tags" : [ "discord", "devops" ],
      "license" : "MIT License",
      "owner" : "slimslenderslacks",
      "tools" : [ {
        "name" : "discord_add_multiple_reactions"
      }, {
        "name" : "discord_add_reaction"
      }, {
        "name" : "discord_create_forum_post"
      }, {
        "name" : "discord_create_text_channel"
      }, {
        "name" : "discord_create_webhook"
      }, {
        "name" : "discord_delete_channel"
      }, {
        "name" : "discord_delete_forum_post"
      }, {
        "name" : "discord_delete_message"
      }, {
        "name" : "discord_delete_webhook"
      }, {
        "name" : "discord_edit_webhook"
      }, {
        "name" : "discord_get_forum_channels"
      }, {
        "name" : "discord_get_forum_post"
      }, {
        "name" : "discord_get_server_info"
      }, {
        "name" : "discord_login"
      }, {
        "name" : "discord_read_messages"
      }, {
        "name" : "discord_remove_reaction"
      }, {
        "name" : "discord_reply_to_forum"
      }, {
        "name" : "discord_send"
      }, {
        "name" : "discord_send_webhook_message"
      }, {
        "name" : "test"
      } ],
      "source" : "https://github.com/slimslenderslacks/mcp-discord/tree/slim/docker",
      "icon" : "https://avatars.githubusercontent.com/u/1965106?s=200&v=4",
      "prompts" : 0,
      "title" : "Discord",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mcp-discord.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mcp-discord.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/slimslenderslacks/mcp-discord",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "20678009-e34d-4306-a6e8-b330034f82aa",
      "versionId" : "81c42f83-fc2e-4cc0-ac25-a69b8b4a9822"
    }
  }
}, {
  "name" : "com.docker.mcp/mcp-hackernews",
  "description" : "A Model Context Protocol (MCP) server that provides access to Hacker News stories, comments, and user data, with support for search and content retrieval.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/hackernews-mcp",
    "version" : "sha256:2e5c5cc89490848e1b5c0dc677f0dd5076dd09984be699e230cad387fb5f582f"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 485,
      "stars" : 1,
      "category" : "search",
      "tags" : [ "search" ],
      "owner" : "AayushBahukhandi",
      "tools" : [ {
        "name" : "get_stories"
      }, {
        "name" : "get_story_info"
      }, {
        "name" : "get_user_info"
      }, {
        "name" : "search_stories"
      } ],
      "source" : "https://github.com/AayushBahukhandi/hackernews-mcp/tree/main",
      "icon" : "https://news.ycombinator.com/y18.svg",
      "prompts" : 0,
      "title" : "Hackernews mcp",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mcp-hackernews.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mcp-hackernews.json",
      "dateAdded" : "2025-09-15T16:12:49Z",
      "upstream" : "https://github.com/AayushBahukhandi/hackernews-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "cf4337f7-5e02-4b7a-a494-32706f7b8ac9",
      "versionId" : "1c9d1470-effe-4c2e-911f-37be01cafd1d"
    }
  }
}, {
  "name" : "com.docker.mcp/mcp-python-refactoring",
  "description" : "Educational Python refactoring assistant that provides guided suggestions for AI assistants.  Features: • Step-by-step refactoring instructions without modifying code • Comprehensive code analysis using professional tools (Rope, Radon, Vulture, Jedi, LibCST, Pyrefly) • Educational approach teaching refactoring patterns through guided practice • Support for both guide-only and apply-changes modes • Identifies long functions, high complexity, dead code, and type issues • Provides precise line numbers and specific refactoring instructions • Compatible with all AI assistants (Claude, GPT, Cursor, Continue, etc.)  Perfect for developers learning refactoring patterns while maintaining full control over code changes. Acts as a refactoring mentor rather than an automated code modifier.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mcp-python-refactoring",
    "version" : "sha256:4cd4303da424f021f03e9fafc46187a08bcab212ead6f1e39867afee1d42cd24"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 568,
      "stars" : 1,
      "githubStars" : 5,
      "category" : "development",
      "tags" : [ "python", "refactoring", "code-analysis", "education", "development", "code-quality", "static-analysis", "mentoring" ],
      "license" : "MIT License",
      "owner" : "slamer59",
      "tools" : [ {
        "name" : "analyze_python_file"
      }, {
        "name" : "analyze_python_package"
      }, {
        "name" : "analyze_security_and_patterns"
      }, {
        "name" : "analyze_test_coverage"
      }, {
        "name" : "find_long_functions"
      }, {
        "name" : "find_package_issues"
      }, {
        "name" : "get_extraction_guidance"
      }, {
        "name" : "get_package_metrics"
      }, {
        "name" : "tdd_refactoring_guidance"
      } ],
      "source" : "https://github.com/slamer59/mcp-python-refactoring/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/2664231?s=200&v=4",
      "prompts" : 0,
      "title" : "Python Refactoring Assistant",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mcp-python-refactoring.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mcp-python-refactoring.json",
      "dateAdded" : "2025-09-04T19:31:40Z",
      "upstream" : "https://github.com/slamer59/mcp-python-refactoring",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "7d3ee0b2-8978-465d-8ce7-07f7a897b05f",
      "versionId" : "4c44451e-b3f4-45c9-9f35-dd905361b700"
    }
  }
}, {
  "name" : "com.docker.mcp/mcp-reddit",
  "description" : "A comprehensive Model Context Protocol (MCP) server for Reddit integration. This server enables AI agents to interact with Reddit programmatically through a standardized interface.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/reddit-mcp",
    "version" : "sha256:2e4c7f263791023bb0de2fb5ecbf11d69f0a011f25fedc5f59151e661d5dee4b",
    "environmentVariables" : [ {
      "name" : "REDDIT_CLIENT_ID",
      "value" : "{mcp-reddit.reddit_client_id}",
      "variables" : {
        "mcp-reddit.reddit_client_id" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "REDDIT_CLIENT_SECRET",
      "value" : "{mcp-reddit.reddit_client_secret}",
      "variables" : {
        "mcp-reddit.reddit_client_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "REDDIT_PASSWORD",
      "value" : "{mcp-reddit.reddit_password}",
      "variables" : {
        "mcp-reddit.reddit_password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "USERNAME",
      "value" : "{mcp-reddit.username}",
      "isRepeated" : false,
      "variables" : {
        "mcp-reddit.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 128,
      "githubStars" : 3,
      "category" : "communication",
      "tags" : [ "communication" ],
      "license" : "MIT License",
      "owner" : "KrishnaRandad2023",
      "tools" : [ {
        "name" : "fetchPosts"
      }, {
        "name" : "getComments"
      }, {
        "name" : "getSubredditInfo"
      }, {
        "name" : "postComment"
      }, {
        "name" : "postToSubreddit"
      }, {
        "name" : "searchPosts"
      } ],
      "source" : "https://github.com/KrishnaRandad2023/mcp-reddit/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/135265106?v=4",
      "prompts" : 0,
      "title" : "Mcp reddit",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mcp-reddit.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mcp-reddit.json",
      "dateAdded" : "2025-09-19T18:59:08Z",
      "upstream" : "https://github.com/KrishnaRandad2023/mcp-reddit",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "9f37f748-c3f6-4c16-94c1-30a1e550a1a4",
      "versionId" : "cdd62d62-5d25-4379-8c11-a0d217ac3547"
    }
  }
}, {
  "name" : "com.docker.mcp/memory",
  "description" : "Knowledge graph-based persistent memory system.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/memory",
    "version" : "sha256:db0c2db07a44b6797eba7a832b1bda142ffc899588aae82c92780cbb2252407f",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "claude-memory:/app/dist"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 77289,
      "stars" : 24,
      "githubStars" : 68780,
      "category" : "ai",
      "tags" : [ "mcp", "ai" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "add_observations"
      }, {
        "name" : "create_entities"
      }, {
        "name" : "create_relations"
      }, {
        "name" : "delete_entities"
      }, {
        "name" : "delete_observations"
      }, {
        "name" : "delete_relations"
      }, {
        "name" : "open_nodes"
      }, {
        "name" : "read_graph"
      }, {
        "name" : "search_nodes"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/memory",
      "icon" : "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/knowledgebase.svg",
      "prompts" : 0,
      "title" : "Memory (Reference)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/memory.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/memory.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "325e572a-f459-480a-bd24-7d39127e0b30",
      "versionId" : "be44dd03-14fe-4e0b-b17a-b107a44fa90b"
    }
  }
}, {
  "name" : "com.docker.mcp/mercado-libre",
  "description" : "Provides access to Mercado Libre E-Commerce API.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.mercadolibre.com",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${MERCADO_LIBRE_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "commerce",
      "tags" : [ "commerce", "marketplace", "latin-america", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=mercadolibre.com&sz=64",
      "prompts" : 0,
      "title" : "Mercado Libre",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mercado-libre.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mercado-libre.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "56910cdd-9ad9-45ee-908f-42b1b82bd9a7",
      "versionId" : "9d06f272-147c-4b3d-bb1e-ec9a987c1bd5"
    }
  }
}, {
  "name" : "com.docker.mcp/mercado-pago",
  "description" : "Provides access to Mercado Pago Marketplace API.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.mercadopago.com",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${MERCADO_PAGO_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "payments",
      "tags" : [ "payments", "finance", "latin-america", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=mercadopago.com&sz=64",
      "prompts" : 0,
      "title" : "Mercado Pago",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/mercado-pago.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/mercado-pago.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d045a882-01c5-43eb-b805-95995adeee0f",
      "versionId" : "bff9604e-2489-41c8-b811-07ca4d934d08"
    }
  }
}, {
  "name" : "com.docker.mcp/metabase",
  "description" : "A comprehensive MCP server for Metabase with 70+ tools.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/metabase",
    "version" : "sha256:02e633ae77a11d2f02e7ae3d52fce9abb871eab9f436010b1fee8c072cb2dd74",
    "environmentVariables" : [ {
      "name" : "METABASE_API_KEY",
      "value" : "{metabase.MetaBaseAPIKey}",
      "variables" : {
        "metabase.MetaBaseAPIKey" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "METABASE_PASSWORD",
      "value" : "{metabase.MetaBasePassword}",
      "variables" : {
        "metabase.MetaBasePassword" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "METABASE_URL",
      "value" : "{metabase.metabaseurl}",
      "isRepeated" : false,
      "variables" : {
        "metabase.metabaseurl" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "METABASE_USERNAME",
      "value" : "{metabase.metabaseusername}",
      "isRepeated" : false,
      "variables" : {
        "metabase.metabaseusername" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 927,
      "stars" : 2,
      "githubStars" : 6,
      "category" : "data-visualization",
      "tags" : [ "data-visualization" ],
      "license" : "MIT License",
      "owner" : "easecloudio",
      "tools" : [ {
        "name" : "add_card_to_dashboard"
      }, {
        "name" : "create_card"
      }, {
        "name" : "create_collection"
      }, {
        "name" : "create_dashboard"
      }, {
        "name" : "create_database_connection"
      }, {
        "name" : "create_permission_group"
      }, {
        "name" : "create_user"
      }, {
        "name" : "delete_card"
      }, {
        "name" : "delete_dashboard"
      }, {
        "name" : "execute_card"
      }, {
        "name" : "execute_query"
      }, {
        "name" : "get_dashboard_cards"
      }, {
        "name" : "get_database_schema"
      }, {
        "name" : "get_database_sync_status"
      }, {
        "name" : "get_database_tables"
      }, {
        "name" : "list_cards"
      }, {
        "name" : "list_collections"
      }, {
        "name" : "list_dashboards"
      }, {
        "name" : "list_databases"
      }, {
        "name" : "list_permission_groups"
      }, {
        "name" : "list_users"
      }, {
        "name" : "remove_card_from_dashboard"
      }, {
        "name" : "search_content"
      }, {
        "name" : "sync_database_schema"
      }, {
        "name" : "test_database_connection"
      }, {
        "name" : "update_card"
      }, {
        "name" : "update_dashboard"
      }, {
        "name" : "update_dashboard_card"
      } ],
      "source" : "https://github.com/easecloudio/mcp-metabase-server/tree/v1.0.2",
      "icon" : "https://avatars.githubusercontent.com/u/10520629?s=48&v=4",
      "prompts" : 0,
      "title" : "Metabase MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/metabase.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/metabase.json",
      "dateAdded" : "2025-07-29T14:05:27Z",
      "upstream" : "https://github.com/easecloudio/mcp-metabase-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "abda6268-6bc4-4aea-92f9-f01ceedbeb9f",
      "versionId" : "10f267bd-ceb2-4019-80d8-11452a61dc92"
    }
  }
}, {
  "name" : "com.docker.mcp/minecraft-wiki",
  "description" : "A MCP Server for browsing the official Minecraft Wiki!.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/minecraft-wiki",
    "version" : "sha256:b191b5c6725ba90954bd86956afd1555d44fd58a1984f9e96a7657e029ad57fd"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1702,
      "githubStars" : 6,
      "category" : "games",
      "tags" : [ "games", "minecraft", "search" ],
      "owner" : "L3-N0X",
      "tools" : [ {
        "name" : "MinecraftWiki_getCategoriesForPage"
      }, {
        "name" : "MinecraftWiki_getPageContent"
      }, {
        "name" : "MinecraftWiki_getPageSection"
      }, {
        "name" : "MinecraftWiki_getPageSummary"
      }, {
        "name" : "MinecraftWiki_getSectionsInPage"
      }, {
        "name" : "MinecraftWiki_listAllCategories"
      }, {
        "name" : "MinecraftWiki_listCategoryMembers"
      }, {
        "name" : "MinecraftWiki_resolveRedirect"
      }, {
        "name" : "MinecraftWiki_searchWiki"
      } ],
      "source" : "https://github.com/L3-N0X/Minecraft-Wiki-MCP/tree/main",
      "icon" : "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/minecraft.svg",
      "prompts" : 0,
      "title" : "Minecraft Wiki",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/minecraft-wiki.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/minecraft-wiki.json",
      "dateAdded" : "2025-06-05T06:09:26Z",
      "upstream" : "https://github.com/L3-N0X/Minecraft-Wiki-MCP",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "34c5d9f7-054a-4e98-99c5-86f460979016",
      "versionId" : "63dfb3f1-9b03-4f7e-92c6-f41bcbf73dac"
    }
  }
}, {
  "name" : "com.docker.mcp/multiversx-mx",
  "description" : "MCP Server for MultiversX.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/multiversx-mx",
    "version" : "sha256:0c62c76ac87aec3d840e1f9ebdeb436dc7c8588064702ec9b84435fb3962285e",
    "environmentVariables" : [ {
      "name" : "MVX_NETWORK",
      "value" : "{multiversx-mx.network}",
      "isRepeated" : false,
      "variables" : {
        "multiversx-mx.network" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "MVX_WALLET",
      "value" : "{multiversx-mx.wallet}",
      "isRepeated" : false,
      "variables" : {
        "multiversx-mx.wallet" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2040,
      "category" : "devops",
      "tags" : [ "multiversx-mx", "devops" ],
      "license" : "Other",
      "owner" : "multiversx",
      "tools" : [ {
        "name" : "create-sft-nft-mesdt-tokens"
      }, {
        "name" : "create-wallet"
      }, {
        "name" : "get-balance-of-address"
      }, {
        "name" : "get-network"
      }, {
        "name" : "get-tokens-of-address"
      }, {
        "name" : "get-wallet-address"
      }, {
        "name" : "issue-fungible-token"
      }, {
        "name" : "issue-meta-esdt-collection"
      }, {
        "name" : "issue-nft-collection"
      }, {
        "name" : "issue-semi-fungible-collection"
      }, {
        "name" : "send-egld"
      }, {
        "name" : "send-egld-to-multiple-receivers"
      }, {
        "name" : "send-fungible-tokens"
      }, {
        "name" : "send-sft-nft-meta-tokens"
      } ],
      "source" : "https://github.com/multiversx/mx-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/114073177?s=200&v=4",
      "prompts" : 0,
      "title" : "MultiversX",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/multiversx-mx.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/multiversx-mx.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/multiversx/mx-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "4a35febb-cde6-4f69-83ad-ab7d824ef110",
      "versionId" : "c98b1ab1-6118-4dc9-bbe3-34aefa32a843"
    }
  }
}, {
  "name" : "com.docker.mcp/nasdaq-data-link",
  "description" : "MCP server to interact with the data feeds provided by the Nasdaq Data Link. Developed by the community and maintained by Stefano Amorelli.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/nasdaq-data-link",
    "version" : "sha256:b90ef17326348108db9116027f3f921da61869943df6fca9573db09f3c269843",
    "environmentVariables" : [ {
      "name" : "NASDAQ_DATA_LINK_API_KEY",
      "value" : "{nasdaq_data_link_api_key}",
      "variables" : {
        "nasdaq_data_link_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1255,
      "stars" : 2,
      "githubStars" : 44,
      "category" : "finance",
      "tags" : [ "nasdaq", "finance", "data", "intelligence" ],
      "license" : "MIT License",
      "owner" : "stefanoamorelli",
      "tools" : [ {
        "name" : "country_code"
      }, {
        "name" : "get_balance_sheet_data"
      }, {
        "name" : "get_cash_flow_data"
      }, {
        "name" : "get_company_reference_data"
      }, {
        "name" : "get_corporate_action_data"
      }, {
        "name" : "get_detailed_financials"
      }, {
        "name" : "get_fees_and_expenses"
      }, {
        "name" : "get_fund_information"
      }, {
        "name" : "get_fund_master_report"
      }, {
        "name" : "get_fundamental_data"
      }, {
        "name" : "get_indicator_value"
      }, {
        "name" : "get_monthly_flows"
      }, {
        "name" : "get_performance_analytics"
      }, {
        "name" : "get_performance_benchmark"
      }, {
        "name" : "get_performance_statistics"
      }, {
        "name" : "get_price_history"
      }, {
        "name" : "get_recent_price_history"
      }, {
        "name" : "get_rtat"
      }, {
        "name" : "get_rtat10"
      }, {
        "name" : "get_share_class_information"
      }, {
        "name" : "get_share_class_master"
      }, {
        "name" : "get_stock_stats"
      }, {
        "name" : "get_trade_summary_data"
      }, {
        "name" : "list_balance_sheet_fields"
      }, {
        "name" : "list_cash_flow_fields"
      }, {
        "name" : "list_corporate_action_fields"
      }, {
        "name" : "list_detailed_financial_fields"
      }, {
        "name" : "list_fundamental_fields"
      }, {
        "name" : "list_reference_data_fields"
      }, {
        "name" : "list_stock_stat_fields"
      }, {
        "name" : "list_worldbank_indicators"
      }, {
        "name" : "search_worldbank_indicators"
      } ],
      "source" : "https://github.com/stefanoamorelli/nasdaq-data-link-mcp/tree/main",
      "icon" : "https://raw.githubusercontent.com/stefanoamorelli/nasdaq-data-link-mcp/refs/heads/main/nasdaq-mcp-server-logo.png",
      "prompts" : 0,
      "title" : "Nasdaq Data Link",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/nasdaq-data-link.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/nasdaq-data-link.json",
      "dateAdded" : "2025-07-01T14:14:18Z",
      "upstream" : "https://github.com/stefanoamorelli/nasdaq-data-link-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "000c965e-ea58-4bcf-b705-266b2f1c4c00",
      "versionId" : "08894bcd-f570-4b5c-a4c2-81cb2882d631"
    }
  }
}, {
  "name" : "com.docker.mcp/needle",
  "description" : "Production-ready RAG service to search and retrieve data from your documents.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.needle.app/mcp",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${NEEDLE_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "ai",
      "tags" : [ "ai", "rag", "knowledge-base", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=needle.app&sz=64",
      "prompts" : 0,
      "title" : "Needle Remote MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/needle.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/needle.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "baa89ce2-6213-4315-aec4-e1f4a04cdf08",
      "versionId" : "94104773-e7b8-4207-b130-0a492e9ab73b"
    }
  }
}, {
  "name" : "com.docker.mcp/needle-mcp",
  "description" : "Production-ready RAG service to search and retrieve data from your documents.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/needle-mcp",
    "version" : "sha256:d3fd314f40c306ad12a78f6e9a1cbad35a8aee902ecaf50020416eccb8078ff4",
    "environmentVariables" : [ {
      "name" : "NEEDLE_API_KEY",
      "value" : "{needle-mcp.api_key}",
      "variables" : {
        "needle-mcp.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 967,
      "stars" : 1,
      "githubStars" : 81,
      "category" : "search",
      "tags" : [ "needle", "search", "productivity", "rag", "semantic-search", "document-management" ],
      "license" : "MIT License",
      "owner" : "needle-ai",
      "tools" : [ {
        "name" : "needle_add_file"
      }, {
        "name" : "needle_create_collection"
      }, {
        "name" : "needle_get_collection_details"
      }, {
        "name" : "needle_get_collection_stats"
      }, {
        "name" : "needle_list_collections"
      }, {
        "name" : "needle_list_files"
      }, {
        "name" : "needle_search"
      } ],
      "source" : "https://github.com/needle-ai/needle-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/194782563?s=200&v=4",
      "prompts" : 0,
      "title" : "Needle",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/needle-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/needle-mcp.json",
      "dateAdded" : "2025-07-11T18:29:38Z",
      "upstream" : "https://github.com/needle-ai/needle-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2fc5b839-c38d-45a5-b29c-8ec4652bb747",
      "versionId" : "9ae6acdf-121b-46ce-9d52-443d1d4d3476"
    }
  }
}, {
  "name" : "com.docker.mcp/neo4j-cloud-aura-api",
  "description" : "Manage Neo4j Aura database instances through the Neo4j Aura API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/neo4j-cloud-aura-api",
    "version" : "sha256:922fea38ae0dc6a29ed4b6606bddd41c254b2b68488efe4393d03338499ede66",
    "environmentVariables" : [ {
      "name" : "NEO4J_AURA_CLIENT_SECRET",
      "value" : "{neo4j-cloud-aura-api.client_secret}",
      "variables" : {
        "neo4j-cloud-aura-api.client_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "NEO4J_AURA_CLIENT_ID",
      "value" : "{neo4j-cloud-aura-api.client_id}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.client_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_TRANSPORT",
      "value" : "{neo4j-cloud-aura-api.transport}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.transport" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_HOST",
      "value" : "{neo4j-cloud-aura-api.server_host}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.server_host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PORT",
      "value" : "{neo4j-cloud-aura-api.server_port}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.server_port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PATH",
      "value" : "{neo4j-cloud-aura-api.server_path}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.server_path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
      "value" : "{neo4j-cloud-aura-api.server_allow_origins}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.server_allow_origins" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
      "value" : "{neo4j-cloud-aura-api.server_allowed_hosts}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cloud-aura-api.server_allowed_hosts" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2314,
      "stars" : 2,
      "githubStars" : 707,
      "category" : "devops",
      "tags" : [ "neo4j-cloud-aura-api", "devops" ],
      "license" : "MIT License",
      "owner" : "neo4j-contrib",
      "tools" : [ {
        "name" : "create_instance"
      }, {
        "name" : "delete_instance"
      }, {
        "name" : "get_instance_by_name"
      }, {
        "name" : "get_instance_details"
      }, {
        "name" : "get_tenant_details"
      }, {
        "name" : "list_instances"
      }, {
        "name" : "list_tenants"
      }, {
        "name" : "pause_instance"
      }, {
        "name" : "resume_instance"
      }, {
        "name" : "update_instance_memory"
      }, {
        "name" : "update_instance_name"
      }, {
        "name" : "update_instance_vector_optimization"
      } ],
      "source" : "https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-cloud-aura-api",
      "icon" : "https://avatars.githubusercontent.com/u/916372?s=200&v=4",
      "prompts" : 0,
      "title" : "Neo4j Cloud Aura Api",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-cloud-aura-api.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-cloud-aura-api.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/neo4j-contrib/mcp-neo4j",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "c4b42f2d-40ca-42d1-b711-224a68868169",
      "versionId" : "9804a507-badb-4fdb-9a4c-cbf5e195409b"
    }
  }
}, {
  "name" : "com.docker.mcp/neo4j-cypher",
  "description" : "Interact with Neo4j using Cypher graph queries.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/neo4j-cypher",
    "version" : "sha256:57a6000c2f0e165662899ba2181486f8d55772fceeee9030563d83b76f5063c1",
    "environmentVariables" : [ {
      "name" : "NEO4J_PASSWORD",
      "value" : "{neo4j-cypher.password}",
      "variables" : {
        "neo4j-cypher.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "NEO4J_URL",
      "value" : "{neo4j-cypher.url}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_USERNAME",
      "value" : "{neo4j-cypher.username}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_DATABASE",
      "value" : "{neo4j-cypher.database}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.database" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_NAMESPACE",
      "value" : "{neo4j-cypher.namespace}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.namespace" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_TRANSPORT",
      "value" : "{neo4j-cypher.transport}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.transport" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_HOST",
      "value" : "{neo4j-cypher.server_host}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.server_host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PORT",
      "value" : "{neo4j-cypher.server_port}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.server_port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PATH",
      "value" : "{neo4j-cypher.server_path}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.server_path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
      "value" : "{neo4j-cypher.server_allow_origins}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.server_allow_origins" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
      "value" : "{neo4j-cypher.server_allowed_hosts}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.server_allowed_hosts" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_READ_TIMEOUT",
      "value" : "{neo4j-cypher.read_timeout}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.read_timeout" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_RESPONSE_TOKEN_LIMIT",
      "value" : "{neo4j-cypher.response_token_limit}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.response_token_limit" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_READ_ONLY",
      "value" : "{neo4j-cypher.read_only}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-cypher.read_only" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 5886,
      "stars" : 2,
      "githubStars" : 707,
      "category" : "devops",
      "tags" : [ "neo4j-cypher", "devops" ],
      "license" : "MIT License",
      "owner" : "neo4j-contrib",
      "tools" : [ {
        "name" : "get_neo4j_schema"
      }, {
        "name" : "read_neo4j_cypher"
      }, {
        "name" : "write_neo4j_cypher"
      } ],
      "source" : "https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-cypher",
      "icon" : "https://avatars.githubusercontent.com/u/916372?s=200&v=4",
      "prompts" : 0,
      "title" : "Neo4j Cypher",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-cypher.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-cypher.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/neo4j-contrib/mcp-neo4j",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "8f6a32a0-2666-405c-8829-9195b065ed5d",
      "versionId" : "f0239170-664d-463d-b84c-03a6616c614d"
    }
  }
}, {
  "name" : "com.docker.mcp/neo4j-data-modeling",
  "description" : "MCP server that assists in creating, validating and visualizing graph data models.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/neo4j-data-modeling",
    "version" : "sha256:18d70dafe9e0ee13f6eaf44ccc5992668ead2f8d908bccb10de5213bf99d5109",
    "environmentVariables" : [ {
      "name" : "NEO4J_TRANSPORT",
      "value" : "{neo4j-data-modeling.transport}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-data-modeling.transport" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_HOST",
      "value" : "{neo4j-data-modeling.server_host}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-data-modeling.server_host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PORT",
      "value" : "{neo4j-data-modeling.server_port}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-data-modeling.server_port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PATH",
      "value" : "{neo4j-data-modeling.server_path}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-data-modeling.server_path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
      "value" : "{neo4j-data-modeling.server_allow_origins}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-data-modeling.server_allow_origins" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
      "value" : "{neo4j-data-modeling.server_allowed_hosts}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-data-modeling.server_allowed_hosts" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 374,
      "githubStars" : 707,
      "category" : "devops",
      "tags" : [ "neo4j-data-modeling", "devops" ],
      "license" : "MIT License",
      "owner" : "neo4j-contrib",
      "tools" : [ {
        "name" : "export_to_arrows_json"
      }, {
        "name" : "get_constraints_cypher_queries"
      }, {
        "name" : "get_example_data_model"
      }, {
        "name" : "get_mermaid_config_str"
      }, {
        "name" : "get_node_cypher_ingest_query"
      }, {
        "name" : "get_relationship_cypher_ingest_query"
      }, {
        "name" : "list_example_data_models"
      }, {
        "name" : "load_from_arrows_json"
      }, {
        "name" : "validate_data_model"
      }, {
        "name" : "validate_node"
      }, {
        "name" : "validate_relationship"
      } ],
      "source" : "https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-data-modeling",
      "icon" : "https://avatars.githubusercontent.com/u/916372?s=200&v=4",
      "prompts" : 0,
      "title" : "Neo4j Data Modeling",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-data-modeling.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-data-modeling.json",
      "dateAdded" : "2025-09-09T15:35:27Z",
      "upstream" : "https://github.com/neo4j-contrib/mcp-neo4j",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0f167f65-44e8-4881-9ac2-858d08270b66",
      "versionId" : "cd9445ac-c699-42c6-b761-cafe3674b6fe"
    }
  }
}, {
  "name" : "com.docker.mcp/neo4j-memory",
  "description" : "Provide persistent memory capabilities through Neo4j graph database integration.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/neo4j-memory",
    "version" : "sha256:7d07cd6143d1713d155e7f5afcf05d0c77b9cc6800c4a508bfeca20bb1e0a433",
    "environmentVariables" : [ {
      "name" : "NEO4J_PASSWORD",
      "value" : "{neo4j-memory.password}",
      "variables" : {
        "neo4j-memory.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "NEO4J_URL",
      "value" : "{neo4j-memory.url}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_USERNAME",
      "value" : "{neo4j-memory.username}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_DATABASE",
      "value" : "{neo4j-memory.database}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.database" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_TRANSPORT",
      "value" : "{neo4j-memory.transport}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.transport" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_HOST",
      "value" : "{neo4j-memory.server_host}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.server_host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PORT",
      "value" : "{neo4j-memory.server_port}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.server_port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_PATH",
      "value" : "{neo4j-memory.server_path}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.server_path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOW_ORIGINS",
      "value" : "{neo4j-memory.server_allow_origins}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.server_allow_origins" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "NEO4J_MCP_SERVER_ALLOWED_HOSTS",
      "value" : "{neo4j-memory.server_allowed_hosts}",
      "isRepeated" : false,
      "variables" : {
        "neo4j-memory.server_allowed_hosts" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 5358,
      "stars" : 8,
      "githubStars" : 707,
      "category" : "devops",
      "tags" : [ "neo4j-memory", "devops" ],
      "license" : "MIT License",
      "owner" : "neo4j-contrib",
      "tools" : [ {
        "name" : "add_observations"
      }, {
        "name" : "create_entities"
      }, {
        "name" : "create_relations"
      }, {
        "name" : "delete_entities"
      }, {
        "name" : "delete_observations"
      }, {
        "name" : "delete_relations"
      }, {
        "name" : "find_memories_by_name"
      }, {
        "name" : "read_graph"
      }, {
        "name" : "search_memories"
      } ],
      "source" : "https://github.com/neo4j-contrib/mcp-neo4j/tree/main/servers/mcp-neo4j-memory",
      "icon" : "https://avatars.githubusercontent.com/u/916372?s=200&v=4",
      "prompts" : 0,
      "title" : "Neo4j Memory",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/neo4j-memory.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/neo4j-memory.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/neo4j-contrib/mcp-neo4j",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "8fc2f767-fe3a-46d1-811a-b606fd10f57e",
      "versionId" : "2a34a47a-807f-47a8-aeea-de395d53173c"
    }
  }
}, {
  "name" : "com.docker.mcp/node-code-sandbox",
  "description" : "A Node.js–based Model Context Protocol server that spins up disposable Docker containers to execute arbitrary JavaScript.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/node-code-sandbox",
    "version" : "sha256:6b7180ab719dab2028dfc689002295ed6d55f7cc6217122d5025d849d5269666"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 37128,
      "stars" : 6,
      "githubStars" : 105,
      "category" : "devops",
      "tags" : [ "node-code-sandbox", "devops" ],
      "owner" : "alfonsograziano",
      "tools" : [ {
        "name" : "get_dependency_types"
      }, {
        "name" : "run_js"
      }, {
        "name" : "run_js_ephemeral"
      }, {
        "name" : "sandbox_exec"
      }, {
        "name" : "sandbox_initialize"
      }, {
        "name" : "sandbox_stop"
      }, {
        "name" : "search_npm_packages"
      } ],
      "source" : "https://github.com/alfonsograziano/node-code-sandbox-mcp/tree/master",
      "icon" : "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/nodedotjs.svg",
      "prompts" : 0,
      "title" : "Node.js Sandbox",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/node-code-sandbox.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/node-code-sandbox.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/alfonsograziano/node-code-sandbox-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "533bf37f-313f-4f75-894f-08c9bd80f4f6",
      "versionId" : "93503eb0-5895-40b5-9c8a-5d08392a6384"
    }
  }
}, {
  "name" : "com.docker.mcp/novita",
  "description" : "Seamless interaction with Novita AI platform resources.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/novita",
    "version" : "sha256:ddc904348d9e0be0fd4572840a41b398e95b23a64d7e1d58c9d6275eb7d67899",
    "environmentVariables" : [ {
      "name" : "NOVITA_API_KEY",
      "value" : ""
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1119,
      "githubStars" : 12,
      "category" : "ai",
      "tags" : [ "novita", "ai" ],
      "license" : "MIT License",
      "owner" : "novitalabs",
      "tools" : [ {
        "name" : "create-container-registry-auth"
      }, {
        "name" : "create-gpu-instance"
      }, {
        "name" : "create-network-storage"
      }, {
        "name" : "create-template"
      }, {
        "name" : "delete-container-registry-auth"
      }, {
        "name" : "delete-gpu-instance"
      }, {
        "name" : "delete-network-storage"
      }, {
        "name" : "delete-template"
      }, {
        "name" : "get-gpu-instance"
      }, {
        "name" : "get-template"
      }, {
        "name" : "list-clusters"
      }, {
        "name" : "list-container-registry-auths"
      }, {
        "name" : "list-gpu-instances"
      }, {
        "name" : "list-network-storage"
      }, {
        "name" : "list-products"
      }, {
        "name" : "list-templates"
      }, {
        "name" : "restart-gpu-instance"
      }, {
        "name" : "start-gpu-instance"
      }, {
        "name" : "stop-gpu-instance"
      }, {
        "name" : "update-network-storage"
      } ],
      "source" : "https://github.com/novitalabs/novita-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/145963681?v=4",
      "prompts" : 0,
      "title" : "Novita",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/novita.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/novita.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/novitalabs/novita-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f87185dd-560e-4a86-a759-2abf92aa1acc",
      "versionId" : "00c8f9aa-8d3e-4d8b-beae-f753e4790d31"
    }
  }
}, {
  "name" : "com.docker.mcp/npm-sentinel",
  "description" : "MCP server that enables intelligent NPM package analysis powered by AI.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/npm-sentinel",
    "version" : "sha256:d8e4bbc7dd5c163fb8abab3f36062a36a02bfd200cae199a9e2392bf4c9198ab"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1750,
      "stars" : 1,
      "githubStars" : 7,
      "category" : "devops",
      "tags" : [ "npm", "npm-package" ],
      "license" : "MIT License",
      "owner" : "Nekzus",
      "tools" : [ {
        "name" : "npmAlternatives"
      }, {
        "name" : "npmChangelogAnalysis"
      }, {
        "name" : "npmCompare"
      }, {
        "name" : "npmDeprecated"
      }, {
        "name" : "npmDeps"
      }, {
        "name" : "npmLatest"
      }, {
        "name" : "npmLicenseCompatibility"
      }, {
        "name" : "npmMaintainers"
      }, {
        "name" : "npmMaintenance"
      }, {
        "name" : "npmPackageReadme"
      }, {
        "name" : "npmQuality"
      }, {
        "name" : "npmRepoStats"
      }, {
        "name" : "npmScore"
      }, {
        "name" : "npmSearch"
      }, {
        "name" : "npmSize"
      }, {
        "name" : "npmTrends"
      }, {
        "name" : "npmTypes"
      }, {
        "name" : "npmVersions"
      }, {
        "name" : "npmVulnerabilities"
      } ],
      "source" : "https://github.com/Nekzus/npm-sentinel-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/85507589?v=4",
      "prompts" : 0,
      "title" : "NPM Sentinel",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/npm-sentinel.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/npm-sentinel.json",
      "dateAdded" : "2025-07-01T14:14:18Z",
      "upstream" : "https://github.com/Nekzus/npm-sentinel-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "fb2578d2-cc09-47f9-880f-f3d7d91c6902",
      "versionId" : "499efc54-76a7-4852-bc2f-8c253d5f95e0"
    }
  }
}, {
  "name" : "com.docker.mcp/obsidian",
  "description" : "MCP server that interacts with Obsidian via the Obsidian rest API community plugin.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/obsidian",
    "version" : "sha256:0eba4c05742ad35faeb91eca40b792454d440d86449c9f1b3cb6c387a510651b",
    "environmentVariables" : [ {
      "name" : "OBSIDIAN_API_KEY",
      "value" : "{obsidian.api_key}",
      "variables" : {
        "obsidian.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "OBSIDIAN_HOST",
      "value" : "host.docker.internal"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 16379,
      "stars" : 15,
      "githubStars" : 2068,
      "category" : "productivity",
      "tags" : [ "obsidian", "productivity" ],
      "license" : "MIT License",
      "owner" : "MarkusPfundstein",
      "tools" : [ {
        "name" : "obsidian_append_content"
      }, {
        "name" : "obsidian_batch_get_file_contents"
      }, {
        "name" : "obsidian_complex_search"
      }, {
        "name" : "obsidian_delete_file"
      }, {
        "name" : "obsidian_get_file_contents"
      }, {
        "name" : "obsidian_get_periodic_note"
      }, {
        "name" : "obsidian_get_recent_changes"
      }, {
        "name" : "obsidian_get_recent_periodic_notes"
      }, {
        "name" : "obsidian_list_files_in_dir"
      }, {
        "name" : "obsidian_list_files_in_vault"
      }, {
        "name" : "obsidian_patch_content"
      }, {
        "name" : "obsidian_simple_search"
      } ],
      "source" : "https://github.com/docker/mcp-obsidian/tree/docker-support",
      "icon" : "https://avatars.githubusercontent.com/u/65011256?s=200&v=4",
      "prompts" : 0,
      "title" : "Obsidian",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/obsidian.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/obsidian.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/MarkusPfundstein/mcp-obsidian",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ad031dc4-03e9-4950-a865-91fc14c2d81d",
      "versionId" : "857ee966-e50f-42b2-9667-78a5f5c038ab"
    }
  }
}, {
  "name" : "com.docker.mcp/okta-mcp-fctr",
  "description" : "Secure Okta identity and access management via Model Context Protocol (MCP). Access Okta users, groups, applications, logs, and policies through AI assistants with enterprise-grade security.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/okta-mcp-fctr",
    "version" : "sha256:a8ebf9a2adfff38ce567c3bfa35dda3d812ff72cb48a9f90853d90ff775ff57e",
    "environmentVariables" : [ {
      "name" : "OKTA_API_TOKEN",
      "value" : "{okta-mcp-fctr.api_token}",
      "variables" : {
        "okta-mcp-fctr.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "OKTA_CLIENT_ORGURL",
      "value" : "{okta-mcp-fctr.client_orgurl}",
      "isRepeated" : false,
      "variables" : {
        "okta-mcp-fctr.client_orgurl" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Okta organization URL (e.g., https://dev-123456.okta.com)"
        }
      }
    }, {
      "name" : "LOG_LEVEL",
      "value" : "{okta-mcp-fctr.log_level}",
      "isRepeated" : false,
      "variables" : {
        "okta-mcp-fctr.log_level" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Logging level for server output"
        }
      }
    }, {
      "name" : "OKTA_CONCURRENT_LIMIT",
      "value" : "{okta-mcp-fctr.concurrent_limit}",
      "isRepeated" : false,
      "variables" : {
        "okta-mcp-fctr.concurrent_limit" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Maximum concurrent requests to Okta API"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 710,
      "githubStars" : 32,
      "category" : "ai",
      "tags" : [ "ai", "okta", "identity", "access-management", "security", "authentication", "audit", "compliance", "enterprise" ],
      "license" : "Apache License 2.0",
      "owner" : "fctr-id",
      "tools" : [ {
        "name" : "get_current_time"
      }, {
        "name" : "get_okta_application"
      }, {
        "name" : "get_okta_event_logs"
      }, {
        "name" : "get_okta_group"
      }, {
        "name" : "get_okta_policy_rule"
      }, {
        "name" : "get_okta_user"
      }, {
        "name" : "list_okta_application_groups"
      }, {
        "name" : "list_okta_application_users"
      }, {
        "name" : "list_okta_applications"
      }, {
        "name" : "list_okta_group_users"
      }, {
        "name" : "list_okta_groups"
      }, {
        "name" : "list_okta_network_zones"
      }, {
        "name" : "list_okta_policy_rules"
      }, {
        "name" : "list_okta_user_applications"
      }, {
        "name" : "list_okta_user_factors"
      }, {
        "name" : "list_okta_user_groups"
      }, {
        "name" : "list_okta_users"
      }, {
        "name" : "parse_relative_time"
      } ],
      "source" : "https://github.com/fctr-id/okta-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/198773578?v=4",
      "prompts" : 0,
      "title" : "Okta MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/okta-mcp-fctr.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/okta-mcp-fctr.json",
      "dateAdded" : "2025-08-01T06:21:29Z",
      "upstream" : "https://github.com/fctr-id/okta-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d660c4b3-8ea9-4909-8049-0b3ef27acdce",
      "versionId" : "a9e1379b-35f8-4225-89e6-218d8520466b"
    }
  }
}, {
  "name" : "com.docker.mcp/omi",
  "description" : "A Model Context Protocol server for Omi interaction and automation. This server provides tools to read, search, and manipulate Memories and Conversations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/omi",
    "version" : "sha256:5e475b2391ac8af79950feba10dbacbb99b40e69790ed36e77e40e662a5e84c7",
    "environmentVariables" : [ {
      "name" : "OMI_API_KEY",
      "value" : "{omi.api_key}",
      "variables" : {
        "omi.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1727,
      "stars" : 1,
      "githubStars" : 6982,
      "category" : "ai",
      "tags" : [ "ai" ],
      "license" : "MIT License",
      "owner" : "BasedHardware",
      "tools" : [ {
        "name" : "create_memory"
      }, {
        "name" : "delete_memory"
      }, {
        "name" : "edit_memory"
      }, {
        "name" : "get_conversation_by_id"
      }, {
        "name" : "get_conversations"
      }, {
        "name" : "get_memories"
      } ],
      "source" : "https://github.com/BasedHardware/omi/tree/main/mcp",
      "icon" : "https://avatars.githubusercontent.com/u/162546372?v=4",
      "prompts" : 0,
      "title" : "omi-mcp",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/omi.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/omi.json",
      "dateAdded" : "2025-07-21T12:46:15Z",
      "upstream" : "https://github.com/BasedHardware/omi",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "9889c472-c78e-4b64-a862-ddb7b897f230",
      "versionId" : "7bca54b0-d514-4584-9935-a0b35932b69e"
    }
  }
}, {
  "name" : "com.docker.mcp/onlyoffice-docspace",
  "description" : "ONLYOFFICE DocSpace is a room-based collaborative platform which allows organizing a clear file structure depending on users' needs or project goals.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/onlyoffice-docspace",
    "version" : "sha256:4efbf4879e6227e61475d3adc68b2fcce9d6b632dc0d2ae6676a830228b67e3a",
    "environmentVariables" : [ {
      "name" : "DOCSPACE_API_KEY",
      "value" : "{onlyoffice-docspace.api_key}",
      "variables" : {
        "onlyoffice-docspace.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DOCSPACE_AUTH_TOKEN",
      "value" : "{onlyoffice-docspace.auth_token}",
      "variables" : {
        "onlyoffice-docspace.auth_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DOCSPACE_USERNAME",
      "value" : "{onlyoffice-docspace.username}",
      "variables" : {
        "onlyoffice-docspace.username" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DOCSPACE_PASSWORD",
      "value" : "{onlyoffice-docspace.password}",
      "variables" : {
        "onlyoffice-docspace.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "DOCSPACE_BASE_URL",
      "value" : "{onlyoffice-docspace.base_url}",
      "isRepeated" : false,
      "variables" : {
        "onlyoffice-docspace.base_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "DOCSPACE_ORIGIN",
      "value" : "{onlyoffice-docspace.origin}",
      "isRepeated" : false,
      "variables" : {
        "onlyoffice-docspace.origin" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "DOCSPACE_USER_AGENT",
      "value" : "{onlyoffice-docspace.user_agent}",
      "isRepeated" : false,
      "variables" : {
        "onlyoffice-docspace.user_agent" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "DOCSPACE_DYNAMIC",
      "value" : "{onlyoffice-docspace.dynamic}",
      "isRepeated" : false,
      "variables" : {
        "onlyoffice-docspace.dynamic" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "DOCSPACE_TOOLSETS",
      "value" : "{onlyoffice-docspace.toolsets}",
      "isRepeated" : false,
      "variables" : {
        "onlyoffice-docspace.toolsets" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 875,
      "githubStars" : 5,
      "category" : "productivity",
      "tags" : [ "onlyoffice", "docspace", "productivity" ],
      "license" : "Apache License 2.0",
      "owner" : "ONLYOFFICE",
      "tools" : [ {
        "name" : "archive_room"
      }, {
        "name" : "copy_batch_items"
      }, {
        "name" : "create_folder"
      }, {
        "name" : "create_room"
      }, {
        "name" : "delete_file"
      }, {
        "name" : "delete_folder"
      }, {
        "name" : "download_file_as_text"
      }, {
        "name" : "get_all_people"
      }, {
        "name" : "get_file_info"
      }, {
        "name" : "get_folder_content"
      }, {
        "name" : "get_folder_info"
      }, {
        "name" : "get_my_folder"
      }, {
        "name" : "get_room_access_levels"
      }, {
        "name" : "get_room_info"
      }, {
        "name" : "get_room_security_info"
      }, {
        "name" : "get_room_types"
      }, {
        "name" : "get_rooms_folder"
      }, {
        "name" : "move_batch_items"
      }, {
        "name" : "rename_folder"
      }, {
        "name" : "set_room_security"
      }, {
        "name" : "update_file"
      }, {
        "name" : "update_room"
      }, {
        "name" : "upload_file"
      } ],
      "source" : "https://github.com/ONLYOFFICE/docspace-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/1426033?v=4",
      "prompts" : 0,
      "title" : "ONLYOFFICE DocSpace",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/onlyoffice-docspace.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/onlyoffice-docspace.json",
      "dateAdded" : "2025-07-19T06:20:02Z",
      "upstream" : "https://github.com/ONLYOFFICE/docspace-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "10d1567e-877e-4d11-85c4-351f0672bcc7",
      "versionId" : "03d302cb-caab-4431-ad6e-13fe24a15a64"
    }
  }
}, {
  "name" : "com.docker.mcp/openapi",
  "description" : "Fetch, validate, and generate code or curl from any OpenAPI or Swagger spec - all from a single URL.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/openapi",
    "version" : "sha256:26234065b6a786e69088b9b22ec4f9130572704664211e76e9b0887c388186e5",
    "environmentVariables" : [ {
      "name" : "MODE",
      "value" : "{openapi.mode}",
      "isRepeated" : false,
      "variables" : {
        "openapi.mode" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 254,
      "githubStars" : 12,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "license" : "MIT License",
      "owner" : "lepoco",
      "tools" : [ {
        "name" : "create_csharp_snippet"
      }, {
        "name" : "generate_curl_command"
      }, {
        "name" : "get_known_responses"
      }, {
        "name" : "get_list_of_operations"
      }, {
        "name" : "validate_document"
      } ],
      "source" : "https://github.com/lepoco/openapi.client/tree/main",
      "icon" : "https://raw.githubusercontent.com/lepoco/openapi.client/refs/heads/main/build/nuget.png",
      "prompts" : 0,
      "title" : "OpenAPI Toolkit for MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openapi.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openapi.json",
      "dateAdded" : "2025-09-15T16:12:49Z",
      "upstream" : "https://github.com/lepoco/openapi.client",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2dbef6bb-34bd-4ef9-8cb8-1a90edef8ae4",
      "versionId" : "c1559b4e-cf06-4567-801b-0dd96a66341d"
    }
  }
}, {
  "name" : "com.docker.mcp/openbnb-airbnb",
  "description" : "MCP Server for searching Airbnb and get listing details.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/openbnb-airbnb",
    "version" : "sha256:352f5716e418f7d94e1bcd5c6846d7940b3250255b78ab1acb7e0adbd8f89331"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2967,
      "stars" : 1,
      "githubStars" : 292,
      "category" : "search",
      "tags" : [ "airbnb", "openbnb" ],
      "license" : "MIT License",
      "owner" : "openbnb-org",
      "tools" : [ {
        "name" : "airbnb_listing_details"
      }, {
        "name" : "airbnb_search"
      } ],
      "source" : "https://github.com/openbnb-org/mcp-server-airbnb/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/202564951?v=4",
      "prompts" : 0,
      "title" : "Airbnb Search",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openbnb-airbnb.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openbnb-airbnb.json",
      "dateAdded" : "2025-07-01T12:14:18Z",
      "upstream" : "https://github.com/openbnb-org/mcp-server-airbnb",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "70e82176-f678-4062-b3c4-026d37a28f72",
      "versionId" : "5acd06b2-5fa9-4920-9ef2-5a7bde7ade6a"
    }
  }
}, {
  "name" : "com.docker.mcp/openmesh",
  "description" : "Discover and connect to a curated marketplace of MCP servers for extending AI agent capabilities.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://api.openmesh.dev/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "infrastructure",
      "tags" : [ "infrastructure", "discovery", "mesh", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "discover_service"
      }, {
        "name" : "call_service"
      }, {
        "name" : "report_experience"
      }, {
        "name" : "get_alternative"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=openmesh.network&sz=64",
      "prompts" : 0,
      "title" : "OpenMesh",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openmesh.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openmesh.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "bd2ea4b2-7eb4-45f0-9a0b-7c4d3eb531ae",
      "versionId" : "fba55c28-ebf5-49bd-ae24-5ba3060c0dd0"
    }
  }
}, {
  "name" : "com.docker.mcp/openweather",
  "description" : "A simple MCP service that provides current weather and 5-day forecast using the free OpenWeatherMap API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/openweather",
    "version" : "sha256:e2f49acbb718e28b6f2f1bb00d8eebcc4dfc73e6788ed2040974496856375d5f",
    "environmentVariables" : [ {
      "name" : "OWM_API_KEY",
      "value" : "{openweather.owm_api_key}",
      "variables" : {
        "openweather.owm_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3907,
      "stars" : 4,
      "githubStars" : 10,
      "category" : "search",
      "tags" : [ "weather-api" ],
      "license" : "MIT License",
      "owner" : "mschneider82",
      "tools" : [ {
        "name" : "weather"
      } ],
      "source" : "https://github.com/mschneider82/mcp-openweather/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/1743227?s=200&v=4",
      "prompts" : 0,
      "title" : "Openweather",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openweather.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openweather.json",
      "dateAdded" : "2025-07-01T12:14:18Z",
      "upstream" : "https://github.com/mschneider82/mcp-openweather",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "56b08ca1-f402-4b26-9d1e-2dfe3b5117bf",
      "versionId" : "71eada30-6839-4b63-9718-3ac8d8f3bc4b"
    }
  }
}, {
  "name" : "com.docker.mcp/openzeppelin-cairo",
  "description" : "Access to OpenZeppelin Cairo Contracts.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.openzeppelin.com/contracts/cairo/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "blockchain",
      "tags" : [ "blockchain", "cairo", "smart-contracts", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "cairo-erc20"
      }, {
        "name" : "cairo-erc721"
      }, {
        "name" : "cairo-erc1155"
      }, {
        "name" : "cairo-account"
      }, {
        "name" : "cairo-multisig"
      }, {
        "name" : "cairo-governor"
      }, {
        "name" : "cairo-vesting"
      }, {
        "name" : "cairo-custom"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64",
      "prompts" : 0,
      "title" : "OpenZeppelin Cairo Contracts",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-cairo.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-cairo.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e2d0b807-8a53-4857-98d5-c50002792962",
      "versionId" : "e4f60008-3d9d-45a7-9c01-6e8c9e943fc9"
    }
  }
}, {
  "name" : "com.docker.mcp/openzeppelin-solidity",
  "description" : "Access to OpenZeppelin Solidity Contracts.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.openzeppelin.com/contracts/solidity/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "blockchain",
      "tags" : [ "blockchain", "solidity", "smart-contracts", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "solidity-erc20"
      }, {
        "name" : "solidity-erc721"
      }, {
        "name" : "solidity-erc1155"
      }, {
        "name" : "solidity-stablecoin"
      }, {
        "name" : "solidity-rwa"
      }, {
        "name" : "solidity-account"
      }, {
        "name" : "solidity-governor"
      }, {
        "name" : "solidity-custom"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64",
      "prompts" : 0,
      "title" : "OpenZeppelin Solidity Contracts",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-solidity.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-solidity.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "068be30c-7337-4bd8-bdf5-f26aefb94653",
      "versionId" : "91bb97b1-0b84-41f4-80eb-5fb2c7bb780b"
    }
  }
}, {
  "name" : "com.docker.mcp/openzeppelin-stellar",
  "description" : "Access to OpenZeppelin Stellar Contracts.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.openzeppelin.com/contracts/stellar/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "blockchain",
      "tags" : [ "blockchain", "stellar", "smart-contracts", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "stellar-fungible"
      }, {
        "name" : "stellar-stablecoin"
      }, {
        "name" : "stellar-non-fungible"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64",
      "prompts" : 0,
      "title" : "OpenZeppelin Stellar Contracts",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-stellar.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-stellar.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "28032a44-031a-4ab1-81ea-71f94ec03d53",
      "versionId" : "7f48b60d-f92a-4dc2-b977-33307b7408cc"
    }
  }
}, {
  "name" : "com.docker.mcp/openzeppelin-stylus",
  "description" : "Access to OpenZeppelin Stylus Contracts.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.openzeppelin.com/contracts/stylus/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "blockchain",
      "tags" : [ "blockchain", "stylus", "smart-contracts", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "stylus-erc20"
      }, {
        "name" : "stylus-erc721"
      }, {
        "name" : "stylus-erc1155"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=openzeppelin.com&sz=64",
      "prompts" : 0,
      "title" : "OpenZeppelin Stylus Contracts",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/openzeppelin-stylus.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/openzeppelin-stylus.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "9ec11225-8441-423a-b5c4-8fa40afdcf37",
      "versionId" : "5b963957-bd9e-4cb7-822b-8799ae63942c"
    }
  }
}, {
  "name" : "com.docker.mcp/opik",
  "description" : "Model Context Protocol (MCP) implementation for Opik enabling seamless IDE integration and unified access to prompts, projects, traces, and metrics.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/opik",
    "version" : "sha256:1ff61d0c6618e9b4add47b12b3b01b8c18d00df49cbf3c95ede58e87ee9886ad",
    "environmentVariables" : [ {
      "name" : "OPIK_API_KEY",
      "value" : "{opik.api_key}",
      "variables" : {
        "opik.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "OPIK_API_BASE_URL",
      "value" : "{opik.api_base_url}",
      "isRepeated" : false,
      "variables" : {
        "opik.api_base_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "OPIK_WORKSPACE_NAME",
      "value" : "{opik.workspace_name}",
      "isRepeated" : false,
      "variables" : {
        "opik.workspace_name" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2157,
      "stars" : 1,
      "githubStars" : 167,
      "category" : "devops",
      "tags" : [ "opik", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "comet-ml",
      "tools" : [ {
        "name" : "add-trace-feedback"
      }, {
        "name" : "create-project"
      }, {
        "name" : "create-prompt"
      }, {
        "name" : "get-prompt-version"
      }, {
        "name" : "get-prompts"
      }, {
        "name" : "get-trace-by-id"
      }, {
        "name" : "get-trace-stats"
      }, {
        "name" : "get-trace-threads"
      }, {
        "name" : "list-projects"
      }, {
        "name" : "list-traces"
      }, {
        "name" : "opik-integration-docs"
      }, {
        "name" : "save-prompt-version"
      }, {
        "name" : "search-traces"
      } ],
      "source" : "https://github.com/comet-ml/opik-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/31487821?s=200&v=4",
      "prompts" : 0,
      "title" : "Opik",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/opik.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/opik.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/comet-ml/opik-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "09b6bd0d-f67d-4e24-9241-3bf5eb5861b1",
      "versionId" : "eae96422-521d-423d-9709-59af446c0da2"
    }
  }
}, {
  "name" : "com.docker.mcp/oracle",
  "description" : "Connect to Oracle databases via MCP, providing secure read-only access with support for schema exploration, query execution, and metadata inspection.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/oracle",
    "version" : "sha256:76d733b869f424eca1715a6566f4a472aee2599308e766179ec10abdea46ad70",
    "environmentVariables" : [ {
      "name" : "ORACLE_PASSWORD",
      "value" : "{oracle.password}",
      "variables" : {
        "oracle.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "ORACLE_CONNECTION_STRING",
      "value" : "{oracle.oracle_connection_string}",
      "isRepeated" : false,
      "variables" : {
        "oracle.oracle_connection_string" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "ORACLE_USER",
      "value" : "{oracle.oracle_user}",
      "isRepeated" : false,
      "variables" : {
        "oracle.oracle_user" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 267,
      "category" : "database",
      "tags" : [ "oracle", "database", "sql", "enterprise" ],
      "license" : "MIT License",
      "owner" : "samscarrow",
      "tools" : [ {
        "name" : "describe_table"
      }, {
        "name" : "execute_query"
      }, {
        "name" : "get_table_constraints"
      }, {
        "name" : "get_table_indexes"
      }, {
        "name" : "list_schemas"
      }, {
        "name" : "list_tables"
      } ],
      "source" : "https://github.com/samscarrow/oracle-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/93792006?v=4",
      "prompts" : 0,
      "title" : "Oracle Database MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/oracle.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/oracle.json",
      "dateAdded" : "2025-09-11T17:03:42Z",
      "upstream" : "https://github.com/samscarrow/oracle-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "202f4a87-b348-4c30-ada2-b1830fee0534",
      "versionId" : "572106a7-9634-4e2d-8a95-4034ed99e84e"
    }
  }
}, {
  "name" : "com.docker.mcp/osp_marketing_tools",
  "description" : "A Model Context Protocol (MCP) server that empowers LLMs to use some of Open Srategy Partners' core writing and product marketing techniques.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/osp_marketing_tools",
    "version" : "sha256:34b72f4cc3d274a9b975bca22adb0f664055a1ca2c74a9417c8149512e772eaa"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3139,
      "stars" : 2,
      "githubStars" : 233,
      "category" : "devops",
      "tags" : [ "osp_marketing_tools", "devops" ],
      "license" : "Creative Commons Attribution Share Alike 4.0 International",
      "owner" : "open-strategy-partners",
      "tools" : [ {
        "name" : "get_editing_codes"
      }, {
        "name" : "get_meta_guide"
      }, {
        "name" : "get_on_page_seo_guide"
      }, {
        "name" : "get_value_map_positioning_guide"
      }, {
        "name" : "get_writing_guide"
      }, {
        "name" : "health_check"
      } ],
      "source" : "https://github.com/open-strategy-partners/osp_marketing_tools/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/47528973?s=200&v=4",
      "prompts" : 0,
      "title" : "OSP Marketing Tools",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/osp_marketing_tools.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/osp_marketing_tools.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/open-strategy-partners/osp_marketing_tools",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e2d9a10d-03bd-402d-8399-f7aa7d618ffd",
      "versionId" : "e601eef0-2049-45f8-90cc-226012d2dca3"
    }
  }
}, {
  "name" : "com.docker.mcp/oxylabs",
  "description" : "A Model Context Protocol (MCP) server that enables AI assistants like Claude to seamlessly access web data through Oxylabs' powerful web scraping technology.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/oxylabs",
    "version" : "sha256:67085d076c5b7c29dd4167754bc4164405f00bfd955529fc8319e1497d24de78",
    "environmentVariables" : [ {
      "name" : "OXYLABS_PASSWORD",
      "value" : "{oxylabs.password}",
      "variables" : {
        "oxylabs.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "OXYLABS_USERNAME",
      "value" : "{oxylabs.username}",
      "isRepeated" : false,
      "variables" : {
        "oxylabs.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2542,
      "stars" : 3,
      "githubStars" : 64,
      "category" : "devops",
      "tags" : [ "oxylabs", "devops" ],
      "license" : "MIT License",
      "owner" : "oxylabs",
      "tools" : [ {
        "name" : "amazon_product_scraper"
      }, {
        "name" : "amazon_search_scraper"
      }, {
        "name" : "google_search_scraper"
      }, {
        "name" : "universal_scraper"
      } ],
      "source" : "https://github.com/oxylabs/oxylabs-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/43960873?s=200&v=4",
      "prompts" : 0,
      "title" : "Oxylabs",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/oxylabs.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/oxylabs.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/oxylabs/oxylabs-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "4d2a3b2b-c089-4f13-814f-b26ce24f5786",
      "versionId" : "09d9c40b-650d-43e7-b392-05f1bffeba79"
    }
  }
}, {
  "name" : "com.docker.mcp/paper-search",
  "description" : "A MCP for searching and downloading academic papers from multiple sources like arXiv, PubMed, bioRxiv, etc.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/paper-search",
    "version" : "sha256:fee339283c68af0470d24dd6e7fb2937bc144a24c2b6574d0da8ea0366285044"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 4622,
      "stars" : 3,
      "githubStars" : 355,
      "category" : "search",
      "tags" : [ "academic", "search" ],
      "license" : "MIT License",
      "owner" : "openags",
      "tools" : [ {
        "name" : "download_arxiv"
      }, {
        "name" : "download_biorxiv"
      }, {
        "name" : "download_crossref"
      }, {
        "name" : "download_iacr"
      }, {
        "name" : "download_medrxiv"
      }, {
        "name" : "download_pubmed"
      }, {
        "name" : "download_semantic"
      }, {
        "name" : "get_crossref_paper_by_doi"
      }, {
        "name" : "read_arxiv_paper"
      }, {
        "name" : "read_biorxiv_paper"
      }, {
        "name" : "read_crossref_paper"
      }, {
        "name" : "read_iacr_paper"
      }, {
        "name" : "read_medrxiv_paper"
      }, {
        "name" : "read_pubmed_paper"
      }, {
        "name" : "read_semantic_paper"
      }, {
        "name" : "search_arxiv"
      }, {
        "name" : "search_biorxiv"
      }, {
        "name" : "search_crossref"
      }, {
        "name" : "search_google_scholar"
      }, {
        "name" : "search_iacr"
      }, {
        "name" : "search_medrxiv"
      }, {
        "name" : "search_pubmed"
      }, {
        "name" : "search_semantic"
      } ],
      "source" : "https://github.com/openags/paper-search-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/197887910?v=4",
      "prompts" : 0,
      "title" : "Paper Search",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/paper-search.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/paper-search.json",
      "dateAdded" : "2025-06-05T05:10:44Z",
      "upstream" : "https://github.com/openags/paper-search-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ecb9003c-4da4-43ce-b711-7ba0a5a1f977",
      "versionId" : "398c309c-af51-417d-8c46-e4563f626353"
    }
  }
}, {
  "name" : "com.docker.mcp/perplexity-ask",
  "description" : "Connector for Perplexity API, to enable real-time, web-wide research.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/perplexity-ask",
    "version" : "sha256:7816f45a6f266ad30a21d96c69749f88dd15552c0d1db0ce38704156a49ee538",
    "environmentVariables" : [ {
      "name" : "PERPLEXITY_API_KEY",
      "value" : "{perplexity-ask.api_key}",
      "variables" : {
        "perplexity-ask.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 22542,
      "stars" : 14,
      "githubStars" : 1603,
      "category" : "devops",
      "tags" : [ "perplexity-ask", "devops" ],
      "license" : "MIT License",
      "owner" : "perplexityai",
      "tools" : [ {
        "name" : "perplexity_ask"
      }, {
        "name" : "perplexity_reason"
      }, {
        "name" : "perplexity_research"
      } ],
      "source" : "https://github.com/ppl-ai/modelcontextprotocol/tree/f0a927c250e04b389ff5c34f6a2a85ad625668e8",
      "icon" : "https://avatars.githubusercontent.com/u/110299016?s=200&v=4",
      "prompts" : 0,
      "title" : "Perplexity",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/perplexity-ask.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/perplexity-ask.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/ppl-ai/modelcontextprotocol",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "f1275481-b9e8-41ba-bb90-4cbd60f5adaa",
      "versionId" : "fba7b479-785f-4b9e-a7a0-9901cb0d4c2d"
    }
  }
}, {
  "name" : "com.docker.mcp/pia",
  "description" : "An MCP server to help make U.S. Government open datasets AI-friendly.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/pia",
    "version" : "sha256:63a2b156d29ad3d6d7724e6ea793fa7799559870f5d8e80d2e791cb0de35d004",
    "environmentVariables" : [ {
      "name" : "PIA_API_KEY",
      "value" : "{pia.api-key}",
      "variables" : {
        "pia.api-key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 441,
      "stars" : 1,
      "githubStars" : 1,
      "category" : "ai",
      "tags" : [ "ai" ],
      "license" : "MIT License",
      "owner" : "Program-Integrity-Alliance",
      "tools" : [ {
        "name" : "pia_search_content"
      }, {
        "name" : "pia_search_content_facets"
      }, {
        "name" : "pia_search_titles"
      }, {
        "name" : "pia_search_titles_facets"
      } ],
      "source" : "https://github.com/Program-Integrity-Alliance/pia-mcp-local/tree/main",
      "icon" : "http://programintegrity.org/wp-content/uploads/2025/08/docker-mcp-pia-icon-512.png",
      "prompts" : 0,
      "title" : "Program Integrity Alliance",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/pia.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/pia.json",
      "dateAdded" : "2025-08-20T06:26:55Z",
      "upstream" : "https://github.com/Program-Integrity-Alliance/pia-mcp-local",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "25a19e1f-28b4-4c43-9089-07cd5d06e635",
      "versionId" : "6f1f102a-989e-47a3-b358-c61d767f4e95"
    }
  }
}, {
  "name" : "com.docker.mcp/pinecone",
  "description" : "Pinecone Assistant MCP server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/pinecone",
    "version" : "sha256:bec1d8853fb679c33f3115a2b0d27f5d6854e17a20cd481ce4d2cb2e8506092d",
    "environmentVariables" : [ {
      "name" : "PINECONE_API_KEY",
      "value" : "{pinecone.api_key}",
      "variables" : {
        "pinecone.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "PINECONE_ASSISTANT_HOST",
      "value" : "{pinecone.assistant_host}",
      "isRepeated" : false,
      "variables" : {
        "pinecone.assistant_host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1637,
      "stars" : 3,
      "githubStars" : 38,
      "category" : "database",
      "tags" : [ "database", "machine-learning" ],
      "license" : "MIT License",
      "owner" : "pinecone-io",
      "tools" : [ {
        "name" : "assistant_context"
      } ],
      "source" : "https://github.com/pinecone-io/assistant-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/54333248?v=4",
      "prompts" : 0,
      "title" : "Pinecone Assistant",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/pinecone.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/pinecone.json",
      "dateAdded" : "2025-06-05T06:44:51Z",
      "upstream" : "https://github.com/pinecone-io/assistant-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "11cf828d-510b-437a-851d-e53f5223e33a",
      "versionId" : "d672561a-dbc2-4ff1-9374-f7e65e2bfcc1"
    }
  }
}, {
  "name" : "com.docker.mcp/playwright",
  "description" : "Playwright MCP server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/playwright",
    "version" : "sha256:3e4bbf0294f8576323e687fcbbd7c16087d81363429f485f450e84b5a2c8cd78"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 119256,
      "stars" : 23,
      "githubStars" : 20274,
      "category" : "devops",
      "tags" : [ "playwright", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "microsoft",
      "tools" : [ {
        "name" : "browser_click"
      }, {
        "name" : "browser_close"
      }, {
        "name" : "browser_console_messages"
      }, {
        "name" : "browser_drag"
      }, {
        "name" : "browser_evaluate"
      }, {
        "name" : "browser_file_upload"
      }, {
        "name" : "browser_fill_form"
      }, {
        "name" : "browser_handle_dialog"
      }, {
        "name" : "browser_hover"
      }, {
        "name" : "browser_install"
      }, {
        "name" : "browser_navigate"
      }, {
        "name" : "browser_navigate_back"
      }, {
        "name" : "browser_network_requests"
      }, {
        "name" : "browser_press_key"
      }, {
        "name" : "browser_resize"
      }, {
        "name" : "browser_select_option"
      }, {
        "name" : "browser_snapshot"
      }, {
        "name" : "browser_tabs"
      }, {
        "name" : "browser_take_screenshot"
      }, {
        "name" : "browser_type"
      }, {
        "name" : "browser_wait_for"
      } ],
      "source" : "https://github.com/microsoft/playwright-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/6154722?v=4",
      "prompts" : 0,
      "title" : "Playwright",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/playwright.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/playwright.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/microsoft/playwright-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d6159049-8588-4065-b6cd-4c715ac03c41",
      "versionId" : "a1f87e48-9866-4811-ba61-fcf55b53df33"
    }
  }
}, {
  "name" : "com.docker.mcp/playwright-mcp-server",
  "description" : "Playwright Model Context Protocol Server - Tool to automate Browsers and APIs in Claude Desktop, Cline, Cursor IDE and More 🔌.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/mcp-playwright",
    "version" : "sha256:5ffcdfc3d929758be1a4f951b7413ff4828a10311e735b24bee3367469959004",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{playwright-mcp-server.data}:{playwright-mcp-server.data}",
      "isRepeated" : false,
      "variables" : {
        "playwright-mcp-server.data" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2038,
      "githubStars" : 4837,
      "category" : "ai",
      "tags" : [ "ai" ],
      "license" : "MIT License",
      "owner" : "executeautomation",
      "tools" : [ {
        "name" : "clear_codegen_session"
      }, {
        "name" : "end_codegen_session"
      }, {
        "name" : "get_codegen_session"
      }, {
        "name" : "playwright_assert_response"
      }, {
        "name" : "playwright_click"
      }, {
        "name" : "playwright_click_and_switch_tab"
      }, {
        "name" : "playwright_close"
      }, {
        "name" : "playwright_console_logs"
      }, {
        "name" : "playwright_custom_user_agent"
      }, {
        "name" : "playwright_delete"
      }, {
        "name" : "playwright_drag"
      }, {
        "name" : "playwright_evaluate"
      }, {
        "name" : "playwright_expect_response"
      }, {
        "name" : "playwright_fill"
      }, {
        "name" : "playwright_get"
      }, {
        "name" : "playwright_get_visible_html"
      }, {
        "name" : "playwright_get_visible_text"
      }, {
        "name" : "playwright_go_back"
      }, {
        "name" : "playwright_go_forward"
      }, {
        "name" : "playwright_hover"
      }, {
        "name" : "playwright_iframe_click"
      }, {
        "name" : "playwright_iframe_fill"
      }, {
        "name" : "playwright_navigate"
      }, {
        "name" : "playwright_patch"
      }, {
        "name" : "playwright_post"
      }, {
        "name" : "playwright_press_key"
      }, {
        "name" : "playwright_put"
      }, {
        "name" : "playwright_save_as_pdf"
      }, {
        "name" : "playwright_screenshot"
      }, {
        "name" : "playwright_select"
      }, {
        "name" : "playwright_upload_file"
      }, {
        "name" : "start_codegen_session"
      } ],
      "source" : "https://github.com/executeautomation/mcp-playwright/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/10337030?v=4",
      "prompts" : 0,
      "title" : "ExecuteAutomation Playwright MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/playwright-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/playwright-mcp-server.json",
      "dateAdded" : "2025-07-21T12:46:15Z",
      "upstream" : "https://github.com/executeautomation/mcp-playwright",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "fcfc4857-7f32-4803-993f-be0e25a56616",
      "versionId" : "daef453e-3139-4dec-b707-cc9cafb9243e"
    }
  }
}, {
  "name" : "com.docker.mcp/pluggedin-mcp-proxy",
  "description" : "A unified MCP proxy that aggregates multiple MCP servers into one interface, enabling seamless tool discovery and management across all your AI interactions. Manage all your MCP servers from a single connection point with RAG capabilities and real-time notifications.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/pluggedin-mcp-proxy",
    "version" : "sha256:2c22cf0ef264bfb71c65f2aaa9b7d90ef9fe8b7632bbc1562b15716f4adca7a8",
    "environmentVariables" : [ {
      "name" : "PLUGGEDIN_API_KEY",
      "value" : "{pluggedin-mcp-proxy.pluggedin_api_key}",
      "variables" : {
        "pluggedin-mcp-proxy.pluggedin_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "PLUGGEDIN_API_BASE_URL",
      "value" : "{pluggedin-mcp-proxy.pluggedin_api_base_url}",
      "isRepeated" : false,
      "variables" : {
        "pluggedin-mcp-proxy.pluggedin_api_base_url" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Base URL for the Plugged.in API (optional, defaults to https://plugged.in for cloud or http://localhost:12005 for self-hosted)"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1564,
      "stars" : 2,
      "githubStars" : 91,
      "category" : "productivity",
      "tags" : [ "productivity", "proxy", "management", "tools", "ai" ],
      "license" : "Apache License 2.0",
      "owner" : "VeriTeknik",
      "tools" : [ {
        "name" : "pluggedin_ask_knowledge_base"
      }, {
        "name" : "pluggedin_delete_notification"
      }, {
        "name" : "pluggedin_discover_tools"
      }, {
        "name" : "pluggedin_list_notifications"
      }, {
        "name" : "pluggedin_mark_notification_done"
      }, {
        "name" : "pluggedin_send_notification"
      } ],
      "source" : "https://github.com/VeriTeknik/pluggedin-mcp-proxy/tree/main",
      "icon" : "https://www.plugged.in/favicon.ico",
      "prompts" : 0,
      "title" : "Plugged.in MCP Proxy",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/pluggedin-mcp-proxy.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/pluggedin-mcp-proxy.json",
      "dateAdded" : "2025-07-01T14:14:18Z",
      "upstream" : "https://github.com/VeriTeknik/pluggedin-mcp-proxy",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "678bf9cb-873e-4a36-aa0f-03872193c1b1",
      "versionId" : "e5be4936-b65b-435b-9674-0d36e985f4d8"
    }
  }
}, {
  "name" : "com.docker.mcp/polar-signals",
  "description" : "MCP server for Polar Signals Cloud continuous profiling platform, enabling AI assistants to analyze CPU performance, memory usage, and identify optimization opportunities in production systems.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://api.polarsignals.com/api/mcp/",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${POLAR_SIGNALS_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "devops",
      "tags" : [ "devops", "profiling", "performance", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=polarsignals.com&sz=64",
      "prompts" : 0,
      "title" : "Polar Signals",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/polar-signals.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/polar-signals.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "46abb786-70b2-4492-b5a7-c1f98fec0c03",
      "versionId" : "a3da55a3-38d6-4d84-ae30-bf8d570f7d92"
    }
  }
}, {
  "name" : "com.docker.mcp/pomodash",
  "description" : "Connect your AI assistant to PomoDash for seamless task and project management.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/pomodash",
    "version" : "sha256:bb9539723f2ab2063fac957ad0eecb3389960052ff8c10b6ac391572af10fd93",
    "environmentVariables" : [ {
      "name" : "POMODASH_API_KEY",
      "value" : "{pomodash.api_key}",
      "variables" : {
        "pomodash.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "POMODASH_API_URL",
      "value" : "https://mcp.pomodash.mindsnapz.de"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 180,
      "githubStars" : 1,
      "category" : "productivity",
      "tags" : [ "tasks", "productivity", "pomodoro", "notes", "projects", "planning" ],
      "license" : "MIT License",
      "owner" : "DannyyTv",
      "tools" : [ {
        "name" : "create_category"
      }, {
        "name" : "create_note"
      }, {
        "name" : "create_note_for_project"
      }, {
        "name" : "create_note_for_task"
      }, {
        "name" : "create_task"
      }, {
        "name" : "create_task_for_project"
      }, {
        "name" : "delete_note"
      }, {
        "name" : "delete_task"
      }, {
        "name" : "list_categories"
      }, {
        "name" : "list_note_references"
      }, {
        "name" : "list_notes"
      }, {
        "name" : "list_tasks"
      }, {
        "name" : "update_note"
      }, {
        "name" : "update_task"
      } ],
      "source" : "https://github.com/dannyytv/pomodash-mcp-server/tree/main",
      "icon" : "https://mindsnapz.de/wp-content/uploads/2025/09/PomoDash-Logo-512-x-512-px.png",
      "prompts" : 0,
      "title" : "PomoDash",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/pomodash.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/pomodash.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "upstream" : "https://github.com/dannyytv/pomodash-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2251e7a1-df13-4576-a233-821ee6ef656e",
      "versionId" : "4b8e11cf-855a-4fe4-a2e1-9c56019aa254"
    }
  }
}, {
  "name" : "com.docker.mcp/postgres",
  "description" : "Connect with read-only access to PostgreSQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/postgres",
    "version" : "sha256:b72c08f19e864b3e8beea8e90d048b9271924e704113345a29683f6d1e95a8f0",
    "environmentVariables" : [ {
      "name" : "POSTGRES_URL",
      "value" : "{postgres.url}",
      "variables" : {
        "postgres.url" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "$POSTGRES_URL"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 130385,
      "stars" : 27,
      "githubStars" : 68780,
      "category" : "database",
      "tags" : [ "postgres", "database" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "query"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/177543?s=200&v=4",
      "prompts" : 0,
      "title" : "PostgreSQL readonly (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/postgres.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/postgres.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d902d952-fcae-437f-8080-8f9ada2f8fdd",
      "versionId" : "1bfcf671-9d8f-47d6-91b9-2c4efb46bdf9"
    }
  }
}, {
  "name" : "com.docker.mcp/postman",
  "description" : "Postman's MCP server connects AI agents, assistants, and chatbots directly to your APIs on Postman. Use natural language to prompt AI to automate work across your Postman collections, environments, workspaces, and more.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/postman",
    "version" : "sha256:c0da82f3b69203a898f2ccce3a3b875255b2e4cff818b073412497b5c4954ea3",
    "environmentVariables" : [ {
      "name" : "POSTMAN_API_KEY",
      "value" : "{postman.postman-api-key}",
      "variables" : {
        "postman.postman-api-key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1053,
      "githubStars" : 43,
      "category" : "devops",
      "tags" : [ "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "postmanlabs",
      "tools" : [ {
        "name" : "createCollection"
      }, {
        "name" : "createCollectionRequest"
      }, {
        "name" : "createCollectionResponse"
      }, {
        "name" : "createEnvironment"
      }, {
        "name" : "createMock"
      }, {
        "name" : "createSpec"
      }, {
        "name" : "createSpecFile"
      }, {
        "name" : "createWorkspace"
      }, {
        "name" : "duplicateCollection"
      }, {
        "name" : "generateCollection"
      }, {
        "name" : "generateSpecFromCollection"
      }, {
        "name" : "getAllSpecs"
      }, {
        "name" : "getAuthenticatedUser"
      }, {
        "name" : "getCollection"
      }, {
        "name" : "getCollections"
      }, {
        "name" : "getEnvironment"
      }, {
        "name" : "getEnvironments"
      }, {
        "name" : "getGeneratedCollectionSpecs"
      }, {
        "name" : "getMock"
      }, {
        "name" : "getMocks"
      }, {
        "name" : "getSpec"
      }, {
        "name" : "getSpecCollections"
      }, {
        "name" : "getSpecDefinition"
      }, {
        "name" : "getSpecFile"
      }, {
        "name" : "getSpecFiles"
      }, {
        "name" : "getStatusOfAnAsyncApiTask"
      }, {
        "name" : "getTaggedEntities"
      }, {
        "name" : "getWorkspace"
      }, {
        "name" : "getWorkspaces"
      }, {
        "name" : "publishMock"
      }, {
        "name" : "putCollection"
      }, {
        "name" : "putEnvironment"
      }, {
        "name" : "syncCollectionWithSpec"
      }, {
        "name" : "syncSpecWithCollection"
      }, {
        "name" : "updateMock"
      }, {
        "name" : "updateSpecFile"
      }, {
        "name" : "updateSpecProperties"
      }, {
        "name" : "updateWorkspace"
      } ],
      "source" : "https://github.com/postmanlabs/postman-mcp-server/tree/main",
      "icon" : "https://voyager.postman.com/logo/postman-logo-icon-orange.svg",
      "prompts" : 0,
      "title" : "Postman MCP server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/postman.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/postman.json",
      "dateAdded" : "2025-09-11T17:03:42Z",
      "upstream" : "https://github.com/postmanlabs/postman-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "9e31bd6c-356c-468a-8a6d-4011ea72c575",
      "versionId" : "7c361f8d-249f-4662-8c27-25a5bcab5555"
    }
  }
}, {
  "name" : "com.docker.mcp/pref-editor",
  "description" : "Pref Editor is a tool for viewing and editing Android app preferences during development.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/pref-editor",
    "version" : "sha256:8b515464425127b8272d253d0b77a1835f18c18df26673d53ce0e7527cf7fd66"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1023,
      "githubStars" : 2,
      "category" : "devops",
      "tags" : [ "android preferences", "android development", "preferences-datastore", "shared-preferences" ],
      "license" : "Apache License 2.0",
      "owner" : "charlesmuchene",
      "tools" : [ {
        "name" : "add_preference"
      }, {
        "name" : "change_preference"
      }, {
        "name" : "delete_preference"
      }, {
        "name" : "devices"
      }, {
        "name" : "list_apps"
      }, {
        "name" : "list_files"
      }, {
        "name" : "read_preferences"
      } ],
      "source" : "https://github.com/charlesmuchene/pref-editor-mcp-server/tree/main",
      "icon" : "https://raw.githubusercontent.com/charlesmuchene/pref-editor-mcp-server/refs/heads/main/logo.png",
      "prompts" : 0,
      "title" : "Pref Editor",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/pref-editor.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/pref-editor.json",
      "dateAdded" : "2025-07-01T14:14:18Z",
      "upstream" : "https://github.com/charlesmuchene/pref-editor-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "334ca1cd-c2da-41e5-8180-2b418099181a",
      "versionId" : "c60d0161-d422-48d9-b24f-3acac35d855a"
    }
  }
}, {
  "name" : "com.docker.mcp/quantconnect",
  "description" : "The QuantConnect MCP Server is a bridge for AIs (such as Claude and OpenAI o3 Pro) to interact with our cloud platform. When equipped with our MCP, the AI can perform tasks on your behalf through our API such as updating projects, writing strategies, backtesting, and deploying strategies to production live-trading.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/quantconnect",
    "version" : "sha256:39b2c063f71fb391d90ed103afc4fc8c492eeb662250e22bdcd29c960d82accd",
    "environmentVariables" : [ {
      "name" : "QUANTCONNECT_USER_ID",
      "value" : "{quantconnect.quantconnectuserid}",
      "isRepeated" : false,
      "variables" : {
        "quantconnect.quantconnectuserid" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "QUANTCONNECT_API_TOKEN",
      "value" : "{quantconnect.quantconnectapitoken}",
      "isRepeated" : false,
      "variables" : {
        "quantconnect.quantconnectapitoken" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "AGENT_NAME",
      "value" : "MCP Server"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 119,
      "stars" : 1,
      "githubStars" : 37,
      "category" : "finance",
      "tags" : [ "finance" ],
      "license" : "Apache License 2.0",
      "owner" : "QuantConnect",
      "tools" : [ {
        "name" : "abort_optimization"
      }, {
        "name" : "authorize_connection"
      }, {
        "name" : "broadcast_live_command"
      }, {
        "name" : "check_initialization_errors"
      }, {
        "name" : "check_syntax"
      }, {
        "name" : "complete_code"
      }, {
        "name" : "create_backtest"
      }, {
        "name" : "create_compile"
      }, {
        "name" : "create_file"
      }, {
        "name" : "create_live_algorithm"
      }, {
        "name" : "create_live_command"
      }, {
        "name" : "create_optimization"
      }, {
        "name" : "create_project"
      }, {
        "name" : "create_project_collaborator"
      }, {
        "name" : "delete_backtest"
      }, {
        "name" : "delete_file"
      }, {
        "name" : "delete_object"
      }, {
        "name" : "delete_optimization"
      }, {
        "name" : "delete_project"
      }, {
        "name" : "delete_project_collaborator"
      }, {
        "name" : "enhance_error_message"
      }, {
        "name" : "estimate_optimization_time"
      }, {
        "name" : "liquidate_live_algorithm"
      }, {
        "name" : "list_backtests"
      }, {
        "name" : "list_live_algorithms"
      }, {
        "name" : "list_object_store_files"
      }, {
        "name" : "list_optimizations"
      }, {
        "name" : "list_projects"
      }, {
        "name" : "lock_project_with_collaborators"
      }, {
        "name" : "patch_file"
      }, {
        "name" : "read_account"
      }, {
        "name" : "read_backtest"
      }, {
        "name" : "read_backtest_chart"
      }, {
        "name" : "read_backtest_insights"
      }, {
        "name" : "read_backtest_orders"
      }, {
        "name" : "read_compile"
      }, {
        "name" : "read_file"
      }, {
        "name" : "read_latest_mcp_server_version"
      }, {
        "name" : "read_lean_versions"
      }, {
        "name" : "read_live_algorithm"
      }, {
        "name" : "read_live_chart"
      }, {
        "name" : "read_live_insights"
      }, {
        "name" : "read_live_logs"
      }, {
        "name" : "read_live_orders"
      }, {
        "name" : "read_live_portfolio"
      }, {
        "name" : "read_mcp_server_version"
      }, {
        "name" : "read_object_properties"
      }, {
        "name" : "read_object_store_file_download_url"
      }, {
        "name" : "read_object_store_file_job_id"
      }, {
        "name" : "read_optimization"
      }, {
        "name" : "read_project"
      }, {
        "name" : "read_project_collaborators"
      }, {
        "name" : "read_project_nodes"
      }, {
        "name" : "search_quantconnect"
      }, {
        "name" : "stop_live_algorithm"
      }, {
        "name" : "update_backtest"
      }, {
        "name" : "update_code_to_pep8"
      }, {
        "name" : "update_file_contents"
      }, {
        "name" : "update_file_name"
      }, {
        "name" : "update_optimization"
      }, {
        "name" : "update_project"
      }, {
        "name" : "update_project_collaborator"
      }, {
        "name" : "update_project_nodes"
      }, {
        "name" : "upload_object"
      } ],
      "source" : "https://github.com/QuantConnect/mcp-server/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/3912814?v=4",
      "prompts" : 0,
      "title" : "QuantConnect MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/quantconnect.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/quantconnect.json",
      "dateAdded" : "2025-09-17T06:19:29Z",
      "upstream" : "https://github.com/QuantConnect/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2195fafc-e4ff-4120-b101-d5f298414302",
      "versionId" : "d1ec01aa-19ce-442f-872b-68f67556f028"
    }
  }
}, {
  "name" : "com.docker.mcp/ramparts",
  "description" : "A comprehensive security scanner for MCP servers with YARA rules and static analysis capabilities.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/ramparts",
    "version" : "sha256:1ddf4303800edb4c521a5275ba8de8054ac895677624dd20aed98480db00c494",
    "environmentVariables" : [ {
      "name" : "RUST_LOG",
      "value" : "info"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 541,
      "githubStars" : 67,
      "category" : "security",
      "tags" : [ "security", "vulnerability-scanning", "mcp-server-analysis", "yara-rules" ],
      "license" : "Apache License 2.0",
      "owner" : "getjavelin",
      "tools" : [ {
        "name" : "scan"
      }, {
        "name" : "scan-config"
      } ],
      "source" : "https://github.com/getjavelin/ramparts/tree/main",
      "icon" : "https://raw.githubusercontent.com/getjavelin/ramparts/main/assets/ramparts.png",
      "prompts" : 0,
      "title" : "Ramparts MCP Security Scanner",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/ramparts.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/ramparts.json",
      "dateAdded" : "2025-08-20T06:26:55Z",
      "upstream" : "https://github.com/getjavelin/ramparts",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "76a4f629-185d-45d3-bdfc-db52e1fbfc04",
      "versionId" : "bf288023-6631-4988-aa36-8dc373a97550"
    }
  }
}, {
  "name" : "com.docker.mcp/razorpay",
  "description" : "Razorpay's Official MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/razorpay",
    "version" : "sha256:a6a2f741f9591b0f837f3e2dd6a0ed5a15c3114e73438f33afbd4b17112b03aa",
    "environmentVariables" : [ {
      "name" : "RAZORPAY_KEY_SECRET",
      "value" : "{razorpay.key_secret}",
      "variables" : {
        "razorpay.key_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "RAZORPAY_KEY_ID",
      "value" : "{razorpay.key_id}",
      "isRepeated" : false,
      "variables" : {
        "razorpay.key_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2137,
      "stars" : 1,
      "githubStars" : 205,
      "category" : "devops",
      "tags" : [ "razorpay", "devops" ],
      "license" : "MIT License",
      "owner" : "razorpay",
      "tools" : [ {
        "name" : "capture_payment"
      }, {
        "name" : "close_qr_code"
      }, {
        "name" : "create_instant_settlement"
      }, {
        "name" : "create_order"
      }, {
        "name" : "create_payment_link"
      }, {
        "name" : "create_qr_code"
      }, {
        "name" : "create_refund"
      }, {
        "name" : "fetch_all_instant_settlements"
      }, {
        "name" : "fetch_all_orders"
      }, {
        "name" : "fetch_all_payment_links"
      }, {
        "name" : "fetch_all_payments"
      }, {
        "name" : "fetch_all_payouts"
      }, {
        "name" : "fetch_all_qr_codes"
      }, {
        "name" : "fetch_all_refunds"
      }, {
        "name" : "fetch_all_settlements"
      }, {
        "name" : "fetch_instant_settlement_with_id"
      }, {
        "name" : "fetch_multiple_refunds_for_payment"
      }, {
        "name" : "fetch_order"
      }, {
        "name" : "fetch_order_payments"
      }, {
        "name" : "fetch_payment"
      }, {
        "name" : "fetch_payment_card_details"
      }, {
        "name" : "fetch_payment_link"
      }, {
        "name" : "fetch_payments_for_qr_code"
      }, {
        "name" : "fetch_payout_with_id"
      }, {
        "name" : "fetch_qr_code"
      }, {
        "name" : "fetch_qr_codes_by_customer_id"
      }, {
        "name" : "fetch_qr_codes_by_payment_id"
      }, {
        "name" : "fetch_refund"
      }, {
        "name" : "fetch_settlement_recon_details"
      }, {
        "name" : "fetch_settlement_with_id"
      }, {
        "name" : "fetch_specific_refund_for_payment"
      }, {
        "name" : "fetch_tokens"
      }, {
        "name" : "initiate_payment"
      }, {
        "name" : "payment_link_notify"
      }, {
        "name" : "payment_link_upi_create"
      }, {
        "name" : "resend_otp"
      }, {
        "name" : "submit_otp"
      }, {
        "name" : "update_order"
      }, {
        "name" : "update_payment"
      }, {
        "name" : "update_payment_link"
      }, {
        "name" : "update_refund"
      } ],
      "source" : "https://github.com/razorpay/razorpay-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/7713209?v=4",
      "prompts" : 0,
      "title" : "Razorpay",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/razorpay.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/razorpay.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/razorpay/razorpay-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "6177bd75-acd8-4882-a28e-5df498896a09",
      "versionId" : "bdc20c2e-32e0-4eb2-8f47-666ec3fa0fa3"
    }
  }
}, {
  "name" : "com.docker.mcp/redis",
  "description" : "Access to Redis database operations.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/redis",
    "version" : "sha256:97c986bad558e5d8c8a721406ac11f20ced5bf6c974d1b8dc371bd7682ebfa8d",
    "environmentVariables" : [ {
      "name" : "REDIS_PWD",
      "value" : "{redis.password}",
      "variables" : {
        "redis.password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "REDIS_HOST",
      "value" : "{redis.host}",
      "isRepeated" : false,
      "variables" : {
        "redis.host" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_PORT",
      "value" : "{redis.port}",
      "isRepeated" : false,
      "variables" : {
        "redis.port" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_USERNAME",
      "value" : "{redis.username}",
      "isRepeated" : false,
      "variables" : {
        "redis.username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_SSL",
      "value" : "{redis.ssl}",
      "isRepeated" : false,
      "variables" : {
        "redis.ssl" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_CA_PATH",
      "value" : "{redis.ca_path}",
      "isRepeated" : false,
      "variables" : {
        "redis.ca_path" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_SSL_KEYFILE",
      "value" : "{redis.ssl_keyfile}",
      "isRepeated" : false,
      "variables" : {
        "redis.ssl_keyfile" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_SSL_CERTFILE",
      "value" : "{redis.ssl_certfile}",
      "isRepeated" : false,
      "variables" : {
        "redis.ssl_certfile" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_CERT_REQS",
      "value" : "{redis.cert_reqs}",
      "isRepeated" : false,
      "variables" : {
        "redis.cert_reqs" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_CA_CERTS",
      "value" : "{redis.ca_certs}",
      "isRepeated" : false,
      "variables" : {
        "redis.ca_certs" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "REDIS_CLUSTER_MODE",
      "value" : "{redis.cluster_mode}",
      "isRepeated" : false,
      "variables" : {
        "redis.cluster_mode" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 13508,
      "stars" : 11,
      "githubStars" : 252,
      "category" : "database",
      "tags" : [ "redis", "database" ],
      "license" : "MIT License",
      "owner" : "redis",
      "tools" : [ {
        "name" : "client_list"
      }, {
        "name" : "create_vector_index_hash"
      }, {
        "name" : "dbsize"
      }, {
        "name" : "delete"
      }, {
        "name" : "expire"
      }, {
        "name" : "get"
      }, {
        "name" : "get_index_info"
      }, {
        "name" : "get_indexed_keys_number"
      }, {
        "name" : "get_indexes"
      }, {
        "name" : "get_vector_from_hash"
      }, {
        "name" : "hdel"
      }, {
        "name" : "hexists"
      }, {
        "name" : "hget"
      }, {
        "name" : "hgetall"
      }, {
        "name" : "hset"
      }, {
        "name" : "info"
      }, {
        "name" : "json_del"
      }, {
        "name" : "json_get"
      }, {
        "name" : "json_set"
      }, {
        "name" : "llen"
      }, {
        "name" : "lpop"
      }, {
        "name" : "lpush"
      }, {
        "name" : "lrange"
      }, {
        "name" : "publish"
      }, {
        "name" : "rename"
      }, {
        "name" : "rpop"
      }, {
        "name" : "rpush"
      }, {
        "name" : "sadd"
      }, {
        "name" : "scan_all_keys"
      }, {
        "name" : "scan_keys"
      }, {
        "name" : "set"
      }, {
        "name" : "set_vector_in_hash"
      }, {
        "name" : "smembers"
      }, {
        "name" : "srem"
      }, {
        "name" : "subscribe"
      }, {
        "name" : "type"
      }, {
        "name" : "unsubscribe"
      }, {
        "name" : "vector_search_hash"
      }, {
        "name" : "xadd"
      }, {
        "name" : "xdel"
      }, {
        "name" : "xrange"
      }, {
        "name" : "zadd"
      }, {
        "name" : "zrange"
      }, {
        "name" : "zrem"
      } ],
      "source" : "https://github.com/redis/mcp-redis/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/1529926?v=4",
      "prompts" : 0,
      "title" : "Redis",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/redis.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/redis.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/redis/mcp-redis",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2570a6f8-5b7b-4bda-aa08-ba73328676e5",
      "versionId" : "39df4f0d-1246-4661-8219-14da256f4f3e"
    }
  }
}, {
  "name" : "com.docker.mcp/redis-cloud",
  "description" : "MCP Server for Redis Cloud's API, allowing you to manage your Redis Cloud resources using natural language.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/redis-cloud",
    "version" : "sha256:ebea14d1170f514da2f74d026bd230f727bf93b08a19e4428cdd3a0e5f799fc6",
    "environmentVariables" : [ {
      "name" : "SECRET_KEY",
      "value" : "{redis-cloud.secret_key}",
      "variables" : {
        "redis-cloud.secret_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "API_KEY",
      "value" : "{redis-cloud.api_key}",
      "isRepeated" : false,
      "variables" : {
        "redis-cloud.api_key" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2276,
      "stars" : 1,
      "githubStars" : 35,
      "category" : "database",
      "tags" : [ "redis-cloud", "database" ],
      "license" : "MIT License",
      "owner" : "redis",
      "tools" : [ {
        "name" : "create-essential-database"
      }, {
        "name" : "create-essential-subscription"
      }, {
        "name" : "create-pro-database"
      }, {
        "name" : "create-pro-subscription"
      }, {
        "name" : "delete-essential-subscription"
      }, {
        "name" : "get-current-account"
      }, {
        "name" : "get-current-payment-methods"
      }, {
        "name" : "get-database-modules"
      }, {
        "name" : "get-essential-databases"
      }, {
        "name" : "get-essential-subscription-by-id"
      }, {
        "name" : "get-essential-subscriptions"
      }, {
        "name" : "get-essentials-plans"
      }, {
        "name" : "get-pro-databases"
      }, {
        "name" : "get-pro-plans-regions"
      }, {
        "name" : "get-pro-subscription"
      }, {
        "name" : "get-pro-subscriptions"
      }, {
        "name" : "get-task-by-id"
      }, {
        "name" : "get-tasks"
      } ],
      "source" : "https://github.com/redis/mcp-redis-cloud/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/1529926?s=200&v=4",
      "prompts" : 0,
      "title" : "Redis Cloud",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/redis-cloud.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/redis-cloud.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/redis/mcp-redis-cloud",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "31d3a531-368f-4d75-8571-753d943118b6",
      "versionId" : "633f3a76-b10b-4d7f-964f-d3c1e5196caf"
    }
  }
}, {
  "name" : "com.docker.mcp/ref",
  "description" : "Ref powerful search tool connets your coding tools with documentation context. It includes an up-to-date index of public documentation and it can ingest your private documentation (eg. GitHub repos, PDFs) as well.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/ref-tools-mcp",
    "version" : "sha256:0f53745eeca334de60b309745aba581caf7630d53310cb8d4394b00643c5bbaf",
    "environmentVariables" : [ {
      "name" : "REF_API_KEY",
      "value" : "{ref.REF_API_KEY}",
      "variables" : {
        "ref.REF_API_KEY" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1573,
      "stars" : 2,
      "githubStars" : 593,
      "category" : "devops",
      "tags" : [ "devops", "documentation" ],
      "license" : "MIT License",
      "owner" : "ref-tools",
      "tools" : [ {
        "name" : "ref_read_url"
      }, {
        "name" : "ref_search_documentation"
      } ],
      "source" : "https://github.com/ref-tools/ref-tools-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/210568548?v=4",
      "prompts" : 0,
      "title" : "Ref - up-to-date docs",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/ref.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/ref.json",
      "dateAdded" : "2025-09-12T18:02:36Z",
      "upstream" : "https://github.com/ref-tools/ref-tools-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "fd37deb4-c2e4-44b3-88cb-60d2d310177e",
      "versionId" : "1f4f4820-e196-46b4-b181-93e2b44cd583"
    }
  }
}, {
  "name" : "com.docker.mcp/remote-mcp",
  "description" : "Tools for finding remote MCP servers.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.remote-mcp.com"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "tools",
      "tags" : [ "tools", "mcp", "directory", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "ListRemoteMCPServers"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=remote-mcp.com&sz=64",
      "prompts" : 0,
      "title" : "Remote MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/remote-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/remote-mcp.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "6f2318b4-b8f5-4131-bc8d-f9bed0c5e3a7",
      "versionId" : "16710971-30e2-424d-be6c-5c8c5ea3db81"
    }
  }
}, {
  "name" : "com.docker.mcp/render",
  "description" : "Interact with your Render resources via LLMs.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/render",
    "version" : "sha256:e5500a609618576dd8b09cda71587987a4404438e0220a0e50b86b69845b8043",
    "environmentVariables" : [ {
      "name" : "RENDER_API_KEY",
      "value" : "{render.api_key}",
      "variables" : {
        "render.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2047,
      "stars" : 1,
      "githubStars" : 49,
      "category" : "devops",
      "tags" : [ "render", "devops" ],
      "license" : "Apache License 2.0",
      "owner" : "render-oss",
      "tools" : [ {
        "name" : "create_key_value"
      }, {
        "name" : "create_postgres"
      }, {
        "name" : "create_static_site"
      }, {
        "name" : "create_web_service"
      }, {
        "name" : "get_deploy"
      }, {
        "name" : "get_key_value"
      }, {
        "name" : "get_metrics"
      }, {
        "name" : "get_postgres"
      }, {
        "name" : "get_selected_workspace"
      }, {
        "name" : "get_service"
      }, {
        "name" : "list_deploys"
      }, {
        "name" : "list_key_value"
      }, {
        "name" : "list_log_label_values"
      }, {
        "name" : "list_logs"
      }, {
        "name" : "list_postgres_instances"
      }, {
        "name" : "list_services"
      }, {
        "name" : "list_workspaces"
      }, {
        "name" : "query_render_postgres"
      }, {
        "name" : "select_workspace"
      }, {
        "name" : "update_environment_variables"
      }, {
        "name" : "update_static_site"
      }, {
        "name" : "update_web_service"
      } ],
      "source" : "https://github.com/render-oss/render-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/114033652?v=4",
      "prompts" : 0,
      "title" : "Render",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/render.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/render.json",
      "dateAdded" : "2025-05-23T20:08:35Z",
      "upstream" : "https://github.com/render-oss/render-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "3d25793d-d878-43d5-b2c7-a125adc255b1",
      "versionId" : "ffa4aa1c-4588-46ce-9f47-2f24864e8715"
    }
  }
}, {
  "name" : "com.docker.mcp/resend",
  "description" : "Send emails directly from Cursor with this email sending MCP server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/resend",
    "version" : "sha256:2a786579214e118992c62875fd81488fee01918b10b06b447beb1acd5824e8ed",
    "environmentVariables" : [ {
      "name" : "RESEND_API_KEY",
      "value" : "{resend.api_key}",
      "variables" : {
        "resend.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "REPLY_TO_EMAIL_ADDRESSES",
      "value" : "{resend.reply_to}",
      "isRepeated" : false,
      "variables" : {
        "resend.reply_to" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "comma separated list of reply to email addresses"
        }
      }
    }, {
      "name" : "SENDER_EMAIL_ADDRESS",
      "value" : "{resend.sender}",
      "isRepeated" : false,
      "variables" : {
        "resend.sender" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "sender email address"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3154,
      "stars" : 5,
      "githubStars" : 401,
      "category" : "communication",
      "tags" : [ "resend", "email" ],
      "owner" : "resend",
      "tools" : [ {
        "name" : "send-email"
      } ],
      "source" : "https://github.com/slimslenderslacks/mcp-send-email/tree/slim/docker",
      "icon" : "https://avatars.githubusercontent.com/u/109384852?s=200&v=4",
      "prompts" : 0,
      "title" : "Send emails",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/resend.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/resend.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/resend/mcp-send-email",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "44a73d56-da3c-43aa-b5e6-2fc1d1b651b5",
      "versionId" : "e1fe82cf-bb7d-4dda-bbc2-f71bff446a44"
    }
  }
}, {
  "name" : "com.docker.mcp/risken",
  "description" : "RISKEN's official MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/risken",
    "version" : "sha256:2df37e7ad5ca173c269f4cad66cd80e23b62f9c4ea59147b71a4ac5a4b05da54",
    "environmentVariables" : [ {
      "name" : "RISKEN_ACCESS_TOKEN",
      "value" : "{risken.access_key}",
      "variables" : {
        "risken.access_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "RISKEN_URL",
      "value" : "{risken.url}",
      "isRepeated" : false,
      "variables" : {
        "risken.url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "stdio"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1862,
      "githubStars" : 6,
      "category" : "devops",
      "tags" : [ "risken", "devops" ],
      "license" : "MIT License",
      "owner" : "ca-risken",
      "tools" : [ {
        "name" : "archive_finding"
      }, {
        "name" : "get_project"
      }, {
        "name" : "search_alert"
      }, {
        "name" : "search_finding"
      } ],
      "source" : "https://github.com/ca-risken/risken-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/88366693?s=200&v=4",
      "prompts" : 0,
      "title" : "RISKEN",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/risken.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/risken.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/ca-risken/risken-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "59828cc9-5cca-4725-91d7-2cffaef7f1ea",
      "versionId" : "9d0715d9-3415-40a6-a949-9791bf876498"
    }
  }
}, {
  "name" : "com.docker.mcp/root",
  "description" : "MCP server that provides container image vulnerability scanning and remediation capabilities through Root.io.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/root",
    "version" : "sha256:f2627402e2ebc19228ac1136b17cffb476ec9d75a372eb8419cbfb5738a32ac8",
    "environmentVariables" : [ {
      "name" : "API_ACCESS_TOKEN",
      "value" : "{root.api_access_token}",
      "variables" : {
        "root.api_access_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 711,
      "stars" : 5,
      "githubStars" : 2,
      "category" : "security",
      "tags" : [ "security", "vulnerability", "scanning", "remediation" ],
      "license" : "MIT License",
      "owner" : "rootio-avr",
      "tools" : [ {
        "name" : "create_registry_integration"
      }, {
        "name" : "get_image_remediation"
      }, {
        "name" : "get_remediation_continuity_summary"
      }, {
        "name" : "get_remediation_details_by_scan_id"
      }, {
        "name" : "get_remediation_status"
      }, {
        "name" : "get_user_info"
      }, {
        "name" : "list_remediation_continuity_summaries"
      }, {
        "name" : "list_unique_fqins"
      }, {
        "name" : "ping"
      }, {
        "name" : "registries_credentials_list"
      }, {
        "name" : "trigger_remediation"
      } ],
      "source" : "https://github.com/rootio-avr/mcp-proxy/tree/main",
      "icon" : "https://raw.githubusercontent.com/rootio-avr/mcp-proxy/refs/heads/main/assets/root-logo.svg",
      "prompts" : 0,
      "title" : "Root.io Vulnerability Remediation MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/root.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/root.json",
      "dateAdded" : "2025-07-10T19:06:20Z",
      "upstream" : "https://github.com/rootio-avr/mcp-proxy",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "7321fabf-55cb-46ea-adeb-224d507939bd",
      "versionId" : "0b183feb-04b8-4460-8ff9-c73d09c35db1"
    }
  }
}, {
  "name" : "com.docker.mcp/ros2",
  "description" : "Python server implementing Model Context Protocol (MCP) for ROS2.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/ros2",
    "version" : "sha256:380224f84e21b1d09bb97bbae901834eab54f06d565c1c7f9d5ac7a190bf45e4"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 172,
      "githubStars" : 38,
      "category" : "devops",
      "tags" : [ "devops" ],
      "license" : "Mozilla Public License 2.0",
      "owner" : "wise-vision",
      "tools" : [ {
        "name" : "ros2_get_message_fields"
      }, {
        "name" : "ros2_get_messages"
      }, {
        "name" : "ros2_interface_list"
      }, {
        "name" : "ros2_service_call"
      }, {
        "name" : "ros2_service_list"
      }, {
        "name" : "ros2_topic_list"
      }, {
        "name" : "ros2_topic_publish"
      }, {
        "name" : "ros2_topic_subscribe"
      } ],
      "source" : "https://github.com/wise-vision/mcp_server_ros_2/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/85994630?v=4",
      "prompts" : 0,
      "title" : "WiseVision ROS2 MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/ros2.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/ros2.json",
      "dateAdded" : "2025-09-15T16:12:49Z",
      "upstream" : "https://github.com/wise-vision/mcp_server_ros_2",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "353729c9-0d17-4b68-a4c1-f651fd93f348",
      "versionId" : "23d73be3-5706-47c9-b442-2e8643968bf5"
    }
  }
}, {
  "name" : "com.docker.mcp/rube",
  "description" : "Access to Rube's catalog of remote MCP servers.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://rube.app/mcp",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${RUBE_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "tools",
      "tags" : [ "tools", "automation", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=composio.dev&sz=64",
      "prompts" : 0,
      "title" : "Rube",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/rube.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/rube.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "47177d95-762b-41de-a41b-51c915ad2b31",
      "versionId" : "938e027d-b822-4f9a-9a10-a3e0600ca9b3"
    }
  }
}, {
  "name" : "com.docker.mcp/rust-mcp-filesystem",
  "description" : "The Rust MCP Filesystem is a high-performance, asynchronous, and lightweight Model Context Protocol (MCP) server built in Rust for secure and efficient filesystem operations. Designed with security in mind, it operates in read-only mode by default and restricts clients from updating allowed directories via MCP Roots unless explicitly enabled, ensuring robust protection against unauthorized access. Leveraging asynchronous I/O, it delivers blazingly fast performance with a minimal resource footprint. Optimized for token efficiency, the Rust MCP Filesystem enables large language models (LLMs) to precisely target searches and edits within specific sections of large files and restrict operations by file size range, making it ideal for efficient file exploration, automation, and system integration.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/rust-mcp-filesystem",
    "version" : "sha256:487f4cb1d4e0ecefb4bba648988371b9dae1f162c405d7889cd28ffede8e1e05",
    "environmentVariables" : [ {
      "name" : "ENABLE_ROOTS",
      "value" : "{rust-mcp-filesystem.enable_roots}",
      "isRepeated" : false,
      "variables" : {
        "rust-mcp-filesystem.enable_roots" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Enable dynamic directory access control via MCP client-side Roots."
        }
      }
    }, {
      "name" : "ALLOW_WRITE",
      "value" : "{rust-mcp-filesystem.allow_write}",
      "isRepeated" : false,
      "variables" : {
        "rust-mcp-filesystem.allow_write" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Enable read/write mode. If false, the app operates in read-only mode."
        }
      }
    } ],
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{rust-mcp-filesystem.allowed_directories}:{rust-mcp-filesystem.allowed_directories}",
      "isRepeated" : true,
      "variables" : {
        "rust-mcp-filesystem.allowed_directories" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "List of directories that rust-mcp-filesystem can access."
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "{rust-mcp-filesystem.allowed_directories|volume-target|into}",
      "isRepeated" : true,
      "variables" : {
        "rust-mcp-filesystem.allowed_directories" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "List of directories that rust-mcp-filesystem can access."
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 10,
      "githubStars" : 70,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "license" : "MIT License",
      "owner" : "rust-mcp-stack",
      "tools" : [ {
        "name" : "calculate_directory_size"
      }, {
        "name" : "create_directory"
      }, {
        "name" : "directory_tree"
      }, {
        "name" : "edit_file"
      }, {
        "name" : "find_duplicate_files"
      }, {
        "name" : "find_empty_directories"
      }, {
        "name" : "get_file_info"
      }, {
        "name" : "head_file"
      }, {
        "name" : "head_file"
      }, {
        "name" : "list_allowed_directories"
      }, {
        "name" : "list_directory"
      }, {
        "name" : "list_directory_with_sizes"
      }, {
        "name" : "move_file"
      }, {
        "name" : "read_file_lines"
      }, {
        "name" : "read_media_file"
      }, {
        "name" : "read_multiple_media_files"
      }, {
        "name" : "read_multiple_text_files"
      }, {
        "name" : "read_text_file"
      }, {
        "name" : "search_files"
      }, {
        "name" : "search_files_content"
      }, {
        "name" : "unzip_file"
      }, {
        "name" : "write_file"
      }, {
        "name" : "zip_directory"
      }, {
        "name" : "zip_files"
      } ],
      "source" : "https://github.com/rust-mcp-stack/rust-mcp-filesystem/tree/main",
      "icon" : "https://raw.githubusercontent.com/rust-mcp-stack/rust-mcp-filesystem/refs/heads/main/docs/_media/rust-mcp-filesystem.png",
      "prompts" : 0,
      "title" : "Blazing-fast, asynchronous MCP server for seamless filesystem operations.",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/rust-mcp-filesystem.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/rust-mcp-filesystem.json",
      "dateAdded" : "2025-09-24T20:01:26Z",
      "upstream" : "https://github.com/rust-mcp-stack/rust-mcp-filesystem",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "2c7fbcfa-6c3d-4793-8590-194e147bdb51",
      "versionId" : "643bd2a8-da32-403c-b5fc-1bcd62b549f7"
    }
  }
}, {
  "name" : "com.docker.mcp/schemacrawler-ai",
  "description" : "The SchemaCrawler AI MCP Server enables natural language interaction with your database schema using an MCP client in \"Agent\" mode. It allows users to explore tables, columns, foreign keys, triggers, stored procedures and more simply by asking questions like \"Explain the code for the interest calculation stored procedure\". You can also ask it to help with SQL, since it knows your schema. This is ideal for developers, DBAs, and data analysts who want to streamline schema comprehension and query development without diving into dense documentation.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/schemacrawler-ai",
    "version" : "sha256:529bcf70c268d5763dc817effcdd4561c6f9c53a08dc6884bee35b5df1659941",
    "environmentVariables" : [ {
      "name" : "SCHCRWLR_DATABASE_USER",
      "value" : "{schemacrawler-ai.database_user}",
      "variables" : {
        "schemacrawler-ai.database_user" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "SCHCRWLR_DATABASE_PASSWORD",
      "value" : "{schemacrawler-ai.database_password}",
      "variables" : {
        "schemacrawler-ai.database_password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "SCHCRWLR_JDBC_URL",
      "value" : "{schemacrawler-ai.url_connection.jdbc_url}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.url_connection.jdbc_url" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "--url JDBC URL for database connection"
        }
      }
    }, {
      "name" : "SCHCRWLR_SERVER",
      "value" : "{schemacrawler-ai.server_connection.server}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.server_connection.server" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "--server SchemaCrawler database plugin"
        }
      }
    }, {
      "name" : "SCHCRWLR_HOST",
      "value" : "{schemacrawler-ai.server_connection.host}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.server_connection.host" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "--host Database host (optional)"
        }
      }
    }, {
      "name" : "SCHCRWLR_PORT",
      "value" : "{schemacrawler-ai.server_connection.port}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.server_connection.port" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "--port Database port (optional)"
        }
      }
    }, {
      "name" : "SCHCRWLR_DATABASE",
      "value" : "{schemacrawler-ai.server_connection.database}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.server_connection.database" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "--database Database to connect to (optional)"
        }
      }
    }, {
      "name" : "SCHCRWLR_INFO_LEVEL",
      "value" : "{schemacrawler-ai.general.info_level}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.general.info_level" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "--info-level How much database metadata to retrieve"
        }
      }
    }, {
      "name" : "SCHCRWLR_LOG_LEVEL",
      "value" : "{schemacrawler-ai.general.log_level}",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.general.log_level" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ],
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "{schemacrawler-ai.volume.host_share}:/share",
      "isRepeated" : false,
      "variables" : {
        "schemacrawler-ai.volume.host_share" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Host volume to map within the Docker container"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 278,
      "stars" : 1,
      "githubStars" : 2,
      "category" : "database",
      "tags" : [ "ai", "database" ],
      "license" : "Other",
      "owner" : "schemacrawler",
      "tools" : [ {
        "name" : "describe-routines"
      }, {
        "name" : "describe-tables"
      }, {
        "name" : "get-schemacrawler-version"
      }, {
        "name" : "lint"
      }, {
        "name" : "list"
      }, {
        "name" : "list-across-tables"
      }, {
        "name" : "server-information"
      }, {
        "name" : "table-sample"
      } ],
      "source" : "https://github.com/schemacrawler/SchemaCrawler-AI/tree/docker-mcp-registry",
      "icon" : "https://avatars.githubusercontent.com/u/58572?v=4",
      "prompts" : 0,
      "title" : "SchemaCrawler AI",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/schemacrawler-ai.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/schemacrawler-ai.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/schemacrawler/SchemaCrawler-AI",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "11eecd58-4982-4610-b834-eba1de33eaa9",
      "versionId" : "5fa460e1-1da8-445e-b160-78dd50c47ac1"
    }
  }
}, {
  "name" : "com.docker.mcp/schogini-mcp-image-border",
  "description" : "This adds a border to an image and returns base64 encoded image.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/schogini_mcp_image_border",
    "version" : "sha256:aadb75058ed149533d43a5011cf61f3daaed9787acdfe4082093c6ddc494d061"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 748,
      "category" : "productivity",
      "tags" : [ "productivity" ],
      "owner" : "schogini",
      "tools" : [ {
        "name" : "add-two-numbers"
      }, {
        "name" : "image-border"
      }, {
        "name" : "image-meta"
      } ],
      "source" : "https://github.com/schogini/schogini_mcp_image_border/tree/main",
      "icon" : "https://d1yei2z3i6k35z.cloudfront.net/7429984/669a56c4ca69e_SCHOGINI-LOGO-ROUND.png",
      "prompts" : 0,
      "title" : "Schogini MCP Image Border",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/schogini-mcp-image-border.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/schogini-mcp-image-border.json",
      "dateAdded" : "2025-07-11T18:29:38Z",
      "upstream" : "https://github.com/schogini/schogini_mcp_image_border",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "47c00834-6337-48eb-a4d1-80611704835c",
      "versionId" : "add7e68d-61d1-4a9f-821f-362c57c21c1c"
    }
  }
}, {
  "name" : "com.docker.mcp/scrapegraph",
  "description" : "ScapeGraph MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/scrapegraph",
    "version" : "sha256:9005c47bdd7917294777ebeefe448da7e127b608e2006450f901452645a4fb1c",
    "environmentVariables" : [ {
      "name" : "SGAI_API_KEY",
      "value" : "{scrapegraph.api_key}",
      "variables" : {
        "scrapegraph.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3132,
      "stars" : 4,
      "githubStars" : 39,
      "category" : "devops",
      "tags" : [ "scrapegraph", "devops" ],
      "license" : "MIT License",
      "owner" : "ScrapeGraphAI",
      "tools" : [ {
        "name" : "markdownify"
      }, {
        "name" : "searchscraper"
      }, {
        "name" : "smartcrawler_fetch_results"
      }, {
        "name" : "smartcrawler_initiate"
      }, {
        "name" : "smartscraper"
      } ],
      "source" : "https://github.com/ScrapeGraphAI/scrapegraph-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/171017415?s=200&v=4",
      "prompts" : 0,
      "title" : "ScrapeGraph",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/scrapegraph.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/scrapegraph.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/ScrapeGraphAI/scrapegraph-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a57138de-a210-40dd-af0b-10eff4f8834a",
      "versionId" : "fe443d56-b23a-4d0c-bbb1-80bc0b80b238"
    }
  }
}, {
  "name" : "com.docker.mcp/scrapezy",
  "description" : "A Model Context Protocol server for Scrapezy that enables AI models to extract structured data from websites.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/scrapezy",
    "version" : "sha256:7a19e9b36500d94ba48f9497aaa50fc7387e274ef53ca0f6f2c076444ff4b05a",
    "environmentVariables" : [ {
      "name" : "SCRAPEZY_API_KEY",
      "value" : "{scrapezy.auth_token}",
      "variables" : {
        "scrapezy.auth_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2325,
      "stars" : 3,
      "githubStars" : 9,
      "category" : "devops",
      "tags" : [ "scrapezy", "devops" ],
      "license" : "MIT License",
      "owner" : "Scrapezy",
      "tools" : [ {
        "name" : "extract-structured-data"
      } ],
      "source" : "https://github.com/Scrapezy/mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/196929482?s=200&v=4",
      "prompts" : 0,
      "title" : "Scrapezy",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/scrapezy.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/scrapezy.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Scrapezy/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ce86b9a3-f89f-4fc7-b03b-6f71e7a1f610",
      "versionId" : "fdbebfa6-f640-4671-8816-eda62c0507ac"
    }
  }
}, {
  "name" : "com.docker.mcp/securenote-link-mcp-server",
  "description" : "SecureNote.link MCP Server - allowing AI agents to securely share sensitive information through end-to-end encrypted notes.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/securenote-link-mcp-server",
    "version" : "sha256:38ddb4f13319c20dcafdd59cb5935f59991ea415203bed659a180d90aaa1d989"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 921,
      "stars" : 2,
      "category" : "communication",
      "tags" : [ "communication" ],
      "owner" : "jackalterman",
      "tools" : [ {
        "name" : "check_api_health"
      }, {
        "name" : "get_instructions"
      }, {
        "name" : "retrieve_and_decrypt_secret"
      }, {
        "name" : "send_secure_note"
      }, {
        "name" : "send_secure_note_return_api_url_and_key"
      } ],
      "source" : "https://github.com/jackalterman/securenote-link-MCP-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/5723207?v=5",
      "prompts" : 0,
      "title" : "Securenote.link mcp server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/securenote-link-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/securenote-link-mcp-server.json",
      "dateAdded" : "2025-07-08T13:38:25Z",
      "upstream" : "https://github.com/jackalterman/securenote-link-MCP-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "7f354227-5b1a-4432-8f68-7557ba0c0d31",
      "versionId" : "b30b99c2-406c-461c-8575-83785c28ab02"
    }
  }
}, {
  "name" : "com.docker.mcp/semgrep",
  "description" : "MCP server for using Semgrep to scan code for security vulnerabilities.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://mcp.semgrep.ai/mcp"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "security",
      "tags" : [ "security", "code-analysis", "sast", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "semgrep_rule_schema"
      }, {
        "name" : "get_supported_languages"
      }, {
        "name" : "semgrep_findings"
      }, {
        "name" : "semgrep_scan_with_custom_rule"
      }, {
        "name" : "semgrep_scan"
      }, {
        "name" : "semgrep_scan_local"
      }, {
        "name" : "security_check"
      }, {
        "name" : "get_abstract_syntax_tree"
      } ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=semgrep.ai&sz=64",
      "prompts" : 0,
      "title" : "Semgrep",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/semgrep.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/semgrep.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "636961c4-5f88-4871-9c5a-440489ec6ab5",
      "versionId" : "5b732dfb-63a7-49c3-b589-fa131a1f35ac"
    }
  }
}, {
  "name" : "com.docker.mcp/sentry",
  "description" : "A Model Context Protocol server for retrieving and analyzing issues from Sentry.io. This server provides tools to inspect error reports, stacktraces, and other debugging information from your Sentry account.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/sentry",
    "version" : "sha256:f38467297a1ed273009e0ad85bd0fc9f4ce44578114be0f349d6333c5000558b",
    "environmentVariables" : [ {
      "name" : "SENTRY_AUTH_TOKEN",
      "value" : "{sentry.auth_token}",
      "variables" : {
        "sentry.auth_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "--auth-token"
    }, {
      "type" : "positional",
      "value" : "$SENTRY_AUTH_TOKEN"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 4162,
      "stars" : 5,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "sentry", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "get_sentry_issue"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/sentry",
      "icon" : "https://avatars.githubusercontent.com/u/1396951?s=200&v=4",
      "prompts" : 0,
      "title" : "Sentry (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/sentry.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/sentry.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0b3599d2-9e43-4876-8e95-e1a4fe9d1d36",
      "versionId" : "2e465cd8-c1e1-4877-8a55-479475a39132"
    }
  }
}, {
  "name" : "com.docker.mcp/sequa",
  "description" : "Stop stitching context for Copilot and Cursor. With Sequa MCP, your AI tools know your entire codebase and docs out of the box.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/sequa",
    "version" : "sha256:f4d04cfe92573937c9cf149fe5c42bbc00acadb2032824161390ef6d2a6894ae",
    "environmentVariables" : [ {
      "name" : "API_KEY",
      "value" : "{sequa.api_key}",
      "variables" : {
        "sequa.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "MCP_SERVER_URL",
      "value" : "{sequa.mcp_server_url}",
      "isRepeated" : false,
      "variables" : {
        "sequa.mcp_server_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 567,
      "stars" : 1,
      "githubStars" : 10,
      "category" : "devops",
      "tags" : [ "search", "ai", "devops" ],
      "license" : "MIT License",
      "owner" : "sequa-ai",
      "tools" : [ {
        "name" : "system_context_bL5QTvje"
      } ],
      "source" : "https://github.com/sequa-ai/sequa-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/187640573?v=4",
      "prompts" : 0,
      "title" : "Sequa.AI",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/sequa.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/sequa.json",
      "dateAdded" : "2025-08-11T20:20:11Z",
      "upstream" : "https://github.com/sequa-ai/sequa-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "8891d58f-091e-458b-bc0c-d5d56e36a761",
      "versionId" : "f0e48860-2743-4ec5-802e-78317063023d"
    }
  }
}, {
  "name" : "com.docker.mcp/sequentialthinking",
  "description" : "Dynamic and reflective problem-solving through thought sequences.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/sequentialthinking",
    "version" : "sha256:cd3174b2ecf37738654cf7671fb1b719a225c40a78274817da00c4241f465e5f"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 102972,
      "stars" : 28,
      "githubStars" : 68780,
      "category" : "ai",
      "tags" : [ "mcp", "ai" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "sequentialthinking"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.6/src/sequentialthinking",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Sequential Thinking (Reference)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/sequentialthinking.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/sequentialthinking.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "cbe7854c-be17-4da3-b385-a420c9c2a918",
      "versionId" : "862d7440-ddfb-446f-b49d-9ab45a428915"
    }
  }
}, {
  "name" : "com.docker.mcp/short-io",
  "description" : "Access to Short.io's link shortener and analytics tools.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://ai-assistant.short.io/mcp",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${SHORT_IO_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "tools",
      "tags" : [ "tools", "url-shortener", "analytics", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=short.io&sz=64",
      "prompts" : 0,
      "title" : "Short.io",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/short-io.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/short-io.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0f2edf1e-2f2d-4a7c-a4d2-ebcdc7e02bcf",
      "versionId" : "b9cdecf2-8fde-461a-8503-6b58443ab106"
    }
  }
}, {
  "name" : "com.docker.mcp/singlestore",
  "description" : "MCP server for interacting with SingleStore Management API and services.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/singlestore",
    "version" : "sha256:84f5ce412167ad1783f9877cb69139fa871972ef99542994b9423059615eb9b7",
    "environmentVariables" : [ {
      "name" : "MCP_API_KEY",
      "value" : "{singlestore.mcp_api_key}",
      "variables" : {
        "singlestore.mcp_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1048,
      "githubStars" : 27,
      "category" : "database",
      "tags" : [ "singlestore", "database" ],
      "license" : "MIT License",
      "owner" : "singlestore-labs",
      "tools" : [ {
        "name" : "create_job_from_notebook"
      }, {
        "name" : "create_notebook_file"
      }, {
        "name" : "create_starter_workspace"
      }, {
        "name" : "delete_job"
      }, {
        "name" : "get_job"
      }, {
        "name" : "get_user_info"
      }, {
        "name" : "list_regions"
      }, {
        "name" : "list_sharedtier_regions"
      }, {
        "name" : "list_starter_workspaces"
      }, {
        "name" : "organization_info"
      }, {
        "name" : "resume_workspace"
      }, {
        "name" : "run_sql"
      }, {
        "name" : "terminate_starter_workspace"
      }, {
        "name" : "upload_notebook_file"
      }, {
        "name" : "workspace_groups_info"
      }, {
        "name" : "workspaces_info"
      } ],
      "source" : "https://github.com/singlestore-labs/mcp-server-singlestore/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/79943160?v=4",
      "prompts" : 0,
      "title" : "Singlestore",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/singlestore.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/singlestore.json",
      "dateAdded" : "2025-07-09T16:39:19Z",
      "upstream" : "https://github.com/singlestore-labs/mcp-server-singlestore",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d618e0cd-818d-4434-90ec-895a5db856e8",
      "versionId" : "6543926d-de72-4489-911a-cfcb4461b527"
    }
  }
}, {
  "name" : "com.docker.mcp/slack",
  "description" : "Interact with Slack Workspaces over the Slack API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/slack",
    "version" : "sha256:4cc10c3f4bd988bd2dce40e3068fe38fa3b3bad1da99f9653eb5fa5cce35baa1",
    "environmentVariables" : [ {
      "name" : "SLACK_BOT_TOKEN",
      "value" : "{slack.bot_token}",
      "variables" : {
        "slack.bot_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "SLACK_TEAM_ID",
      "value" : "{slack.team_id}",
      "isRepeated" : false,
      "variables" : {
        "slack.team_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "SLACK_CHANNEL_IDS",
      "value" : "{slack.channel_ids}",
      "isRepeated" : false,
      "variables" : {
        "slack.channel_ids" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 270581,
      "stars" : 21,
      "githubStars" : 68780,
      "category" : "communication",
      "tags" : [ "slack", "communication" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "slack_add_reaction"
      }, {
        "name" : "slack_get_channel_history"
      }, {
        "name" : "slack_get_thread_replies"
      }, {
        "name" : "slack_get_user_profile"
      }, {
        "name" : "slack_get_users"
      }, {
        "name" : "slack_list_channels"
      }, {
        "name" : "slack_post_message"
      }, {
        "name" : "slack_reply_to_thread"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24",
      "icon" : "https://avatars.githubusercontent.com/u/6911160?s=200&v=4",
      "prompts" : 0,
      "title" : "Slack (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/slack.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/slack.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b40d93bd-f4a9-4b77-b5d1-ed9aebd8516e",
      "versionId" : "9b7af5a2-ca61-4c2d-9bfd-e7aebbd05e5e"
    }
  }
}, {
  "name" : "com.docker.mcp/smartbear",
  "description" : "MCP server for AI access to SmartBear tools, including BugSnag, Reflect, API Hub, PactFlow.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/smartbear",
    "version" : "sha256:2508e105f02beb3ef97e4558d450e24c1c0f9f17a6a438aa2c1d760b2cc0e183",
    "environmentVariables" : [ {
      "name" : "BUGSNAG_AUTH_TOKEN",
      "value" : "{smartbear.bugsnag_auth_token}",
      "variables" : {
        "smartbear.bugsnag_auth_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "REFLECT_API_TOKEN",
      "value" : "{smartbear.reflect_api_token}",
      "variables" : {
        "smartbear.reflect_api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "API_HUB_API_KEY",
      "value" : "{smartbear.api_hub_api_key}",
      "variables" : {
        "smartbear.api_hub_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "PACT_BROKER_TOKEN",
      "value" : "{smartbear.pact_broker_token}",
      "variables" : {
        "smartbear.pact_broker_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "PACT_BROKER_PASSWORD",
      "value" : "{smartbear.pact_broker_password}",
      "variables" : {
        "smartbear.pact_broker_password" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "BUGSNAG_PROJECT_API_KEY",
      "value" : "{smartbear.bugsnag_api_key}",
      "isRepeated" : false,
      "variables" : {
        "smartbear.bugsnag_api_key" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "BUGSNAG_ENDPOINT",
      "value" : "{smartbear.bugsnag_endpoint}",
      "isRepeated" : false,
      "variables" : {
        "smartbear.bugsnag_endpoint" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "PACT_BROKER_BASE_URL",
      "value" : "{smartbear.pact_broker_base_url}",
      "isRepeated" : false,
      "variables" : {
        "smartbear.pact_broker_base_url" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "PACT_BROKER_USERNAME",
      "value" : "{smartbear.pact_broker_username}",
      "isRepeated" : false,
      "variables" : {
        "smartbear.pact_broker_username" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 746,
      "githubStars" : 17,
      "category" : "devops",
      "tags" : [ "smartbear", "devops", "api-testing", "monitoring" ],
      "license" : "MIT License",
      "owner" : "SmartBear",
      "tools" : [ {
        "name" : "api_hub_create_portal"
      }, {
        "name" : "api_hub_create_portal_product"
      }, {
        "name" : "api_hub_delete_portal"
      }, {
        "name" : "api_hub_delete_portal_product"
      }, {
        "name" : "api_hub_get_portal"
      }, {
        "name" : "api_hub_get_portal_product"
      }, {
        "name" : "api_hub_list_portal_products"
      }, {
        "name" : "api_hub_list_portals"
      }, {
        "name" : "api_hub_update_portal"
      }, {
        "name" : "api_hub_update_portal_product"
      }, {
        "name" : "reflect_cancel_suite_execution"
      }, {
        "name" : "reflect_execute_suite"
      }, {
        "name" : "reflect_get_suite_execution_status"
      }, {
        "name" : "reflect_get_test_status"
      }, {
        "name" : "reflect_list_suite_executions"
      }, {
        "name" : "reflect_list_suites"
      }, {
        "name" : "reflect_list_tests"
      }, {
        "name" : "reflect_run_test"
      } ],
      "source" : "https://github.com/SmartBear/smartbear-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/1644671?s=200&v=4",
      "prompts" : 0,
      "title" : "SmartBear MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/smartbear.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/smartbear.json",
      "dateAdded" : "2025-08-05T16:31:03Z",
      "upstream" : "https://github.com/SmartBear/smartbear-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "42caa5d0-e345-47cf-8426-97563e342dc7",
      "versionId" : "4fcfd88b-1532-4da9-8b84-2acabdf45012"
    }
  }
}, {
  "name" : "com.docker.mcp/sonarqube",
  "description" : "Interact with SonarQube Cloud, Server and Community build over the web API. Analyze code to identify quality and security issues.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/sonarqube",
    "version" : "sha256:0b8368743f8b588c14ef8248797b6d355f943c8e790324b418ada842046f742e",
    "environmentVariables" : [ {
      "name" : "SONARQUBE_TOKEN",
      "value" : "{sonarqube.token}",
      "variables" : {
        "sonarqube.token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "SONARQUBE_URL",
      "value" : "{sonarqube.url}",
      "isRepeated" : false,
      "variables" : {
        "sonarqube.url" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "URL of the SonarQube instance, to provide only for SonarQube Server or Community Build"
        }
      }
    }, {
      "name" : "SONARQUBE_ORG",
      "value" : "{sonarqube.org}",
      "isRepeated" : false,
      "variables" : {
        "sonarqube.org" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Organization key for SonarQube Cloud, not required for SonarQube Server or Community Build"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 10561,
      "stars" : 17,
      "githubStars" : 101,
      "category" : "productivity",
      "tags" : [ "sonarqube" ],
      "license" : "Other",
      "owner" : "SonarSource",
      "tools" : [ {
        "name" : "analyze_code_snippet"
      }, {
        "name" : "change_sonar_issue_status"
      }, {
        "name" : "create_webhook"
      }, {
        "name" : "get_component_measures"
      }, {
        "name" : "get_project_quality_gate_status"
      }, {
        "name" : "get_raw_source"
      }, {
        "name" : "get_scm_info"
      }, {
        "name" : "get_system_health"
      }, {
        "name" : "get_system_info"
      }, {
        "name" : "get_system_logs"
      }, {
        "name" : "get_system_status"
      }, {
        "name" : "list_languages"
      }, {
        "name" : "list_portfolios"
      }, {
        "name" : "list_quality_gates"
      }, {
        "name" : "list_rule_repositories"
      }, {
        "name" : "list_webhooks"
      }, {
        "name" : "ping_system"
      }, {
        "name" : "search_metrics"
      }, {
        "name" : "search_my_sonarqube_projects"
      }, {
        "name" : "search_sonar_issues_in_projects"
      }, {
        "name" : "show_rule"
      } ],
      "source" : "https://github.com/SonarSource/sonarqube-mcp-server/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/545988?s=200&v=4",
      "prompts" : 0,
      "title" : "SonarQube",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/sonarqube.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/sonarqube.json",
      "dateAdded" : "2025-07-01T12:14:18Z",
      "upstream" : "https://github.com/SonarSource/sonarqube-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a20587f5-20f7-4d19-805a-64d25e23c499",
      "versionId" : "07e323f2-1c6f-4152-a4ea-2c725743d0ed"
    }
  }
}, {
  "name" : "com.docker.mcp/SQLite",
  "description" : "Database interaction and business intelligence capabilities.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/sqlite",
    "version" : "sha256:efbc05ccace18df122f26b674bd1730c76ece716551df2b3961d519909c34696",
    "runtimeArguments" : [ {
      "type" : "named",
      "name" : "-v",
      "value" : "mcp-sqlite:/mcp"
    } ],
    "packageArguments" : [ {
      "type" : "positional",
      "value" : "--db-path"
    }, {
      "type" : "positional",
      "value" : "/mcp/db.sqlite"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 13979,
      "stars" : 14,
      "githubStars" : 68780,
      "category" : "database",
      "tags" : [ "sqlite", "database" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "append_insight"
      }, {
        "name" : "create_table"
      }, {
        "name" : "describe_table"
      }, {
        "name" : "list_tables"
      }, {
        "name" : "read_query"
      }, {
        "name" : "write_query"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/sqlite",
      "icon" : "https://avatars.githubusercontent.com/u/48680494?v=4",
      "prompts" : 0,
      "title" : "SQLite (Archived)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/SQLite.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/SQLite.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "881ad438-562f-48fc-8ba5-72b860c25b32",
      "versionId" : "318e3c94-bb14-4ef6-b9e1-4933bed6aded"
    }
  }
}, {
  "name" : "com.docker.mcp/stackhawk",
  "description" : "A Model Context Protocol (MCP) server for integrating with StackHawk's security scanning platform. Provides security analytics, YAML configuration management, sensitive data/threat surface analysis, and anti-hallucination tools for LLMs.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/stackhawk",
    "version" : "sha256:058c26ca70e33599bf387521667d599c8838c4cf5ffcb3e8016013fceeb358ac",
    "environmentVariables" : [ {
      "name" : "STACKHAWK_API_KEY",
      "value" : "{stackhawk.api_key}",
      "variables" : {
        "stackhawk.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 69,
      "category" : "devops",
      "tags" : [ "devops", "stackhawk", "appsec" ],
      "license" : "Other",
      "owner" : "stackhawk",
      "tools" : [ {
        "name" : "analyze_sensitive_data_trends"
      }, {
        "name" : "create_stackhawk_config"
      }, {
        "name" : "generate_security_dashboard"
      }, {
        "name" : "generate_sensitive_data_summary"
      }, {
        "name" : "get_app_findings_for_triage"
      }, {
        "name" : "get_critical_sensitive_data"
      }, {
        "name" : "get_organization_info"
      }, {
        "name" : "get_sensitive_data"
      }, {
        "name" : "get_sensitive_data_report"
      }, {
        "name" : "get_stackhawk_scan_instructions"
      }, {
        "name" : "get_stackhawk_schema"
      }, {
        "name" : "list_applications"
      }, {
        "name" : "map_sensitive_data_surface"
      }, {
        "name" : "run_stackhawk_scan"
      }, {
        "name" : "search_vulnerabilities"
      }, {
        "name" : "setup_stackhawk_for_project"
      }, {
        "name" : "validate_field_exists"
      }, {
        "name" : "validate_stackhawk_config"
      } ],
      "source" : "https://github.com/stackhawk/stackhawk-mcp/tree/feature/image-entrypoint",
      "icon" : "https://avatars.githubusercontent.com/u/53230463?v=4",
      "prompts" : 0,
      "title" : "StackHawk",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/stackhawk.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/stackhawk.json",
      "dateAdded" : "2025-09-19T06:18:27Z",
      "upstream" : "https://github.com/stackhawk/stackhawk-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "103d7b74-d393-4350-a8c3-3f022bee566f",
      "versionId" : "02016870-d7ae-414c-ac56-b7f7127c84be"
    }
  }
}, {
  "name" : "com.docker.mcp/suzieq",
  "description" : "MCP Server to interact with a SuzieQ network observability instance via its REST API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/suzieq-mcp",
    "version" : "sha256:ea9f7d06053dc97bd1af1cc24636c3020ece91746323b6229560bf3d0a457200",
    "environmentVariables" : [ {
      "name" : "SUZIEQ_API_KEY",
      "value" : "{suzieq.api_key}",
      "variables" : {
        "suzieq.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "SUZIEQ_API_ENDPOINT",
      "value" : "{suzieq.api_endpoint}",
      "isRepeated" : false,
      "variables" : {
        "suzieq.api_endpoint" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 940,
      "stars" : 1,
      "githubStars" : 3,
      "category" : "monitoring",
      "tags" : [ "observability" ],
      "license" : "MIT License",
      "owner" : "PovedaAqui",
      "tools" : [ {
        "name" : "run_suzieq_show"
      }, {
        "name" : "run_suzieq_summarize"
      } ],
      "source" : "https://github.com/PovedaAqui/suzieq-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Suzieq MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/suzieq.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/suzieq.json",
      "dateAdded" : "2025-06-11T14:18:50Z",
      "upstream" : "https://github.com/PovedaAqui/suzieq-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "c41759c3-fdc8-48c0-9a45-7396ccc98378",
      "versionId" : "5189a680-0267-4ebd-a3f5-4d4376a912e4"
    }
  }
}, {
  "name" : "com.docker.mcp/tavily",
  "description" : "The Tavily MCP server provides seamless interaction with the tavily-search and tavily-extract tools, real-time web search capabilities through the tavily-search tool and Intelligent data extraction from web pages via the tavily-extract tool.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/tavily",
    "version" : "sha256:deb302515c6087da68547ac060492b72c12f0eeecbe6669ebcf26d9f929ab9dd",
    "environmentVariables" : [ {
      "name" : "TAVILY_API_KEY",
      "value" : "{tavily.api_token}",
      "variables" : {
        "tavily.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 6957,
      "stars" : 8,
      "githubStars" : 773,
      "category" : "search",
      "tags" : [ "tavily", "search" ],
      "license" : "MIT License",
      "owner" : "tavily-ai",
      "tools" : [ {
        "name" : "tavily-crawl"
      }, {
        "name" : "tavily-extract"
      }, {
        "name" : "tavily-map"
      }, {
        "name" : "tavily-search"
      } ],
      "source" : "https://github.com/tavily-ai/tavily-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/170207473?s=200&v=4",
      "prompts" : 0,
      "title" : "Tavily",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/tavily.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/tavily.json",
      "dateAdded" : "2025-05-05T20:04:34Z",
      "upstream" : "https://github.com/tavily-ai/tavily-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a73b255e-61f1-477e-bf9e-91c9cbdf0acc",
      "versionId" : "e6b0184c-f914-429c-aa76-0f3a313962d4"
    }
  }
}, {
  "name" : "com.docker.mcp/teamwork",
  "description" : "Tools for Teamwork.com products.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/teamwork",
    "version" : "sha256:51280a63cd8eba124af4a355e0163f6167f7637985e26081be5d7fad56507313",
    "environmentVariables" : [ {
      "name" : "TW_MCP_BEARER_TOKEN",
      "value" : "{teamwork.tw_mcp_bearer_token}",
      "variables" : {
        "teamwork.tw_mcp_bearer_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 516,
      "githubStars" : 8,
      "category" : "productivity",
      "tags" : [ "ai", "artificial-intelligence", "teamwork" ],
      "license" : "MIT License",
      "owner" : "Teamwork",
      "tools" : [ {
        "name" : "twdesk-create_company"
      }, {
        "name" : "twdesk-create_customer"
      }, {
        "name" : "twdesk-create_message"
      }, {
        "name" : "twdesk-create_priority"
      }, {
        "name" : "twdesk-create_status"
      }, {
        "name" : "twdesk-create_tag"
      }, {
        "name" : "twdesk-create_ticket"
      }, {
        "name" : "twdesk-create_type"
      }, {
        "name" : "twdesk-get_company"
      }, {
        "name" : "twdesk-get_customer"
      }, {
        "name" : "twdesk-get_priority"
      }, {
        "name" : "twdesk-get_status"
      }, {
        "name" : "twdesk-get_tag"
      }, {
        "name" : "twdesk-get_ticket"
      }, {
        "name" : "twdesk-get_type"
      }, {
        "name" : "twdesk-get_user"
      }, {
        "name" : "twdesk-list_companies"
      }, {
        "name" : "twdesk-list_customers"
      }, {
        "name" : "twdesk-list_priorities"
      }, {
        "name" : "twdesk-list_statuses"
      }, {
        "name" : "twdesk-list_tags"
      }, {
        "name" : "twdesk-list_tickets"
      }, {
        "name" : "twdesk-list_types"
      }, {
        "name" : "twdesk-list_users"
      }, {
        "name" : "twdesk-update_company"
      }, {
        "name" : "twdesk-update_customer"
      }, {
        "name" : "twdesk-update_priority"
      }, {
        "name" : "twdesk-update_status"
      }, {
        "name" : "twdesk-update_tag"
      }, {
        "name" : "twdesk-update_ticket"
      }, {
        "name" : "twdesk-update_type"
      }, {
        "name" : "twprojects-add_project_member"
      }, {
        "name" : "twprojects-complete_timer"
      }, {
        "name" : "twprojects-create_comment"
      }, {
        "name" : "twprojects-create_company"
      }, {
        "name" : "twprojects-create_milestone"
      }, {
        "name" : "twprojects-create_notebook"
      }, {
        "name" : "twprojects-create_project"
      }, {
        "name" : "twprojects-create_tag"
      }, {
        "name" : "twprojects-create_task"
      }, {
        "name" : "twprojects-create_tasklist"
      }, {
        "name" : "twprojects-create_team"
      }, {
        "name" : "twprojects-create_timelog"
      }, {
        "name" : "twprojects-create_timer"
      }, {
        "name" : "twprojects-create_user"
      }, {
        "name" : "twprojects-get_comment"
      }, {
        "name" : "twprojects-get_company"
      }, {
        "name" : "twprojects-get_milestone"
      }, {
        "name" : "twprojects-get_notebook"
      }, {
        "name" : "twprojects-get_project"
      }, {
        "name" : "twprojects-get_tag"
      }, {
        "name" : "twprojects-get_task"
      }, {
        "name" : "twprojects-get_tasklist"
      }, {
        "name" : "twprojects-get_team"
      }, {
        "name" : "twprojects-get_timelog"
      }, {
        "name" : "twprojects-get_timer"
      }, {
        "name" : "twprojects-get_user"
      }, {
        "name" : "twprojects-get_user_me"
      }, {
        "name" : "twprojects-list_activities"
      }, {
        "name" : "twprojects-list_activities_by_project"
      }, {
        "name" : "twprojects-list_comments"
      }, {
        "name" : "twprojects-list_comments_by_file_version"
      }, {
        "name" : "twprojects-list_comments_by_milestone"
      }, {
        "name" : "twprojects-list_comments_by_notebook"
      }, {
        "name" : "twprojects-list_comments_by_task"
      }, {
        "name" : "twprojects-list_companies"
      }, {
        "name" : "twprojects-list_industries"
      }, {
        "name" : "twprojects-list_milestones"
      }, {
        "name" : "twprojects-list_milestones_by_project"
      }, {
        "name" : "twprojects-list_notebooks"
      }, {
        "name" : "twprojects-list_projects"
      }, {
        "name" : "twprojects-list_tags"
      }, {
        "name" : "twprojects-list_tasklists"
      }, {
        "name" : "twprojects-list_tasklists_by_project"
      }, {
        "name" : "twprojects-list_tasks"
      }, {
        "name" : "twprojects-list_tasks_by_project"
      }, {
        "name" : "twprojects-list_tasks_by_tasklist"
      }, {
        "name" : "twprojects-list_teams"
      }, {
        "name" : "twprojects-list_teams_by_company"
      }, {
        "name" : "twprojects-list_teams_by_project"
      }, {
        "name" : "twprojects-list_timelogs"
      }, {
        "name" : "twprojects-list_timelogs_by_project"
      }, {
        "name" : "twprojects-list_timelogs_by_task"
      }, {
        "name" : "twprojects-list_timers"
      }, {
        "name" : "twprojects-list_users"
      }, {
        "name" : "twprojects-list_users_by_project"
      }, {
        "name" : "twprojects-pause_timer"
      }, {
        "name" : "twprojects-resume_timer"
      }, {
        "name" : "twprojects-update_comment"
      }, {
        "name" : "twprojects-update_company"
      }, {
        "name" : "twprojects-update_milestone"
      }, {
        "name" : "twprojects-update_notebook"
      }, {
        "name" : "twprojects-update_project"
      }, {
        "name" : "twprojects-update_tag"
      }, {
        "name" : "twprojects-update_task"
      }, {
        "name" : "twprojects-update_tasklist"
      }, {
        "name" : "twprojects-update_team"
      }, {
        "name" : "twprojects-update_timelog"
      }, {
        "name" : "twprojects-update_timer"
      }, {
        "name" : "twprojects-update_user"
      }, {
        "name" : "twprojects-users_workload"
      } ],
      "source" : "https://github.com/teamwork/mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/4037476?v=4",
      "prompts" : 0,
      "title" : "Teamwork",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/teamwork.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/teamwork.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "upstream" : "https://github.com/teamwork/mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d2a470cf-0129-44e0-a5e6-20c2a1df8fe1",
      "versionId" : "27caf434-403c-490d-8aee-d35976d49bd9"
    }
  }
}, {
  "name" : "com.docker.mcp/telnyx",
  "description" : "Enables interaction with powerful telephony, messaging, and AI assistant APIs.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "streamable-http",
    "url" : "https://api.telnyx.com/v2/mcp",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${TELNYX_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "communication",
      "tags" : [ "communication", "telephony", "sms", "remote" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ ],
      "source" : "",
      "icon" : "https://www.google.com/s2/favicons?domain=telnyx.com&sz=64",
      "prompts" : 0,
      "title" : "Telnyx",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/telnyx.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/telnyx.json",
      "dateAdded" : "2025-09-08T19:03:35Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "12ee55af-6f03-4551-bb8d-5c654f5de520",
      "versionId" : "a0389281-e07f-4156-af35-3131fca02ff4"
    }
  }
}, {
  "name" : "com.docker.mcp/tembo",
  "description" : "MCP server for Tembo Cloud's platform API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/tembo",
    "version" : "sha256:178ea1dae888ff7ef335ef246cddea531c2177c4ec41442e7e056f4b99a78e6e",
    "environmentVariables" : [ {
      "name" : "TEMBO_API_KEY",
      "value" : "{tembo.api_token}",
      "variables" : {
        "tembo.api_token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1783,
      "githubStars" : 7,
      "category" : "devops",
      "tags" : [ "tembo", "devops" ],
      "license" : "MIT License",
      "owner" : "tembo-io",
      "tools" : [ {
        "name" : "ask_tembo"
      }, {
        "name" : "create_instance"
      }, {
        "name" : "delete_instance"
      }, {
        "name" : "get_all_apps"
      }, {
        "name" : "get_all_instances"
      }, {
        "name" : "get_app"
      }, {
        "name" : "get_instance"
      }, {
        "name" : "get_instance_schema"
      }, {
        "name" : "patch_instance"
      }, {
        "name" : "restore_instance"
      } ],
      "source" : "https://github.com/tembo-io/mcp-server-tembo/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/113815875?s=200&v=4",
      "prompts" : 0,
      "title" : "Tembo",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/tembo.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/tembo.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/tembo-io/mcp-server-tembo",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "e58fe3a4-44eb-47b3-8349-de50358ac92c",
      "versionId" : "80fda8c0-abc5-4e93-ad5c-e71d5cc08d64"
    }
  }
}, {
  "name" : "com.docker.mcp/text-to-graphql",
  "description" : "Transform natural language queries into GraphQL queries using an AI agent. Provides schema management, query validation, execution, and history tracking.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/text-to-graphql",
    "version" : "sha256:d260ee59e2fe08b444fea26fe935109cf0e6336c1677256c0274bdaa84e69997",
    "environmentVariables" : [ {
      "name" : "OPENAI_API_KEY",
      "value" : "{text-to-graphql.openai_api_key}",
      "variables" : {
        "text-to-graphql.openai_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "GRAPHQL_ENDPOINT",
      "value" : "{text-to-graphql.graphql_endpoint}",
      "variables" : {
        "text-to-graphql.graphql_endpoint" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "GRAPHQL_API_KEY",
      "value" : "{text-to-graphql.graphql_api_key}",
      "variables" : {
        "text-to-graphql.graphql_api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 815,
      "githubStars" : 17,
      "category" : "devops",
      "tags" : [ "graphql", "ai", "natural-language", "api", "query-generation" ],
      "license" : "Other",
      "owner" : "Arize-ai",
      "tools" : [ {
        "name" : "execute_graphql_query"
      }, {
        "name" : "generate_graphql_query"
      }, {
        "name" : "get_query_examples"
      }, {
        "name" : "get_query_history"
      }, {
        "name" : "validate_graphql_query"
      } ],
      "source" : "https://github.com/Arize-ai/text-to-graphql-mcp/tree/main",
      "icon" : "https://upload.wikimedia.org/wikipedia/commons/1/17/GraphQL_Logo.svg",
      "prompts" : 0,
      "title" : "Text-to-GraphQL",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/text-to-graphql.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/text-to-graphql.json",
      "dateAdded" : "2025-07-08T13:38:25Z",
      "upstream" : "https://github.com/Arize-ai/text-to-graphql-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "77a68602-5a6f-45b8-a298-06df3b507d8c",
      "versionId" : "73953af2-5951-461f-bbf9-5139050a3f1d"
    }
  }
}, {
  "name" : "com.docker.mcp/tigris",
  "description" : "Tigris is a globally distributed S3-compatible object storage service that provides low latency anywhere in the world, enabling developers to store and access any amount of data for a wide range of use cases.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/tigris",
    "version" : "sha256:f183ed3aebced05aaeca109d20135c9972eefb77e2c1e822ee3a9e5a2cffcb7a",
    "environmentVariables" : [ {
      "name" : "AWS_SECRET_ACCESS_KEY",
      "value" : "{tigris.aws_secret_access_key}",
      "variables" : {
        "tigris.aws_secret_access_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "AWS_ACCESS_KEY_ID",
      "value" : "{tigris.aws_access_key_id}",
      "isRepeated" : false,
      "variables" : {
        "tigris.aws_access_key_id" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    }, {
      "name" : "AWS_ENDPOINT_URL_S3",
      "value" : "{tigris.aws_endpoint_url_s3}",
      "isRepeated" : false,
      "variables" : {
        "tigris.aws_endpoint_url_s3" : {
          "isSecret" : false,
          "format" : "string"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 824,
      "githubStars" : 3,
      "category" : "devops",
      "tags" : [ "s3-storage", "storage", "tigris", "tigris-data" ],
      "license" : "MIT License",
      "owner" : "tigrisdata",
      "tools" : [ {
        "name" : "tigris_create_bucket"
      }, {
        "name" : "tigris_delete_bucket"
      }, {
        "name" : "tigris_delete_object"
      }, {
        "name" : "tigris_get_object"
      }, {
        "name" : "tigris_get_signed_url_object"
      }, {
        "name" : "tigris_list_buckets"
      }, {
        "name" : "tigris_list_objects"
      }, {
        "name" : "tigris_put_object"
      }, {
        "name" : "tigris_put_object_from_path"
      }, {
        "name" : "tigris_upload_file_and_get_url"
      } ],
      "source" : "https://github.com/tigrisdata/tigris-mcp-server/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/95787860?v=4",
      "prompts" : 0,
      "title" : "Tigris Data",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/tigris.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/tigris.json",
      "dateAdded" : "2025-05-20T20:08:35Z",
      "upstream" : "https://github.com/tigrisdata/tigris-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d2b4031f-7dbd-45d1-a72b-4c328957d8c7",
      "versionId" : "a551f449-02ad-42e8-b230-628aacdffedc"
    }
  }
}, {
  "name" : "com.docker.mcp/time",
  "description" : "Time and timezone conversion capabilities.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/time",
    "version" : "sha256:9c46a918633fb474bf8035e3ee90ebac6bcf2b18ccb00679ac4c179cba0ebfcf"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 191052,
      "stars" : 7,
      "githubStars" : 68780,
      "category" : "devops",
      "tags" : [ "time", "devops" ],
      "license" : "MIT License",
      "owner" : "modelcontextprotocol",
      "tools" : [ {
        "name" : "convert_time"
      }, {
        "name" : "get_current_time"
      } ],
      "source" : "https://github.com/modelcontextprotocol/servers/tree/2025.4.24/src/time",
      "icon" : "https://avatars.githubusercontent.com/u/182288589?s=200&v=4",
      "prompts" : 0,
      "title" : "Time (Reference)",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/time.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/time.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/modelcontextprotocol/servers",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "49573172-23f7-4e5e-af31-da425a2ee86b",
      "versionId" : "4735ec52-ba16-4392-b597-94f9778c4838"
    }
  }
}, {
  "name" : "com.docker.mcp/triplewhale",
  "description" : "Triplewhale MCP Server.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/triplewhale",
    "version" : "sha256:0d4702dce52759833481d5c6ae50848309608eb1448c8a13eeba04226461519a",
    "environmentVariables" : [ {
      "name" : "TRIPLEWHALE_API_KEY",
      "value" : "{triplewhale.api_key}",
      "variables" : {
        "triplewhale.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 1901,
      "githubStars" : 3,
      "category" : "devops",
      "tags" : [ "triplewhale", "devops" ],
      "license" : "MIT License",
      "owner" : "Triple-Whale",
      "tools" : [ {
        "name" : "moby"
      } ],
      "source" : "https://github.com/Triple-Whale/mcp-server-triplewhale/tree/master",
      "icon" : "https://avatars.githubusercontent.com/u/79388081?s=200&v=4",
      "prompts" : 0,
      "title" : "Triplewhale",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/triplewhale.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/triplewhale.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Triple-Whale/mcp-server-triplewhale",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "dceff102-1b05-4da2-89ac-3da096dd91e8",
      "versionId" : "0f8e9b70-cc09-4a15-bf86-5ff530afd81f"
    }
  }
}, {
  "name" : "com.docker.mcp/unreal-engine-mcp-server",
  "description" : "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to control Unreal Engine via Remote Control API. Built with TypeScript and designed for game development automation.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/unreal-engine-mcp-server",
    "version" : "sha256:e9d176d92fbff91167eca118819c66e1c3e96fb1cef68999274717b8d121bb0d",
    "environmentVariables" : [ {
      "name" : "UE_HOST",
      "value" : "{unreal-engine-mcp-server.ue_host}",
      "isRepeated" : false,
      "variables" : {
        "unreal-engine-mcp-server.ue_host" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Unreal Engine host address. Use: host.docker.internal for local UE on Windows/Mac Docker, 127.0.0.1 for Linux without Docker, or actual IP address (e.g., 192.168.1.100) for remote UE"
        }
      }
    }, {
      "name" : "UE_RC_HTTP_PORT",
      "value" : "{unreal-engine-mcp-server.ue_rc_http_port}",
      "isRepeated" : false,
      "variables" : {
        "unreal-engine-mcp-server.ue_rc_http_port" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Remote Control HTTP port"
        }
      }
    }, {
      "name" : "UE_RC_WS_PORT",
      "value" : "{unreal-engine-mcp-server.ue_rc_ws_port}",
      "isRepeated" : false,
      "variables" : {
        "unreal-engine-mcp-server.ue_rc_ws_port" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Remote Control WebSocket port"
        }
      }
    }, {
      "name" : "LOG_LEVEL",
      "value" : "{unreal-engine-mcp-server.log_level}",
      "isRepeated" : false,
      "variables" : {
        "unreal-engine-mcp-server.log_level" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Logging level"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 539,
      "stars" : 2,
      "githubStars" : 4,
      "category" : "games",
      "tags" : [ "games", "unreal-engine", "game-development", "automation", "editor" ],
      "license" : "MIT License",
      "owner" : "ChiR24",
      "tools" : [ {
        "name" : "manage_asset"
      }, {
        "name" : "control_actor"
      }, {
        "name" : "control_editor"
      }, {
        "name" : "manage_level"
      }, {
        "name" : "animation_physics"
      }, {
        "name" : "create_effect"
      }, {
        "name" : "manage_blueprint"
      }, {
        "name" : "build_environment"
      }, {
        "name" : "system_control"
      }, {
        "name" : "console_command"
      }, {
        "name" : "manage_rc"
      }, {
        "name" : "manage_sequence"
      }, {
        "name" : "inspect"
      } ],
      "source" : "https://github.com/ChiR24/Unreal_mcp/tree/main",
      "icon" : "https://raw.githubusercontent.com/ChiR24/Unreal_mcp/main/Public/icon.png",
      "prompts" : 0,
      "title" : "Unreal Engine MCP Server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/unreal-engine-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/unreal-engine-mcp-server.json",
      "dateAdded" : "2025-09-15T16:12:49Z",
      "upstream" : "https://github.com/ChiR24/Unreal_mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "7242bd45-6ffd-46b2-b969-3d69baa5370e",
      "versionId" : "d3b889b1-49da-4cbd-9581-8ce6ac6b6407"
    }
  }
}, {
  "name" : "com.docker.mcp/veyrax",
  "description" : "VeyraX MCP is the only connection you need to access all your tools in any MCP-compatible environment.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/veyrax",
    "version" : "sha256:257d915330722bc84dbeec0a709a2e7edf9ba83b268799d075dad5cbb53d62b7",
    "environmentVariables" : [ {
      "name" : "VEYRAX_API_KEY",
      "value" : "{veyrax.api_key}",
      "variables" : {
        "veyrax.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2106,
      "stars" : 4,
      "githubStars" : 45,
      "category" : "devops",
      "tags" : [ "veyrax", "devops" ],
      "owner" : "VeyraX",
      "tools" : [ {
        "name" : "get_flow"
      }, {
        "name" : "get_tools"
      }, {
        "name" : "tool_call"
      } ],
      "source" : "https://github.com/VeyraX/veyrax-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/201344226?s=200&v=4",
      "prompts" : 0,
      "title" : "VeyraX",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/veyrax.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/veyrax.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/VeyraX/veyrax-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "a1830834-d317-49af-a8a5-4edea9e0f013",
      "versionId" : "485a06c4-f7df-409c-a5a4-13aaa598a912"
    }
  }
}, {
  "name" : "com.docker.mcp/vizro",
  "description" : "provides tools and templates to create a functioning Vizro chart or dashboard step by step.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/vizro",
    "version" : "sha256:371774d00e41084d2b9b35db8445b6f746a071b9700f93eff26b549ff09ee797"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2883,
      "stars" : 1,
      "githubStars" : 3372,
      "category" : "data-visualization",
      "tags" : [ "dashboard", "data-visualization", "plotly", "plotly-dash", "pydantic", "python", "visualization" ],
      "license" : "Apache License 2.0",
      "owner" : "mckinsey",
      "tools" : [ {
        "name" : "get_model_json_schema"
      }, {
        "name" : "get_sample_data_info"
      }, {
        "name" : "get_vizro_chart_or_dashboard_plan"
      }, {
        "name" : "load_and_analyze_data"
      }, {
        "name" : "validate_chart_code"
      }, {
        "name" : "validate_dashboard_config"
      } ],
      "source" : "https://github.com/mckinsey/vizro/tree/main/vizro-mcp",
      "icon" : "https://avatars.githubusercontent.com/u/4265350?v=4",
      "prompts" : 0,
      "title" : "Vizro",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/vizro.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/vizro.json",
      "dateAdded" : "2025-05-29T20:04:34Z",
      "upstream" : "https://github.com/mckinsey/vizro",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "d0ede4a4-b1a7-4a76-ab13-904dd1f7e8b7",
      "versionId" : "f70fc51e-a524-4c25-930f-2065b345282a"
    }
  }
}, {
  "name" : "com.docker.mcp/vuln-nist-mcp-server",
  "description" : "This MCP server exposes tools to query the NVD/CVE REST API and return formatted text results suitable for LLM consumption via the MCP protocol. It includes automatic query chunking for large date ranges and parallel processing for improved performance.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/vuln-nist-mcp-server",
    "version" : "sha256:e5025e66c0d28a4fb4b00f4762b91309f2538ab5ade9a9d2ea10cfacf5c04645"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 290,
      "githubStars" : 2,
      "category" : "search",
      "tags" : [ "search", "cybersecurity", "vulns", "cves" ],
      "license" : "MIT License",
      "owner" : "HaroldFinchIFT",
      "tools" : [ {
        "name" : "cve_change_history"
      }, {
        "name" : "cves_by_cpe"
      }, {
        "name" : "get_cve_by_id"
      }, {
        "name" : "get_temporal_context"
      }, {
        "name" : "kevs_between"
      }, {
        "name" : "search_cves"
      } ],
      "source" : "https://github.com/HaroldFinchIFT/vuln-nist-mcp-server/tree/main",
      "icon" : "https://raw.githubusercontent.com/HaroldFinchIFT/vuln-nist-mcp-server/refs/heads/main/nvd_logo.png",
      "prompts" : 0,
      "title" : "Vuln nist mcp server",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/vuln-nist-mcp-server.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/vuln-nist-mcp-server.json",
      "dateAdded" : "2025-09-15T16:12:49Z",
      "upstream" : "https://github.com/HaroldFinchIFT/vuln-nist-mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "0ab6a7e5-2b60-42b6-b99e-7c0cbe57fe8c",
      "versionId" : "a8340fb4-50cd-41fc-bedd-f03196ddfeaa"
    }
  }
}, {
  "name" : "com.docker.mcp/wayfound",
  "description" : "Wayfound’s MCP server allows business users to govern, supervise, and improve AI Agents.",
  "version" : "v0.1.0",
  "remotes" : [ {
    "type" : "sse",
    "url" : "https://app.wayfound.ai/sse",
    "headers" : [ {
      "name" : "Authorization",
      "value" : "Bearer ${MCP_API_KEY}"
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "category" : "ai",
      "tags" : [ "ai" ],
      "license" : "Apache License 2.0",
      "owner" : "docker",
      "tools" : [ {
        "name" : "list_agents"
      }, {
        "name" : "get_agent_details"
      }, {
        "name" : "get_manager_analysis_for_agent"
      }, {
        "name" : "get_improvement_suggestions_for_agents"
      } ],
      "source" : "",
      "icon" : "https://cdn.prod.website-files.com/682a0b46722bcd80642ab415/6838cf7b36751e0ad527d851_favicon.png",
      "prompts" : 0,
      "title" : "Wayfound MCP",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/wayfound.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/wayfound.json",
      "dateAdded" : "2025-09-02T20:44:02Z",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "06a0301d-3eaa-4976-a2a3-104d75adaa14",
      "versionId" : "478d7fff-d01e-4903-9f9a-3ff7afbfd78c"
    }
  }
}, {
  "name" : "com.docker.mcp/webflow",
  "description" : "Model Context Protocol (MCP) server for the Webflow Data API.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/webflow",
    "version" : "sha256:20e73bbc57ed58fa4396eefb0e0ee7f2a60c4121521765ffb40d70da60850f13",
    "environmentVariables" : [ {
      "name" : "WEBFLOW_TOKEN",
      "value" : "{webflow.token}",
      "variables" : {
        "webflow.token" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 2058,
      "githubStars" : 82,
      "category" : "devops",
      "tags" : [ "webflow", "devops" ],
      "license" : "MIT License",
      "owner" : "webflow",
      "tools" : [ {
        "name" : "collection_fields_create_option"
      }, {
        "name" : "collection_fields_create_reference"
      }, {
        "name" : "collection_fields_create_static"
      }, {
        "name" : "collection_fields_update"
      }, {
        "name" : "collections_create"
      }, {
        "name" : "collections_get"
      }, {
        "name" : "collections_items_create_item"
      }, {
        "name" : "collections_items_create_item_live"
      }, {
        "name" : "collections_items_list_items"
      }, {
        "name" : "collections_items_publish_items"
      }, {
        "name" : "collections_items_update_items"
      }, {
        "name" : "collections_items_update_items_live"
      }, {
        "name" : "collections_list"
      }, {
        "name" : "pages_get_content"
      }, {
        "name" : "pages_get_metadata"
      }, {
        "name" : "pages_list"
      }, {
        "name" : "pages_update_page_settings"
      }, {
        "name" : "pages_update_static_content"
      }, {
        "name" : "sites_get"
      }, {
        "name" : "sites_list"
      }, {
        "name" : "sites_publish"
      } ],
      "source" : "https://github.com/slimslenderslacks/mcp-server/tree/slim/docker",
      "icon" : "https://avatars.githubusercontent.com/u/1229663?s=200&v=4",
      "prompts" : 0,
      "title" : "Webflow",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/webflow.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/webflow.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/webflow/mcp-server",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "b3b3d943-1f56-47db-bb62-4a67cd2c606b",
      "versionId" : "5541a138-644e-40cb-a069-cbf77b3c4343"
    }
  }
}, {
  "name" : "com.docker.mcp/wikipedia-mcp",
  "description" : "A Model Context Protocol (MCP) server that retrieves information from Wikipedia to provide context to LLMs.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/wikipedia-mcp",
    "version" : "sha256:e5a82a51726a9827dfe8740b78978b2c67403ff1415306535343874ab039a65e"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 45347,
      "stars" : 7,
      "githubStars" : 111,
      "category" : "devops",
      "tags" : [ "wikipedia-mcp", "devops" ],
      "license" : "MIT License",
      "owner" : "Rudra-ravi",
      "tools" : [ {
        "name" : "extract_key_facts"
      }, {
        "name" : "get_article"
      }, {
        "name" : "get_coordinates"
      }, {
        "name" : "get_links"
      }, {
        "name" : "get_related_topics"
      }, {
        "name" : "get_sections"
      }, {
        "name" : "get_summary"
      }, {
        "name" : "search_wikipedia"
      }, {
        "name" : "summarize_article_for_query"
      }, {
        "name" : "summarize_article_section"
      } ],
      "source" : "https://github.com/Rudra-ravi/wikipedia-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/56668?s=200&v=4",
      "prompts" : 0,
      "title" : "Wikipedia",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/wikipedia-mcp.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/wikipedia-mcp.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/Rudra-ravi/wikipedia-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "ff1dadf8-2325-4936-a0b5-d660d9d58f2f",
      "versionId" : "d84e6d66-4bae-4edd-8683-9b703d0f2e25"
    }
  }
}, {
  "name" : "com.docker.mcp/wolfram-alpha",
  "description" : "Connect your chat repl to wolfram alpha computational intelligence.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/wolfram-alpha",
    "version" : "sha256:4cd89d002d55d3f6f1115745b7d05a9d3e6fbb28e1e57536406b79805208571a",
    "environmentVariables" : [ {
      "name" : "WOLFRAM_API_KEY",
      "value" : "{wolfram-alpha.api_key}",
      "variables" : {
        "wolfram-alpha.api_key" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 3353,
      "stars" : 6,
      "githubStars" : 60,
      "category" : "devops",
      "tags" : [ "wolfram-alpha", "devops" ],
      "license" : "MIT License",
      "owner" : "SecretiveShell",
      "tools" : [ {
        "name" : "query-wolfram-alpha"
      } ],
      "source" : "https://github.com/SecretiveShell/MCP-wolfram-alpha/tree/master",
      "icon" : "https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/wolfram.svg",
      "prompts" : 0,
      "title" : "WolframAlpha",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/wolfram-alpha.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/wolfram-alpha.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/SecretiveShell/MCP-wolfram-alpha",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "1c0aa9b7-59a5-4ed0-9a22-2be8ce89f7c3",
      "versionId" : "c5603188-7617-45a6-a681-6e5a57086205"
    }
  }
}, {
  "name" : "com.docker.mcp/youtube_transcript",
  "description" : "Retrieves transcripts for given YouTube video URLs.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/youtube-transcript",
    "version" : "sha256:1f21b08eb52d2fd6d098c5f6da822666d723a956036f85e61357a143bd96ce91"
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 58707,
      "stars" : 15,
      "githubStars" : 81,
      "category" : "search",
      "tags" : [ "youtube", "search" ],
      "license" : "MIT License",
      "owner" : "jkawamoto",
      "tools" : [ {
        "name" : "get_transcript"
      }, {
        "name" : "get_video_info"
      } ],
      "source" : "https://github.com/jkawamoto/mcp-youtube-transcript/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/4052902?s=200&v=4",
      "prompts" : 0,
      "title" : "YouTube transcripts",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/youtube_transcript.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/youtube_transcript.json",
      "dateAdded" : "2025-05-05T20:08:35Z",
      "upstream" : "https://github.com/jkawamoto/mcp-youtube-transcript",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "3ef6316d-ac4b-446f-a388-a4dcdb724771",
      "versionId" : "a559f567-eff7-4aa6-9554-69808150ac5d"
    }
  }
}, {
  "name" : "com.docker.mcp/zerodha-kite",
  "description" : "MCP server for Zerodha Kite Connect API - India's leading stock broker trading platform. Execute trades, manage portfolios, and access real-time market data for NSE, BSE, and other Indian exchanges.",
  "version" : "v0.1.0",
  "packages" : [ {
    "registryType" : "oci",
    "transport" : {
      "type" : "stdio"
    },
    "identifier" : "mcp/zerodha-kite",
    "version" : "sha256:0668667c6890544ed1b60ef8348b4de3882f8fb16dae61b50bc922427ebab96c",
    "environmentVariables" : [ {
      "name" : "KITE_API_SECRET",
      "value" : "{zerodha-kite.api_secret}",
      "variables" : {
        "zerodha-kite.api_secret" : {
          "isSecret" : true,
          "isRequired" : true
        }
      }
    }, {
      "name" : "KITE_API_KEY",
      "value" : "{zerodha-kite.kite_api_key}",
      "isRepeated" : false,
      "variables" : {
        "zerodha-kite.kite_api_key" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Your Kite Connect API key from the developer console"
        }
      }
    }, {
      "name" : "KITE_ACCESS_TOKEN",
      "value" : "{zerodha-kite.kite_access_token}",
      "isRepeated" : false,
      "variables" : {
        "zerodha-kite.kite_access_token" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "Access token obtained after OAuth authentication (optional - can be generated at runtime)"
        }
      }
    }, {
      "name" : "KITE_REDIRECT_URL",
      "value" : "{zerodha-kite.kite_redirect_url}",
      "isRepeated" : false,
      "variables" : {
        "zerodha-kite.kite_redirect_url" : {
          "isSecret" : false,
          "format" : "string",
          "description" : "OAuth redirect URL configured in your Kite Connect app"
        }
      }
    } ]
  } ],
  "_meta" : {
    "io.modelcontextprotocol.registry/publisher-provided" : {
      "pulls" : 114,
      "category" : "finance",
      "tags" : [ "finance", "trading", "stocks", "india" ],
      "license" : "MIT License",
      "owner" : "anshuljain90",
      "tools" : [ {
        "name" : "place_order"
      }, {
        "name" : "modify_order"
      }, {
        "name" : "cancel_order"
      }, {
        "name" : "get_positions"
      }, {
        "name" : "get_holdings"
      }, {
        "name" : "get_margins"
      }, {
        "name" : "get_quote"
      }, {
        "name" : "get_historical_data"
      }, {
        "name" : "get_instruments"
      }, {
        "name" : "get_orders"
      }, {
        "name" : "get_trades"
      }, {
        "name" : "get_order_history"
      }, {
        "name" : "get_profile"
      }, {
        "name" : "get_ltp"
      }, {
        "name" : "get_market_status"
      } ],
      "source" : "https://github.com/anshuljain90/zerodha-kite-mcp/tree/main",
      "icon" : "https://avatars.githubusercontent.com/u/34680622?s=300&v=4",
      "prompts" : 0,
      "title" : "Zerodha Kite Connect",
      "readme" : "http://desktop.docker.com/mcp/catalog/v2/readme/zerodha-kite.md",
      "toolsUrl" : "http://desktop.docker.com/mcp/catalog/v2/tools/zerodha-kite.json",
      "dateAdded" : "2025-09-19T06:18:27Z",
      "upstream" : "https://github.com/anshuljain90/zerodha-kite-mcp",
      "resources" : { }
    },
    "io.modelcontextprotocol.registry/official" : {
      "serverId" : "50e8725f-0808-40d8-aab7-7f3f6b61731e",
      "versionId" : "9ca99289-b3d3-4a55-826d-5dfe560eee54"
    }
  }
} ]